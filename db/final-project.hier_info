|processor
clock => clock.IN3
res => res.IN1
servoX << servoLogic:servoController.port4
servoY << servoLogic:servoController.port5
servoZ << servoLogic:servoController.port6
IRdata => IRdata.IN1
IRswitch => writeRegW.IN1
IRswitch => led2.DATAIN
IRswitch => writeRegW.IN1
led << LessThan0.DB_MAX_OUTPUT_PORT_TYPE
led2 << IRswitch.DB_MAX_OUTPUT_PORT_TYPE
iruse[0] << register:irlatch.port4
iruse[1] << register:irlatch.port4
iruse[2] << register:irlatch.port4
iruse[3] << register:irlatch.port4
iruse[4] << register:irlatch.port4
iruse[5] << register:irlatch.port4
iruse[6] << register:irlatch.port4
iruse[7] << register:irlatch.port4


|processor|fetch:fetchStage
nextPC[0] => Add0.IN64
nextPC[0] => Add1.IN64
nextPC[0] => Add2.IN64
nextPC[0] => imemRead[0].DATAIN
nextPC[1] => Add0.IN63
nextPC[1] => Add1.IN63
nextPC[1] => Add2.IN63
nextPC[1] => Add3.IN62
nextPC[2] => Add0.IN62
nextPC[2] => Add1.IN62
nextPC[2] => Add2.IN62
nextPC[2] => Add3.IN61
nextPC[3] => Add0.IN61
nextPC[3] => Add1.IN61
nextPC[3] => Add2.IN61
nextPC[3] => Add3.IN60
nextPC[4] => Add0.IN60
nextPC[4] => Add1.IN60
nextPC[4] => Add2.IN60
nextPC[4] => Add3.IN59
nextPC[5] => Add0.IN59
nextPC[5] => Add1.IN59
nextPC[5] => Add2.IN59
nextPC[5] => Add3.IN58
nextPC[6] => Add0.IN58
nextPC[6] => Add1.IN58
nextPC[6] => Add2.IN58
nextPC[6] => Add3.IN57
nextPC[7] => Add0.IN57
nextPC[7] => Add1.IN57
nextPC[7] => Add2.IN57
nextPC[7] => Add3.IN56
nextPC[8] => Add0.IN56
nextPC[8] => Add1.IN56
nextPC[8] => Add2.IN56
nextPC[8] => Add3.IN55
nextPC[9] => Add0.IN55
nextPC[9] => Add1.IN55
nextPC[9] => Add2.IN55
nextPC[9] => Add3.IN54
nextPC[10] => Add0.IN54
nextPC[10] => Add1.IN54
nextPC[10] => Add2.IN54
nextPC[10] => Add3.IN53
nextPC[11] => Add0.IN53
nextPC[11] => Add1.IN53
nextPC[11] => Add2.IN53
nextPC[11] => Add3.IN52
nextPC[12] => Add0.IN52
nextPC[12] => Add1.IN52
nextPC[12] => Add2.IN52
nextPC[12] => Add3.IN51
nextPC[13] => Add0.IN51
nextPC[13] => Add1.IN51
nextPC[13] => Add2.IN51
nextPC[13] => Add3.IN50
nextPC[14] => Add0.IN50
nextPC[14] => Add1.IN50
nextPC[14] => Add2.IN50
nextPC[14] => Add3.IN49
nextPC[15] => Add0.IN49
nextPC[15] => Add1.IN49
nextPC[15] => Add2.IN49
nextPC[15] => Add3.IN48
nextPC[16] => Add0.IN48
nextPC[16] => Add1.IN48
nextPC[16] => Add2.IN48
nextPC[16] => Add3.IN47
nextPC[17] => Add0.IN47
nextPC[17] => Add1.IN47
nextPC[17] => Add2.IN47
nextPC[17] => Add3.IN46
nextPC[18] => Add0.IN46
nextPC[18] => Add1.IN46
nextPC[18] => Add2.IN46
nextPC[18] => Add3.IN45
nextPC[19] => Add0.IN45
nextPC[19] => Add1.IN45
nextPC[19] => Add2.IN45
nextPC[19] => Add3.IN44
nextPC[20] => Add0.IN44
nextPC[20] => Add1.IN44
nextPC[20] => Add2.IN44
nextPC[20] => Add3.IN43
nextPC[21] => Add0.IN43
nextPC[21] => Add1.IN43
nextPC[21] => Add2.IN43
nextPC[21] => Add3.IN42
nextPC[22] => Add0.IN42
nextPC[22] => Add1.IN42
nextPC[22] => Add2.IN42
nextPC[22] => Add3.IN41
nextPC[23] => Add0.IN41
nextPC[23] => Add1.IN41
nextPC[23] => Add2.IN41
nextPC[23] => Add3.IN40
nextPC[24] => Add0.IN40
nextPC[24] => Add1.IN40
nextPC[24] => Add2.IN40
nextPC[24] => Add3.IN39
nextPC[25] => Add0.IN39
nextPC[25] => Add1.IN39
nextPC[25] => Add2.IN39
nextPC[25] => Add3.IN38
nextPC[26] => Add0.IN38
nextPC[26] => Add1.IN38
nextPC[26] => Add2.IN38
nextPC[26] => Add3.IN37
nextPC[27] => Add0.IN37
nextPC[27] => Add1.IN37
nextPC[27] => Add2.IN37
nextPC[27] => Add3.IN36
nextPC[28] => Add0.IN36
nextPC[28] => Add1.IN36
nextPC[28] => Add2.IN36
nextPC[28] => Add3.IN35
nextPC[29] => Add0.IN35
nextPC[29] => Add1.IN35
nextPC[29] => Add2.IN35
nextPC[29] => Add3.IN34
nextPC[30] => Add0.IN34
nextPC[30] => Add1.IN34
nextPC[30] => Add2.IN34
nextPC[30] => Add3.IN33
nextPC[31] => Add0.IN33
nextPC[31] => Add1.IN33
nextPC[31] => Add2.IN33
nextPC[31] => Add3.IN32
advancePC => advancePC.IN1
pcOverride => updatedPC.IN1
pcOverride => updatedPC.IN1
pcOverride => imemRead.IN1
pcOverride => imemRead.IN1
pcOverride => updatedPC[0].OE
pcOverride => updatedPC[1].OE
pcOverride => updatedPC[2].OE
pcOverride => updatedPC[3].OE
pcOverride => updatedPC[4].OE
pcOverride => updatedPC[5].OE
pcOverride => updatedPC[6].OE
pcOverride => updatedPC[7].OE
pcOverride => updatedPC[8].OE
pcOverride => updatedPC[9].OE
pcOverride => updatedPC[10].OE
pcOverride => updatedPC[11].OE
pcOverride => updatedPC[12].OE
pcOverride => updatedPC[13].OE
pcOverride => updatedPC[14].OE
pcOverride => updatedPC[15].OE
pcOverride => updatedPC[16].OE
pcOverride => updatedPC[17].OE
pcOverride => updatedPC[18].OE
pcOverride => updatedPC[19].OE
pcOverride => updatedPC[20].OE
pcOverride => updatedPC[21].OE
pcOverride => updatedPC[22].OE
pcOverride => updatedPC[23].OE
pcOverride => updatedPC[24].OE
pcOverride => updatedPC[25].OE
pcOverride => updatedPC[26].OE
pcOverride => updatedPC[27].OE
pcOverride => updatedPC[28].OE
pcOverride => updatedPC[29].OE
pcOverride => updatedPC[30].OE
pcOverride => updatedPC[31].OE
pcOverride => imemRead[0].OE
pcOverride => imemRead[1].OE
pcOverride => imemRead[2].OE
pcOverride => imemRead[3].OE
pcOverride => imemRead[4].OE
pcOverride => imemRead[5].OE
pcOverride => imemRead[6].OE
pcOverride => imemRead[7].OE
pcOverride => imemRead[8].OE
pcOverride => imemRead[9].OE
pcOverride => imemRead[10].OE
pcOverride => imemRead[11].OE
jumpCtrl[0] => updatedPC.IN0
jumpCtrl[0] => imemRead.IN0
jumpCtrl[1] => updatedPC.IN1
jumpCtrl[1] => imemRead.IN1
branchCtrl[0] => updatedPC.IN0
branchCtrl[0] => imemRead.IN0
branchCtrl[1] => updatedPC.IN1
branchCtrl[1] => imemRead.IN1
clock => clock.IN1
reset => reset.IN1
incrPC[0] <= cla:addOne.sum
incrPC[1] <= cla:addOne.sum
incrPC[2] <= cla:addOne.sum
incrPC[3] <= cla:addOne.sum
incrPC[4] <= cla:addOne.sum
incrPC[5] <= cla:addOne.sum
incrPC[6] <= cla:addOne.sum
incrPC[7] <= cla:addOne.sum
incrPC[8] <= cla:addOne.sum
incrPC[9] <= cla:addOne.sum
incrPC[10] <= cla:addOne.sum
incrPC[11] <= cla:addOne.sum
incrPC[12] <= cla:addOne.sum
incrPC[13] <= cla:addOne.sum
incrPC[14] <= cla:addOne.sum
incrPC[15] <= cla:addOne.sum
incrPC[16] <= cla:addOne.sum
incrPC[17] <= cla:addOne.sum
incrPC[18] <= cla:addOne.sum
incrPC[19] <= cla:addOne.sum
incrPC[20] <= cla:addOne.sum
incrPC[21] <= cla:addOne.sum
incrPC[22] <= cla:addOne.sum
incrPC[23] <= cla:addOne.sum
incrPC[24] <= cla:addOne.sum
incrPC[25] <= cla:addOne.sum
incrPC[26] <= cla:addOne.sum
incrPC[27] <= cla:addOne.sum
incrPC[28] <= cla:addOne.sum
incrPC[29] <= cla:addOne.sum
incrPC[30] <= cla:addOne.sum
incrPC[31] <= cla:addOne.sum
insn[0] <= imem:myimem.q
insn[1] <= imem:myimem.q
insn[2] <= imem:myimem.q
insn[3] <= imem:myimem.q
insn[4] <= imem:myimem.q
insn[5] <= imem:myimem.q
insn[6] <= imem:myimem.q
insn[7] <= imem:myimem.q
insn[8] <= imem:myimem.q
insn[9] <= imem:myimem.q
insn[10] <= imem:myimem.q
insn[11] <= imem:myimem.q
insn[12] <= imem:myimem.q
insn[13] <= imem:myimem.q
insn[14] <= imem:myimem.q
insn[15] <= imem:myimem.q
insn[16] <= imem:myimem.q
insn[17] <= imem:myimem.q
insn[18] <= imem:myimem.q
insn[19] <= imem:myimem.q
insn[20] <= imem:myimem.q
insn[21] <= imem:myimem.q
insn[22] <= imem:myimem.q
insn[23] <= imem:myimem.q
insn[24] <= imem:myimem.q
insn[25] <= imem:myimem.q
insn[26] <= imem:myimem.q
insn[27] <= imem:myimem.q
insn[28] <= imem:myimem.q
insn[29] <= imem:myimem.q
insn[30] <= imem:myimem.q
insn[31] <= imem:myimem.q


|processor|fetch:fetchStage|register:pc
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|imem:myimem
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a
q[16] <= altsyncram:altsyncram_component.q_a
q[17] <= altsyncram:altsyncram_component.q_a
q[18] <= altsyncram:altsyncram_component.q_a
q[19] <= altsyncram:altsyncram_component.q_a
q[20] <= altsyncram:altsyncram_component.q_a
q[21] <= altsyncram:altsyncram_component.q_a
q[22] <= altsyncram:altsyncram_component.q_a
q[23] <= altsyncram:altsyncram_component.q_a
q[24] <= altsyncram:altsyncram_component.q_a
q[25] <= altsyncram:altsyncram_component.q_a
q[26] <= altsyncram:altsyncram_component.q_a
q[27] <= altsyncram:altsyncram_component.q_a
q[28] <= altsyncram:altsyncram_component.q_a
q[29] <= altsyncram:altsyncram_component.q_a
q[30] <= altsyncram:altsyncram_component.q_a
q[31] <= altsyncram:altsyncram_component.q_a


|processor|fetch:fetchStage|imem:myimem|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_a[16] => ~NO_FANOUT~
data_a[17] => ~NO_FANOUT~
data_a[18] => ~NO_FANOUT~
data_a[19] => ~NO_FANOUT~
data_a[20] => ~NO_FANOUT~
data_a[21] => ~NO_FANOUT~
data_a[22] => ~NO_FANOUT~
data_a[23] => ~NO_FANOUT~
data_a[24] => ~NO_FANOUT~
data_a[25] => ~NO_FANOUT~
data_a[26] => ~NO_FANOUT~
data_a[27] => ~NO_FANOUT~
data_a[28] => ~NO_FANOUT~
data_a[29] => ~NO_FANOUT~
data_a[30] => ~NO_FANOUT~
data_a[31] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_m591:auto_generated.address_a[0]
address_a[1] => altsyncram_m591:auto_generated.address_a[1]
address_a[2] => altsyncram_m591:auto_generated.address_a[2]
address_a[3] => altsyncram_m591:auto_generated.address_a[3]
address_a[4] => altsyncram_m591:auto_generated.address_a[4]
address_a[5] => altsyncram_m591:auto_generated.address_a[5]
address_a[6] => altsyncram_m591:auto_generated.address_a[6]
address_a[7] => altsyncram_m591:auto_generated.address_a[7]
address_a[8] => altsyncram_m591:auto_generated.address_a[8]
address_a[9] => altsyncram_m591:auto_generated.address_a[9]
address_a[10] => altsyncram_m591:auto_generated.address_a[10]
address_a[11] => altsyncram_m591:auto_generated.address_a[11]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m591:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_m591:auto_generated.q_a[0]
q_a[1] <= altsyncram_m591:auto_generated.q_a[1]
q_a[2] <= altsyncram_m591:auto_generated.q_a[2]
q_a[3] <= altsyncram_m591:auto_generated.q_a[3]
q_a[4] <= altsyncram_m591:auto_generated.q_a[4]
q_a[5] <= altsyncram_m591:auto_generated.q_a[5]
q_a[6] <= altsyncram_m591:auto_generated.q_a[6]
q_a[7] <= altsyncram_m591:auto_generated.q_a[7]
q_a[8] <= altsyncram_m591:auto_generated.q_a[8]
q_a[9] <= altsyncram_m591:auto_generated.q_a[9]
q_a[10] <= altsyncram_m591:auto_generated.q_a[10]
q_a[11] <= altsyncram_m591:auto_generated.q_a[11]
q_a[12] <= altsyncram_m591:auto_generated.q_a[12]
q_a[13] <= altsyncram_m591:auto_generated.q_a[13]
q_a[14] <= altsyncram_m591:auto_generated.q_a[14]
q_a[15] <= altsyncram_m591:auto_generated.q_a[15]
q_a[16] <= altsyncram_m591:auto_generated.q_a[16]
q_a[17] <= altsyncram_m591:auto_generated.q_a[17]
q_a[18] <= altsyncram_m591:auto_generated.q_a[18]
q_a[19] <= altsyncram_m591:auto_generated.q_a[19]
q_a[20] <= altsyncram_m591:auto_generated.q_a[20]
q_a[21] <= altsyncram_m591:auto_generated.q_a[21]
q_a[22] <= altsyncram_m591:auto_generated.q_a[22]
q_a[23] <= altsyncram_m591:auto_generated.q_a[23]
q_a[24] <= altsyncram_m591:auto_generated.q_a[24]
q_a[25] <= altsyncram_m591:auto_generated.q_a[25]
q_a[26] <= altsyncram_m591:auto_generated.q_a[26]
q_a[27] <= altsyncram_m591:auto_generated.q_a[27]
q_a[28] <= altsyncram_m591:auto_generated.q_a[28]
q_a[29] <= altsyncram_m591:auto_generated.q_a[29]
q_a[30] <= altsyncram_m591:auto_generated.q_a[30]
q_a[31] <= altsyncram_m591:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|processor|fetch:fetchStage|imem:myimem|altsyncram:altsyncram_component|altsyncram_m591:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[8] => ram_block1a12.PORTAADDR8
address_a[8] => ram_block1a13.PORTAADDR8
address_a[8] => ram_block1a14.PORTAADDR8
address_a[8] => ram_block1a15.PORTAADDR8
address_a[8] => ram_block1a16.PORTAADDR8
address_a[8] => ram_block1a17.PORTAADDR8
address_a[8] => ram_block1a18.PORTAADDR8
address_a[8] => ram_block1a19.PORTAADDR8
address_a[8] => ram_block1a20.PORTAADDR8
address_a[8] => ram_block1a21.PORTAADDR8
address_a[8] => ram_block1a22.PORTAADDR8
address_a[8] => ram_block1a23.PORTAADDR8
address_a[8] => ram_block1a24.PORTAADDR8
address_a[8] => ram_block1a25.PORTAADDR8
address_a[8] => ram_block1a26.PORTAADDR8
address_a[8] => ram_block1a27.PORTAADDR8
address_a[8] => ram_block1a28.PORTAADDR8
address_a[8] => ram_block1a29.PORTAADDR8
address_a[8] => ram_block1a30.PORTAADDR8
address_a[8] => ram_block1a31.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[9] => ram_block1a12.PORTAADDR9
address_a[9] => ram_block1a13.PORTAADDR9
address_a[9] => ram_block1a14.PORTAADDR9
address_a[9] => ram_block1a15.PORTAADDR9
address_a[9] => ram_block1a16.PORTAADDR9
address_a[9] => ram_block1a17.PORTAADDR9
address_a[9] => ram_block1a18.PORTAADDR9
address_a[9] => ram_block1a19.PORTAADDR9
address_a[9] => ram_block1a20.PORTAADDR9
address_a[9] => ram_block1a21.PORTAADDR9
address_a[9] => ram_block1a22.PORTAADDR9
address_a[9] => ram_block1a23.PORTAADDR9
address_a[9] => ram_block1a24.PORTAADDR9
address_a[9] => ram_block1a25.PORTAADDR9
address_a[9] => ram_block1a26.PORTAADDR9
address_a[9] => ram_block1a27.PORTAADDR9
address_a[9] => ram_block1a28.PORTAADDR9
address_a[9] => ram_block1a29.PORTAADDR9
address_a[9] => ram_block1a30.PORTAADDR9
address_a[9] => ram_block1a31.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[10] => ram_block1a12.PORTAADDR10
address_a[10] => ram_block1a13.PORTAADDR10
address_a[10] => ram_block1a14.PORTAADDR10
address_a[10] => ram_block1a15.PORTAADDR10
address_a[10] => ram_block1a16.PORTAADDR10
address_a[10] => ram_block1a17.PORTAADDR10
address_a[10] => ram_block1a18.PORTAADDR10
address_a[10] => ram_block1a19.PORTAADDR10
address_a[10] => ram_block1a20.PORTAADDR10
address_a[10] => ram_block1a21.PORTAADDR10
address_a[10] => ram_block1a22.PORTAADDR10
address_a[10] => ram_block1a23.PORTAADDR10
address_a[10] => ram_block1a24.PORTAADDR10
address_a[10] => ram_block1a25.PORTAADDR10
address_a[10] => ram_block1a26.PORTAADDR10
address_a[10] => ram_block1a27.PORTAADDR10
address_a[10] => ram_block1a28.PORTAADDR10
address_a[10] => ram_block1a29.PORTAADDR10
address_a[10] => ram_block1a30.PORTAADDR10
address_a[10] => ram_block1a31.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[11] => ram_block1a12.PORTAADDR11
address_a[11] => ram_block1a13.PORTAADDR11
address_a[11] => ram_block1a14.PORTAADDR11
address_a[11] => ram_block1a15.PORTAADDR11
address_a[11] => ram_block1a16.PORTAADDR11
address_a[11] => ram_block1a17.PORTAADDR11
address_a[11] => ram_block1a18.PORTAADDR11
address_a[11] => ram_block1a19.PORTAADDR11
address_a[11] => ram_block1a20.PORTAADDR11
address_a[11] => ram_block1a21.PORTAADDR11
address_a[11] => ram_block1a22.PORTAADDR11
address_a[11] => ram_block1a23.PORTAADDR11
address_a[11] => ram_block1a24.PORTAADDR11
address_a[11] => ram_block1a25.PORTAADDR11
address_a[11] => ram_block1a26.PORTAADDR11
address_a[11] => ram_block1a27.PORTAADDR11
address_a[11] => ram_block1a28.PORTAADDR11
address_a[11] => ram_block1a29.PORTAADDR11
address_a[11] => ram_block1a30.PORTAADDR11
address_a[11] => ram_block1a31.PORTAADDR11
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT


|processor|register:irlatch
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|register:irlatch|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|register:irlatch|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|decode:decodeInsn
insn[0] => insn[0].IN1
insn[1] => insn[1].IN1
insn[2] => insn[2].IN1
insn[3] => insn[3].IN1
insn[4] => insn[4].IN1
insn[5] => insn[5].IN1
insn[6] => insn[6].IN1
insn[7] => insn[7].IN1
insn[8] => insn[8].IN1
insn[9] => insn[9].IN1
insn[10] => insn[10].IN1
insn[11] => insn[11].IN1
insn[12] => insn[12].IN1
insn[13] => insn[13].IN1
insn[14] => insn[14].IN1
insn[15] => insn[15].IN1
insn[16] => insn[16].IN1
insn[17] => target[17].DATAIN
insn[17] => rs[0].DATAIN
insn[18] => target[18].DATAIN
insn[18] => rs[1].DATAIN
insn[19] => target[19].DATAIN
insn[19] => rs[2].DATAIN
insn[20] => target[20].DATAIN
insn[20] => rs[3].DATAIN
insn[21] => target[21].DATAIN
insn[21] => rs[4].DATAIN
insn[22] => target[22].DATAIN
insn[22] => rd[0].DATAIN
insn[23] => target[23].DATAIN
insn[23] => rd[1].DATAIN
insn[24] => target[24].DATAIN
insn[24] => rd[2].DATAIN
insn[25] => target[25].DATAIN
insn[25] => rd[3].DATAIN
insn[26] => target[26].DATAIN
insn[26] => rd[4].DATAIN
insn[27] => opcode[0].DATAIN
insn[27] => aluOp.IN1
insn[28] => opcode[1].DATAIN
insn[28] => aluOp.IN1
insn[29] => opcode[2].DATAIN
insn[29] => aluOp.IN1
insn[30] => opcode[3].DATAIN
insn[30] => aluOp.IN0
insn[31] => opcode[4].DATAIN
insn[31] => aluOp.IN1
opcode[0] <= insn[27].DB_MAX_OUTPUT_PORT_TYPE
opcode[1] <= insn[28].DB_MAX_OUTPUT_PORT_TYPE
opcode[2] <= insn[29].DB_MAX_OUTPUT_PORT_TYPE
opcode[3] <= insn[30].DB_MAX_OUTPUT_PORT_TYPE
opcode[4] <= insn[31].DB_MAX_OUTPUT_PORT_TYPE
rd[0] <= insn[22].DB_MAX_OUTPUT_PORT_TYPE
rd[1] <= insn[23].DB_MAX_OUTPUT_PORT_TYPE
rd[2] <= insn[24].DB_MAX_OUTPUT_PORT_TYPE
rd[3] <= insn[25].DB_MAX_OUTPUT_PORT_TYPE
rd[4] <= insn[26].DB_MAX_OUTPUT_PORT_TYPE
rs[0] <= insn[17].DB_MAX_OUTPUT_PORT_TYPE
rs[1] <= insn[18].DB_MAX_OUTPUT_PORT_TYPE
rs[2] <= insn[19].DB_MAX_OUTPUT_PORT_TYPE
rs[3] <= insn[20].DB_MAX_OUTPUT_PORT_TYPE
rs[4] <= insn[21].DB_MAX_OUTPUT_PORT_TYPE
rt[0] <= insn[12].DB_MAX_OUTPUT_PORT_TYPE
rt[1] <= insn[13].DB_MAX_OUTPUT_PORT_TYPE
rt[2] <= insn[14].DB_MAX_OUTPUT_PORT_TYPE
rt[3] <= insn[15].DB_MAX_OUTPUT_PORT_TYPE
rt[4] <= insn[16].DB_MAX_OUTPUT_PORT_TYPE
imm[0] <= signExtender:extend.port1
imm[1] <= signExtender:extend.port1
imm[2] <= signExtender:extend.port1
imm[3] <= signExtender:extend.port1
imm[4] <= signExtender:extend.port1
imm[5] <= signExtender:extend.port1
imm[6] <= signExtender:extend.port1
imm[7] <= signExtender:extend.port1
imm[8] <= signExtender:extend.port1
imm[9] <= signExtender:extend.port1
imm[10] <= signExtender:extend.port1
imm[11] <= signExtender:extend.port1
imm[12] <= signExtender:extend.port1
imm[13] <= signExtender:extend.port1
imm[14] <= signExtender:extend.port1
imm[15] <= signExtender:extend.port1
imm[16] <= signExtender:extend.port1
imm[17] <= signExtender:extend.port1
imm[18] <= signExtender:extend.port1
imm[19] <= signExtender:extend.port1
imm[20] <= signExtender:extend.port1
imm[21] <= signExtender:extend.port1
imm[22] <= signExtender:extend.port1
imm[23] <= signExtender:extend.port1
imm[24] <= signExtender:extend.port1
imm[25] <= signExtender:extend.port1
imm[26] <= signExtender:extend.port1
imm[27] <= signExtender:extend.port1
imm[28] <= signExtender:extend.port1
imm[29] <= signExtender:extend.port1
imm[30] <= signExtender:extend.port1
imm[31] <= signExtender:extend.port1
shamt[0] <= insn[7].DB_MAX_OUTPUT_PORT_TYPE
shamt[1] <= insn[8].DB_MAX_OUTPUT_PORT_TYPE
shamt[2] <= insn[9].DB_MAX_OUTPUT_PORT_TYPE
shamt[3] <= insn[10].DB_MAX_OUTPUT_PORT_TYPE
shamt[4] <= insn[11].DB_MAX_OUTPUT_PORT_TYPE
aluOp[0] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[1] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[2] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[3] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[4] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
target[0] <= insn[0].DB_MAX_OUTPUT_PORT_TYPE
target[1] <= insn[1].DB_MAX_OUTPUT_PORT_TYPE
target[2] <= insn[2].DB_MAX_OUTPUT_PORT_TYPE
target[3] <= insn[3].DB_MAX_OUTPUT_PORT_TYPE
target[4] <= insn[4].DB_MAX_OUTPUT_PORT_TYPE
target[5] <= insn[5].DB_MAX_OUTPUT_PORT_TYPE
target[6] <= insn[6].DB_MAX_OUTPUT_PORT_TYPE
target[7] <= insn[7].DB_MAX_OUTPUT_PORT_TYPE
target[8] <= insn[8].DB_MAX_OUTPUT_PORT_TYPE
target[9] <= insn[9].DB_MAX_OUTPUT_PORT_TYPE
target[10] <= insn[10].DB_MAX_OUTPUT_PORT_TYPE
target[11] <= insn[11].DB_MAX_OUTPUT_PORT_TYPE
target[12] <= insn[12].DB_MAX_OUTPUT_PORT_TYPE
target[13] <= insn[13].DB_MAX_OUTPUT_PORT_TYPE
target[14] <= insn[14].DB_MAX_OUTPUT_PORT_TYPE
target[15] <= insn[15].DB_MAX_OUTPUT_PORT_TYPE
target[16] <= insn[16].DB_MAX_OUTPUT_PORT_TYPE
target[17] <= insn[17].DB_MAX_OUTPUT_PORT_TYPE
target[18] <= insn[18].DB_MAX_OUTPUT_PORT_TYPE
target[19] <= insn[19].DB_MAX_OUTPUT_PORT_TYPE
target[20] <= insn[20].DB_MAX_OUTPUT_PORT_TYPE
target[21] <= insn[21].DB_MAX_OUTPUT_PORT_TYPE
target[22] <= insn[22].DB_MAX_OUTPUT_PORT_TYPE
target[23] <= insn[23].DB_MAX_OUTPUT_PORT_TYPE
target[24] <= insn[24].DB_MAX_OUTPUT_PORT_TYPE
target[25] <= insn[25].DB_MAX_OUTPUT_PORT_TYPE
target[26] <= insn[26].DB_MAX_OUTPUT_PORT_TYPE
target[27] <= <GND>
target[28] <= <GND>
target[29] <= <GND>
target[30] <= <GND>
target[31] <= <GND>


|processor|decode:decodeInsn|signExtender:extend
a[0] => sxa[0].DATAIN
a[1] => sxa[1].DATAIN
a[2] => sxa[2].DATAIN
a[3] => sxa[3].DATAIN
a[4] => sxa[4].DATAIN
a[5] => sxa[5].DATAIN
a[6] => sxa[6].DATAIN
a[7] => sxa[7].DATAIN
a[8] => sxa[8].DATAIN
a[9] => sxa[9].DATAIN
a[10] => sxa[10].DATAIN
a[11] => sxa[11].DATAIN
a[12] => sxa[12].DATAIN
a[13] => sxa[13].DATAIN
a[14] => sxa[14].DATAIN
a[15] => sxa[15].DATAIN
a[16] => sxa[17].DATAIN
a[16] => sxa[16].DATAIN
sxa[0] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
sxa[1] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
sxa[2] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
sxa[3] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
sxa[4] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
sxa[5] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
sxa[6] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
sxa[7] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
sxa[8] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
sxa[9] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
sxa[10] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
sxa[11] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
sxa[12] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
sxa[13] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
sxa[14] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
sxa[15] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
sxa[16] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
sxa[17] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
sxa[18] <= <GND>
sxa[19] <= <GND>
sxa[20] <= <GND>
sxa[21] <= <GND>
sxa[22] <= <GND>
sxa[23] <= <GND>
sxa[24] <= <GND>
sxa[25] <= <GND>
sxa[26] <= <GND>
sxa[27] <= <GND>
sxa[28] <= <GND>
sxa[29] <= <GND>
sxa[30] <= <GND>
sxa[31] <= <GND>


|processor|control:ctrlSignals
opcode[0] => regWriteEn.IN0
opcode[0] => setxCtrl.IN1
opcode[0] => storeData.IN1
opcode[0] => jumpCtrl.IN1
opcode[0] => jumpCtrl.IN1
opcode[0] => aluInB.IN1
opcode[0] => Equal1.IN4
opcode[0] => jumpCtrl.IN1
opcode[0] => regWriteEn.IN1
opcode[0] => loadData.IN1
opcode[0] => branchCtrl.IN1
opcode[0] => branchCtrl.IN1
opcode[0] => branchCtrl.IN1
opcode[0] => Equal2.IN1
opcode[0] => Equal3.IN4
opcode[0] => Equal4.IN2
opcode[0] => Equal5.IN1
opcode[0] => Equal6.IN4
opcode[0] => Equal7.IN2
opcode[1] => regWriteEn.IN0
opcode[1] => regWriteEn.IN0
opcode[1] => storeData.IN1
opcode[1] => branchCtrl.IN1
opcode[1] => branchCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => Equal1.IN3
opcode[1] => setxCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => regWriteEn.IN1
opcode[1] => loadData.IN1
opcode[1] => Equal2.IN4
opcode[1] => Equal3.IN1
opcode[1] => Equal4.IN1
opcode[1] => Equal5.IN4
opcode[1] => Equal6.IN1
opcode[1] => Equal7.IN1
opcode[2] => regWriteEn.IN1
opcode[2] => regWriteEn.IN1
opcode[2] => setxCtrl.IN1
opcode[2] => branchCtrl.IN0
opcode[2] => jumpCtrl.IN1
opcode[2] => Equal1.IN1
opcode[2] => jumpCtrl.IN1
opcode[2] => loadData.IN1
opcode[2] => Equal2.IN3
opcode[2] => Equal3.IN3
opcode[2] => Equal4.IN4
opcode[2] => Equal5.IN3
opcode[2] => Equal6.IN3
opcode[2] => Equal7.IN4
opcode[3] => loadData.IN0
opcode[3] => Equal1.IN0
opcode[3] => setxCtrl.IN0
opcode[3] => jumpCtrl.IN0
opcode[3] => branchCtrl.IN1
opcode[3] => Equal2.IN0
opcode[3] => Equal3.IN0
opcode[3] => Equal4.IN0
opcode[3] => Equal5.IN0
opcode[3] => Equal6.IN0
opcode[3] => Equal7.IN0
opcode[4] => setxCtrl.IN1
opcode[4] => Equal1.IN2
opcode[4] => jumpCtrl.IN1
opcode[4] => regWriteEn.IN1
opcode[4] => loadData.IN1
opcode[4] => Equal2.IN2
opcode[4] => Equal3.IN2
opcode[4] => Equal4.IN3
opcode[4] => Equal5.IN2
opcode[4] => Equal6.IN2
opcode[4] => Equal7.IN3
aluOp[0] => ~NO_FANOUT~
aluOp[1] => ~NO_FANOUT~
aluOp[2] => ~NO_FANOUT~
aluOp[3] => ~NO_FANOUT~
aluOp[4] => ~NO_FANOUT~
regWriteEn <= regWriteEn.DB_MAX_OUTPUT_PORT_TYPE
aluInB <= aluInB.DB_MAX_OUTPUT_PORT_TYPE
jumpCtrl[0] <= jumpCtrl.DB_MAX_OUTPUT_PORT_TYPE
jumpCtrl[1] <= jumpCtrl.DB_MAX_OUTPUT_PORT_TYPE
branchCtrl[0] <= branchCtrl.DB_MAX_OUTPUT_PORT_TYPE
branchCtrl[1] <= branchCtrl.DB_MAX_OUTPUT_PORT_TYPE
loadData <= loadData.DB_MAX_OUTPUT_PORT_TYPE
storeData <= storeData.DB_MAX_OUTPUT_PORT_TYPE
setxCtrl <= setxCtrl.DB_MAX_OUTPUT_PORT_TYPE
servo[0] <= servo[0].DB_MAX_OUTPUT_PORT_TYPE
servo[1] <= servo[1].DB_MAX_OUTPUT_PORT_TYPE
IRCtrl <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
irData0[0] => irDatareg[0].DATAIN
irData0[1] => irDatareg[1].DATAIN
irData0[2] => irDatareg[2].DATAIN
irData0[3] => irDatareg[3].DATAIN
irData0[4] => irDatareg[4].DATAIN
irData0[5] => irDatareg[5].DATAIN
irData0[6] => irDatareg[6].DATAIN
irData0[7] => irDatareg[7].DATAIN
irData0[8] => irDatareg[8].DATAIN
irData0[9] => irDatareg[9].DATAIN
irData0[10] => irDatareg[10].DATAIN
irData0[11] => irDatareg[11].DATAIN
irData0[12] => irDatareg[12].DATAIN
irData0[13] => irDatareg[13].DATAIN
irData0[14] => irDatareg[14].DATAIN
irData0[15] => irDatareg[15].DATAIN
irData0[16] => irDatareg[16].DATAIN
irData0[17] => irDatareg[17].DATAIN
irData0[18] => irDatareg[18].DATAIN
irData0[19] => irDatareg[19].DATAIN
irData0[20] => irDatareg[20].DATAIN
irData0[21] => irDatareg[21].DATAIN
irData0[22] => irDatareg[22].DATAIN
irData0[23] => irDatareg[23].DATAIN
irData0[24] => irDatareg[24].DATAIN
irData0[25] => irDatareg[25].DATAIN
irData0[26] => irDatareg[26].DATAIN
irData0[27] => irDatareg[27].DATAIN
irData0[28] => irDatareg[28].DATAIN
irData0[29] => irDatareg[29].DATAIN
irData0[30] => irDatareg[30].DATAIN
irData0[31] => irDatareg[31].DATAIN
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
servo0[0] => servoReg[0].DATAIN
servo0[1] => servoReg[1].DATAIN
ir0 => IRreg.DATAIN
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
irData1[0] <= irDatareg[0].DB_MAX_OUTPUT_PORT_TYPE
irData1[1] <= irDatareg[1].DB_MAX_OUTPUT_PORT_TYPE
irData1[2] <= irDatareg[2].DB_MAX_OUTPUT_PORT_TYPE
irData1[3] <= irDatareg[3].DB_MAX_OUTPUT_PORT_TYPE
irData1[4] <= irDatareg[4].DB_MAX_OUTPUT_PORT_TYPE
irData1[5] <= irDatareg[5].DB_MAX_OUTPUT_PORT_TYPE
irData1[6] <= irDatareg[6].DB_MAX_OUTPUT_PORT_TYPE
irData1[7] <= irDatareg[7].DB_MAX_OUTPUT_PORT_TYPE
irData1[8] <= irDatareg[8].DB_MAX_OUTPUT_PORT_TYPE
irData1[9] <= irDatareg[9].DB_MAX_OUTPUT_PORT_TYPE
irData1[10] <= irDatareg[10].DB_MAX_OUTPUT_PORT_TYPE
irData1[11] <= irDatareg[11].DB_MAX_OUTPUT_PORT_TYPE
irData1[12] <= irDatareg[12].DB_MAX_OUTPUT_PORT_TYPE
irData1[13] <= irDatareg[13].DB_MAX_OUTPUT_PORT_TYPE
irData1[14] <= irDatareg[14].DB_MAX_OUTPUT_PORT_TYPE
irData1[15] <= irDatareg[15].DB_MAX_OUTPUT_PORT_TYPE
irData1[16] <= irDatareg[16].DB_MAX_OUTPUT_PORT_TYPE
irData1[17] <= irDatareg[17].DB_MAX_OUTPUT_PORT_TYPE
irData1[18] <= irDatareg[18].DB_MAX_OUTPUT_PORT_TYPE
irData1[19] <= irDatareg[19].DB_MAX_OUTPUT_PORT_TYPE
irData1[20] <= irDatareg[20].DB_MAX_OUTPUT_PORT_TYPE
irData1[21] <= irDatareg[21].DB_MAX_OUTPUT_PORT_TYPE
irData1[22] <= irDatareg[22].DB_MAX_OUTPUT_PORT_TYPE
irData1[23] <= irDatareg[23].DB_MAX_OUTPUT_PORT_TYPE
irData1[24] <= irDatareg[24].DB_MAX_OUTPUT_PORT_TYPE
irData1[25] <= irDatareg[25].DB_MAX_OUTPUT_PORT_TYPE
irData1[26] <= irDatareg[26].DB_MAX_OUTPUT_PORT_TYPE
irData1[27] <= irDatareg[27].DB_MAX_OUTPUT_PORT_TYPE
irData1[28] <= irDatareg[28].DB_MAX_OUTPUT_PORT_TYPE
irData1[29] <= irDatareg[29].DB_MAX_OUTPUT_PORT_TYPE
irData1[30] <= irDatareg[30].DB_MAX_OUTPUT_PORT_TYPE
irData1[31] <= irDatareg[31].DB_MAX_OUTPUT_PORT_TYPE
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
servo1[0] <= servoReg[0].DB_MAX_OUTPUT_PORT_TYPE
servo1[1] <= servoReg[1].DB_MAX_OUTPUT_PORT_TYPE
ir1 <= IRreg.DB_MAX_OUTPUT_PORT_TYPE
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchFD|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:dxLoad
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:rsConflict
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:rdConflict
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:fdStore
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile
rd[0] => rd[0].IN2
rd[1] => rd[1].IN2
rd[2] => rd[2].IN2
rd[3] => rd[3].IN2
rd[4] => rd[4].IN2
rs[0] => rs[0].IN3
rs[1] => rs[1].IN3
rs[2] => rs[2].IN3
rs[3] => rs[3].IN3
rs[4] => rs[4].IN3
rt[0] => rt[0].IN1
rt[1] => rt[1].IN1
rt[2] => rt[2].IN1
rt[3] => rt[3].IN1
rt[4] => rt[4].IN1
writeReg[0] => ~NO_FANOUT~
writeReg[1] => ~NO_FANOUT~
writeReg[2] => ~NO_FANOUT~
writeReg[3] => ~NO_FANOUT~
writeReg[4] => ~NO_FANOUT~
regWriteVal[0] => ~NO_FANOUT~
regWriteVal[1] => ~NO_FANOUT~
regWriteVal[2] => ~NO_FANOUT~
regWriteVal[3] => ~NO_FANOUT~
regWriteVal[4] => ~NO_FANOUT~
regWriteVal[5] => ~NO_FANOUT~
regWriteVal[6] => ~NO_FANOUT~
regWriteVal[7] => ~NO_FANOUT~
regWriteVal[8] => ~NO_FANOUT~
regWriteVal[9] => ~NO_FANOUT~
regWriteVal[10] => ~NO_FANOUT~
regWriteVal[11] => ~NO_FANOUT~
regWriteVal[12] => ~NO_FANOUT~
regWriteVal[13] => ~NO_FANOUT~
regWriteVal[14] => ~NO_FANOUT~
regWriteVal[15] => ~NO_FANOUT~
regWriteVal[16] => ~NO_FANOUT~
regWriteVal[17] => ~NO_FANOUT~
regWriteVal[18] => ~NO_FANOUT~
regWriteVal[19] => ~NO_FANOUT~
regWriteVal[20] => ~NO_FANOUT~
regWriteVal[21] => ~NO_FANOUT~
regWriteVal[22] => ~NO_FANOUT~
regWriteVal[23] => ~NO_FANOUT~
regWriteVal[24] => ~NO_FANOUT~
regWriteVal[25] => ~NO_FANOUT~
regWriteVal[26] => ~NO_FANOUT~
regWriteVal[27] => ~NO_FANOUT~
regWriteVal[28] => ~NO_FANOUT~
regWriteVal[29] => ~NO_FANOUT~
regWriteVal[30] => ~NO_FANOUT~
regWriteVal[31] => ~NO_FANOUT~
pc[0] => ~NO_FANOUT~
pc[1] => ~NO_FANOUT~
pc[2] => ~NO_FANOUT~
pc[3] => ~NO_FANOUT~
pc[4] => ~NO_FANOUT~
pc[5] => ~NO_FANOUT~
pc[6] => ~NO_FANOUT~
pc[7] => ~NO_FANOUT~
pc[8] => ~NO_FANOUT~
pc[9] => ~NO_FANOUT~
pc[10] => ~NO_FANOUT~
pc[11] => ~NO_FANOUT~
pc[12] => ~NO_FANOUT~
pc[13] => ~NO_FANOUT~
pc[14] => ~NO_FANOUT~
pc[15] => ~NO_FANOUT~
pc[16] => ~NO_FANOUT~
pc[17] => ~NO_FANOUT~
pc[18] => ~NO_FANOUT~
pc[19] => ~NO_FANOUT~
pc[20] => ~NO_FANOUT~
pc[21] => ~NO_FANOUT~
pc[22] => ~NO_FANOUT~
pc[23] => ~NO_FANOUT~
pc[24] => ~NO_FANOUT~
pc[25] => ~NO_FANOUT~
pc[26] => ~NO_FANOUT~
pc[27] => ~NO_FANOUT~
pc[28] => ~NO_FANOUT~
pc[29] => ~NO_FANOUT~
pc[30] => ~NO_FANOUT~
pc[31] => ~NO_FANOUT~
regWriteEn => regWriteEn.IN1
branchCtrl[0] => branchCtrl[0].IN2
branchCtrl[1] => branchCtrl[1].IN2
jumpCtrl[0] => readRegB.IN0
jumpCtrl[0] => readRegB.IN0
jumpCtrl[1] => readRegB.IN1
jumpCtrl[1] => readRegB.IN1
storeData => readRegB[0].OE
storeData => readRegB[1].OE
storeData => readRegB[2].OE
storeData => readRegB[3].OE
storeData => readRegB[4].OE
storeData => readRegB.IN1
clock => clock.IN1
reset => reset.IN1
regAVal[0] <= regfile:registerfile.data_readRegA
regAVal[1] <= regfile:registerfile.data_readRegA
regAVal[2] <= regfile:registerfile.data_readRegA
regAVal[3] <= regfile:registerfile.data_readRegA
regAVal[4] <= regfile:registerfile.data_readRegA
regAVal[5] <= regfile:registerfile.data_readRegA
regAVal[6] <= regfile:registerfile.data_readRegA
regAVal[7] <= regfile:registerfile.data_readRegA
regAVal[8] <= regfile:registerfile.data_readRegA
regAVal[9] <= regfile:registerfile.data_readRegA
regAVal[10] <= regfile:registerfile.data_readRegA
regAVal[11] <= regfile:registerfile.data_readRegA
regAVal[12] <= regfile:registerfile.data_readRegA
regAVal[13] <= regfile:registerfile.data_readRegA
regAVal[14] <= regfile:registerfile.data_readRegA
regAVal[15] <= regfile:registerfile.data_readRegA
regAVal[16] <= regfile:registerfile.data_readRegA
regAVal[17] <= regfile:registerfile.data_readRegA
regAVal[18] <= regfile:registerfile.data_readRegA
regAVal[19] <= regfile:registerfile.data_readRegA
regAVal[20] <= regfile:registerfile.data_readRegA
regAVal[21] <= regfile:registerfile.data_readRegA
regAVal[22] <= regfile:registerfile.data_readRegA
regAVal[23] <= regfile:registerfile.data_readRegA
regAVal[24] <= regfile:registerfile.data_readRegA
regAVal[25] <= regfile:registerfile.data_readRegA
regAVal[26] <= regfile:registerfile.data_readRegA
regAVal[27] <= regfile:registerfile.data_readRegA
regAVal[28] <= regfile:registerfile.data_readRegA
regAVal[29] <= regfile:registerfile.data_readRegA
regAVal[30] <= regfile:registerfile.data_readRegA
regAVal[31] <= regfile:registerfile.data_readRegA
regBVal[0] <= regfile:registerfile.data_readRegB
regBVal[1] <= regfile:registerfile.data_readRegB
regBVal[2] <= regfile:registerfile.data_readRegB
regBVal[3] <= regfile:registerfile.data_readRegB
regBVal[4] <= regfile:registerfile.data_readRegB
regBVal[5] <= regfile:registerfile.data_readRegB
regBVal[6] <= regfile:registerfile.data_readRegB
regBVal[7] <= regfile:registerfile.data_readRegB
regBVal[8] <= regfile:registerfile.data_readRegB
regBVal[9] <= regfile:registerfile.data_readRegB
regBVal[10] <= regfile:registerfile.data_readRegB
regBVal[11] <= regfile:registerfile.data_readRegB
regBVal[12] <= regfile:registerfile.data_readRegB
regBVal[13] <= regfile:registerfile.data_readRegB
regBVal[14] <= regfile:registerfile.data_readRegB
regBVal[15] <= regfile:registerfile.data_readRegB
regBVal[16] <= regfile:registerfile.data_readRegB
regBVal[17] <= regfile:registerfile.data_readRegB
regBVal[18] <= regfile:registerfile.data_readRegB
regBVal[19] <= regfile:registerfile.data_readRegB
regBVal[20] <= regfile:registerfile.data_readRegB
regBVal[21] <= regfile:registerfile.data_readRegB
regBVal[22] <= regfile:registerfile.data_readRegB
regBVal[23] <= regfile:registerfile.data_readRegB
regBVal[24] <= regfile:registerfile.data_readRegB
regBVal[25] <= regfile:registerfile.data_readRegB
regBVal[26] <= regfile:registerfile.data_readRegB
regBVal[27] <= regfile:registerfile.data_readRegB
regBVal[28] <= regfile:registerfile.data_readRegB
regBVal[29] <= regfile:registerfile.data_readRegB
regBVal[30] <= regfile:registerfile.data_readRegB
regBVal[31] <= regfile:registerfile.data_readRegB


|processor|regFileLogic:myRegFile|fiveBitmux4to1:regA
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|fiveBitmux4to1:regB
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile
clock => clock.IN31
ctrl_writeEnable => regLoop[1].writeSelect.IN1
ctrl_writeEnable => regLoop[2].writeSelect.IN1
ctrl_writeEnable => regLoop[3].writeSelect.IN1
ctrl_writeEnable => regLoop[4].writeSelect.IN1
ctrl_writeEnable => regLoop[5].writeSelect.IN1
ctrl_writeEnable => regLoop[6].writeSelect.IN1
ctrl_writeEnable => regLoop[7].writeSelect.IN1
ctrl_writeEnable => regLoop[8].writeSelect.IN1
ctrl_writeEnable => regLoop[9].writeSelect.IN1
ctrl_writeEnable => regLoop[10].writeSelect.IN1
ctrl_writeEnable => regLoop[11].writeSelect.IN1
ctrl_writeEnable => regLoop[12].writeSelect.IN1
ctrl_writeEnable => regLoop[13].writeSelect.IN1
ctrl_writeEnable => regLoop[14].writeSelect.IN1
ctrl_writeEnable => regLoop[15].writeSelect.IN1
ctrl_writeEnable => regLoop[16].writeSelect.IN1
ctrl_writeEnable => regLoop[17].writeSelect.IN1
ctrl_writeEnable => regLoop[18].writeSelect.IN1
ctrl_writeEnable => regLoop[19].writeSelect.IN1
ctrl_writeEnable => regLoop[20].writeSelect.IN1
ctrl_writeEnable => regLoop[21].writeSelect.IN1
ctrl_writeEnable => regLoop[22].writeSelect.IN1
ctrl_writeEnable => regLoop[23].writeSelect.IN1
ctrl_writeEnable => regLoop[24].writeSelect.IN1
ctrl_writeEnable => regLoop[25].writeSelect.IN1
ctrl_writeEnable => regLoop[26].writeSelect.IN1
ctrl_writeEnable => regLoop[27].writeSelect.IN1
ctrl_writeEnable => regLoop[28].writeSelect.IN1
ctrl_writeEnable => regLoop[29].writeSelect.IN1
ctrl_writeEnable => regLoop[30].writeSelect.IN1
ctrl_writeEnable => regLoop[31].writeSelect.IN1
ctrl_reset => ctrl_reset.IN31
ctrl_writeReg[0] => ctrl_writeReg[0].IN1
ctrl_writeReg[1] => ctrl_writeReg[1].IN1
ctrl_writeReg[2] => ctrl_writeReg[2].IN1
ctrl_writeReg[3] => ctrl_writeReg[3].IN1
ctrl_writeReg[4] => ctrl_writeReg[4].IN1
ctrl_readRegA[0] => ctrl_readRegA[0].IN1
ctrl_readRegA[1] => ctrl_readRegA[1].IN1
ctrl_readRegA[2] => ctrl_readRegA[2].IN1
ctrl_readRegA[3] => ctrl_readRegA[3].IN1
ctrl_readRegA[4] => ctrl_readRegA[4].IN1
ctrl_readRegB[0] => ctrl_readRegB[0].IN1
ctrl_readRegB[1] => ctrl_readRegB[1].IN1
ctrl_readRegB[2] => ctrl_readRegB[2].IN1
ctrl_readRegB[3] => ctrl_readRegB[3].IN1
ctrl_readRegB[4] => ctrl_readRegB[4].IN1
data_writeReg[0] => data_writeReg[0].IN31
data_writeReg[1] => data_writeReg[1].IN31
data_writeReg[2] => data_writeReg[2].IN31
data_writeReg[3] => data_writeReg[3].IN31
data_writeReg[4] => data_writeReg[4].IN31
data_writeReg[5] => data_writeReg[5].IN31
data_writeReg[6] => data_writeReg[6].IN31
data_writeReg[7] => data_writeReg[7].IN31
data_writeReg[8] => data_writeReg[8].IN31
data_writeReg[9] => data_writeReg[9].IN31
data_writeReg[10] => data_writeReg[10].IN31
data_writeReg[11] => data_writeReg[11].IN31
data_writeReg[12] => data_writeReg[12].IN31
data_writeReg[13] => data_writeReg[13].IN31
data_writeReg[14] => data_writeReg[14].IN31
data_writeReg[15] => data_writeReg[15].IN31
data_writeReg[16] => data_writeReg[16].IN31
data_writeReg[17] => data_writeReg[17].IN31
data_writeReg[18] => data_writeReg[18].IN31
data_writeReg[19] => data_writeReg[19].IN31
data_writeReg[20] => data_writeReg[20].IN31
data_writeReg[21] => data_writeReg[21].IN31
data_writeReg[22] => data_writeReg[22].IN31
data_writeReg[23] => data_writeReg[23].IN31
data_writeReg[24] => data_writeReg[24].IN31
data_writeReg[25] => data_writeReg[25].IN31
data_writeReg[26] => data_writeReg[26].IN31
data_writeReg[27] => data_writeReg[27].IN31
data_writeReg[28] => data_writeReg[28].IN31
data_writeReg[29] => data_writeReg[29].IN31
data_writeReg[30] => data_writeReg[30].IN31
data_writeReg[31] => data_writeReg[31].IN31
data_readRegA[0] <= data_readRegA[0].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[1] <= data_readRegA[1].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[2] <= data_readRegA[2].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[3] <= data_readRegA[3].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[4] <= data_readRegA[4].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[5] <= data_readRegA[5].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[6] <= data_readRegA[6].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[7] <= data_readRegA[7].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[8] <= data_readRegA[8].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[9] <= data_readRegA[9].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[10] <= data_readRegA[10].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[11] <= data_readRegA[11].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[12] <= data_readRegA[12].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[13] <= data_readRegA[13].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[14] <= data_readRegA[14].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[15] <= data_readRegA[15].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[16] <= data_readRegA[16].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[17] <= data_readRegA[17].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[18] <= data_readRegA[18].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[19] <= data_readRegA[19].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[20] <= data_readRegA[20].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[21] <= data_readRegA[21].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[22] <= data_readRegA[22].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[23] <= data_readRegA[23].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[24] <= data_readRegA[24].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[25] <= data_readRegA[25].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[26] <= data_readRegA[26].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[27] <= data_readRegA[27].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[28] <= data_readRegA[28].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[29] <= data_readRegA[29].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[30] <= data_readRegA[30].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[31] <= data_readRegA[31].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[0] <= data_readRegB[0].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[1] <= data_readRegB[1].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[2] <= data_readRegB[2].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[3] <= data_readRegB[3].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[4] <= data_readRegB[4].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[5] <= data_readRegB[5].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[6] <= data_readRegB[6].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[7] <= data_readRegB[7].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[8] <= data_readRegB[8].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[9] <= data_readRegB[9].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[10] <= data_readRegB[10].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[11] <= data_readRegB[11].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[12] <= data_readRegB[12].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[13] <= data_readRegB[13].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[14] <= data_readRegB[14].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[15] <= data_readRegB[15].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[16] <= data_readRegB[16].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[17] <= data_readRegB[17].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[18] <= data_readRegB[18].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[19] <= data_readRegB[19].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[20] <= data_readRegB[20].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[21] <= data_readRegB[21].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[22] <= data_readRegB[22].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[23] <= data_readRegB[23].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[24] <= data_readRegB[24].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[25] <= data_readRegB[25].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[26] <= data_readRegB[26].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[27] <= data_readRegB[27].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[28] <= data_readRegB[28].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[29] <= data_readRegB[29].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[30] <= data_readRegB[30].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[31] <= data_readRegB[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderA
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderB
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderW
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
irData0[0] => irDatareg[0].DATAIN
irData0[1] => irDatareg[1].DATAIN
irData0[2] => irDatareg[2].DATAIN
irData0[3] => irDatareg[3].DATAIN
irData0[4] => irDatareg[4].DATAIN
irData0[5] => irDatareg[5].DATAIN
irData0[6] => irDatareg[6].DATAIN
irData0[7] => irDatareg[7].DATAIN
irData0[8] => irDatareg[8].DATAIN
irData0[9] => irDatareg[9].DATAIN
irData0[10] => irDatareg[10].DATAIN
irData0[11] => irDatareg[11].DATAIN
irData0[12] => irDatareg[12].DATAIN
irData0[13] => irDatareg[13].DATAIN
irData0[14] => irDatareg[14].DATAIN
irData0[15] => irDatareg[15].DATAIN
irData0[16] => irDatareg[16].DATAIN
irData0[17] => irDatareg[17].DATAIN
irData0[18] => irDatareg[18].DATAIN
irData0[19] => irDatareg[19].DATAIN
irData0[20] => irDatareg[20].DATAIN
irData0[21] => irDatareg[21].DATAIN
irData0[22] => irDatareg[22].DATAIN
irData0[23] => irDatareg[23].DATAIN
irData0[24] => irDatareg[24].DATAIN
irData0[25] => irDatareg[25].DATAIN
irData0[26] => irDatareg[26].DATAIN
irData0[27] => irDatareg[27].DATAIN
irData0[28] => irDatareg[28].DATAIN
irData0[29] => irDatareg[29].DATAIN
irData0[30] => irDatareg[30].DATAIN
irData0[31] => irDatareg[31].DATAIN
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
servo0[0] => servoReg[0].DATAIN
servo0[1] => servoReg[1].DATAIN
ir0 => IRreg.DATAIN
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
irData1[0] <= irDatareg[0].DB_MAX_OUTPUT_PORT_TYPE
irData1[1] <= irDatareg[1].DB_MAX_OUTPUT_PORT_TYPE
irData1[2] <= irDatareg[2].DB_MAX_OUTPUT_PORT_TYPE
irData1[3] <= irDatareg[3].DB_MAX_OUTPUT_PORT_TYPE
irData1[4] <= irDatareg[4].DB_MAX_OUTPUT_PORT_TYPE
irData1[5] <= irDatareg[5].DB_MAX_OUTPUT_PORT_TYPE
irData1[6] <= irDatareg[6].DB_MAX_OUTPUT_PORT_TYPE
irData1[7] <= irDatareg[7].DB_MAX_OUTPUT_PORT_TYPE
irData1[8] <= irDatareg[8].DB_MAX_OUTPUT_PORT_TYPE
irData1[9] <= irDatareg[9].DB_MAX_OUTPUT_PORT_TYPE
irData1[10] <= irDatareg[10].DB_MAX_OUTPUT_PORT_TYPE
irData1[11] <= irDatareg[11].DB_MAX_OUTPUT_PORT_TYPE
irData1[12] <= irDatareg[12].DB_MAX_OUTPUT_PORT_TYPE
irData1[13] <= irDatareg[13].DB_MAX_OUTPUT_PORT_TYPE
irData1[14] <= irDatareg[14].DB_MAX_OUTPUT_PORT_TYPE
irData1[15] <= irDatareg[15].DB_MAX_OUTPUT_PORT_TYPE
irData1[16] <= irDatareg[16].DB_MAX_OUTPUT_PORT_TYPE
irData1[17] <= irDatareg[17].DB_MAX_OUTPUT_PORT_TYPE
irData1[18] <= irDatareg[18].DB_MAX_OUTPUT_PORT_TYPE
irData1[19] <= irDatareg[19].DB_MAX_OUTPUT_PORT_TYPE
irData1[20] <= irDatareg[20].DB_MAX_OUTPUT_PORT_TYPE
irData1[21] <= irDatareg[21].DB_MAX_OUTPUT_PORT_TYPE
irData1[22] <= irDatareg[22].DB_MAX_OUTPUT_PORT_TYPE
irData1[23] <= irDatareg[23].DB_MAX_OUTPUT_PORT_TYPE
irData1[24] <= irDatareg[24].DB_MAX_OUTPUT_PORT_TYPE
irData1[25] <= irDatareg[25].DB_MAX_OUTPUT_PORT_TYPE
irData1[26] <= irDatareg[26].DB_MAX_OUTPUT_PORT_TYPE
irData1[27] <= irDatareg[27].DB_MAX_OUTPUT_PORT_TYPE
irData1[28] <= irDatareg[28].DB_MAX_OUTPUT_PORT_TYPE
irData1[29] <= irDatareg[29].DB_MAX_OUTPUT_PORT_TYPE
irData1[30] <= irDatareg[30].DB_MAX_OUTPUT_PORT_TYPE
irData1[31] <= irDatareg[31].DB_MAX_OUTPUT_PORT_TYPE
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
servo1[0] <= servoReg[0].DB_MAX_OUTPUT_PORT_TYPE
servo1[1] <= servoReg[1].DB_MAX_OUTPUT_PORT_TYPE
ir1 <= IRreg.DB_MAX_OUTPUT_PORT_TYPE
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchDX|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassAn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassAs
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassAn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassAs
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|mux4to1:bypALUa
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassB
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassBn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|mux4to1:bypALUb
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn
regAVal[0] => regAVal[0].IN1
regAVal[1] => regAVal[1].IN1
regAVal[2] => regAVal[2].IN1
regAVal[3] => regAVal[3].IN1
regAVal[4] => regAVal[4].IN1
regAVal[5] => regAVal[5].IN1
regAVal[6] => regAVal[6].IN1
regAVal[7] => regAVal[7].IN1
regAVal[8] => regAVal[8].IN1
regAVal[9] => regAVal[9].IN1
regAVal[10] => regAVal[10].IN1
regAVal[11] => regAVal[11].IN1
regAVal[12] => regAVal[12].IN1
regAVal[13] => regAVal[13].IN1
regAVal[14] => regAVal[14].IN1
regAVal[15] => regAVal[15].IN1
regAVal[16] => regAVal[16].IN1
regAVal[17] => regAVal[17].IN1
regAVal[18] => regAVal[18].IN1
regAVal[19] => regAVal[19].IN1
regAVal[20] => regAVal[20].IN1
regAVal[21] => regAVal[21].IN1
regAVal[22] => regAVal[22].IN1
regAVal[23] => regAVal[23].IN1
regAVal[24] => regAVal[24].IN1
regAVal[25] => regAVal[25].IN1
regAVal[26] => regAVal[26].IN1
regAVal[27] => regAVal[27].IN1
regAVal[28] => regAVal[28].IN1
regAVal[29] => regAVal[29].IN1
regAVal[30] => regAVal[30].IN1
regAVal[31] => regAVal[31].IN1
regBVal[0] => regBVal[0].IN1
regBVal[1] => regBVal[1].IN1
regBVal[2] => regBVal[2].IN1
regBVal[3] => regBVal[3].IN1
regBVal[4] => regBVal[4].IN1
regBVal[5] => regBVal[5].IN1
regBVal[6] => regBVal[6].IN1
regBVal[7] => regBVal[7].IN1
regBVal[8] => regBVal[8].IN1
regBVal[9] => regBVal[9].IN1
regBVal[10] => regBVal[10].IN1
regBVal[11] => regBVal[11].IN1
regBVal[12] => regBVal[12].IN1
regBVal[13] => regBVal[13].IN1
regBVal[14] => regBVal[14].IN1
regBVal[15] => regBVal[15].IN1
regBVal[16] => regBVal[16].IN1
regBVal[17] => regBVal[17].IN1
regBVal[18] => regBVal[18].IN1
regBVal[19] => regBVal[19].IN1
regBVal[20] => regBVal[20].IN1
regBVal[21] => regBVal[21].IN1
regBVal[22] => regBVal[22].IN1
regBVal[23] => regBVal[23].IN1
regBVal[24] => regBVal[24].IN1
regBVal[25] => regBVal[25].IN1
regBVal[26] => regBVal[26].IN1
regBVal[27] => regBVal[27].IN1
regBVal[28] => regBVal[28].IN1
regBVal[29] => regBVal[29].IN1
regBVal[30] => regBVal[30].IN1
regBVal[31] => regBVal[31].IN1
imm[0] => operandB[0].DATAIN
imm[1] => operandB[1].DATAIN
imm[2] => operandB[2].DATAIN
imm[3] => operandB[3].DATAIN
imm[4] => operandB[4].DATAIN
imm[5] => operandB[5].DATAIN
imm[6] => operandB[6].DATAIN
imm[7] => operandB[7].DATAIN
imm[8] => operandB[8].DATAIN
imm[9] => operandB[9].DATAIN
imm[10] => operandB[10].DATAIN
imm[11] => operandB[11].DATAIN
imm[12] => operandB[12].DATAIN
imm[13] => operandB[13].DATAIN
imm[14] => operandB[14].DATAIN
imm[15] => operandB[15].DATAIN
imm[16] => operandB[16].DATAIN
imm[17] => operandB[17].DATAIN
imm[18] => operandB[18].DATAIN
imm[19] => operandB[19].DATAIN
imm[20] => operandB[20].DATAIN
imm[21] => operandB[21].DATAIN
imm[22] => operandB[22].DATAIN
imm[23] => operandB[23].DATAIN
imm[24] => operandB[24].DATAIN
imm[25] => operandB[25].DATAIN
imm[26] => operandB[26].DATAIN
imm[27] => operandB[27].DATAIN
imm[28] => operandB[28].DATAIN
imm[29] => operandB[29].DATAIN
imm[30] => operandB[30].DATAIN
imm[31] => operandB[31].DATAIN
pc[0] => operandA.DATAB
pc[1] => operandA.DATAB
pc[2] => operandA.DATAB
pc[3] => operandA.DATAB
pc[4] => operandA.DATAB
pc[5] => operandA.DATAB
pc[6] => operandA.DATAB
pc[7] => operandA.DATAB
pc[8] => operandA.DATAB
pc[9] => operandA.DATAB
pc[10] => operandA.DATAB
pc[11] => operandA.DATAB
pc[12] => operandA.DATAB
pc[13] => operandA.DATAB
pc[14] => operandA.DATAB
pc[15] => operandA.DATAB
pc[16] => operandA.DATAB
pc[17] => operandA.DATAB
pc[18] => operandA.DATAB
pc[19] => operandA.DATAB
pc[20] => operandA.DATAB
pc[21] => operandA.DATAB
pc[22] => operandA.DATAB
pc[23] => operandA.DATAB
pc[24] => operandA.DATAB
pc[25] => operandA.DATAB
pc[26] => operandA.DATAB
pc[27] => operandA.DATAB
pc[28] => operandA.DATAB
pc[29] => operandA.DATAB
pc[30] => operandA.DATAB
pc[31] => operandA.DATAB
aluOp[0] => aluOp[0].IN2
aluOp[1] => aluOp[1].IN2
aluOp[2] => aluOp[2].IN2
aluOp[3] => aluOp[3].IN2
aluOp[4] => aluOp[4].IN2
shamt[0] => shamt[0].IN1
shamt[1] => shamt[1].IN1
shamt[2] => shamt[2].IN1
shamt[3] => shamt[3].IN1
shamt[4] => shamt[4].IN1
opcode[0] => opcode[0].IN1
opcode[1] => opcode[1].IN1
opcode[2] => opcode[2].IN1
opcode[3] => opcode[3].IN1
opcode[4] => opcode[4].IN1
aluInB => operandB.IN1
aluInB => operandB.IN1
aluInB => operandB.IN1
jumpCtrl[0] => operandA.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[1] => operandB.IN1
jumpCtrl[1] => operandB.IN1
jumpCtrl[1] => operandA.IN1
jumpCtrl[1] => operandB.IN1
setxCtrl => outputSel[1].IN1
target[0] => target[0].IN1
target[1] => target[1].IN1
target[2] => target[2].IN1
target[3] => target[3].IN1
target[4] => target[4].IN1
target[5] => target[5].IN1
target[6] => target[6].IN1
target[7] => target[7].IN1
target[8] => target[8].IN1
target[9] => target[9].IN1
target[10] => target[10].IN1
target[11] => target[11].IN1
target[12] => target[12].IN1
target[13] => target[13].IN1
target[14] => target[14].IN1
target[15] => target[15].IN1
target[16] => target[16].IN1
target[17] => target[17].IN1
target[18] => target[18].IN1
target[19] => target[19].IN1
target[20] => target[20].IN1
target[21] => target[21].IN1
target[22] => target[22].IN1
target[23] => target[23].IN1
target[24] => target[24].IN1
target[25] => target[25].IN1
target[26] => target[26].IN1
target[27] => target[27].IN1
target[28] => target[28].IN1
target[29] => target[29].IN1
target[30] => target[30].IN1
target[31] => target[31].IN1
clock => clock.IN2
reset => comb.IN1
result[0] <= mux4to1:execOut.out
result[1] <= mux4to1:execOut.out
result[2] <= mux4to1:execOut.out
result[3] <= mux4to1:execOut.out
result[4] <= mux4to1:execOut.out
result[5] <= mux4to1:execOut.out
result[6] <= mux4to1:execOut.out
result[7] <= mux4to1:execOut.out
result[8] <= mux4to1:execOut.out
result[9] <= mux4to1:execOut.out
result[10] <= mux4to1:execOut.out
result[11] <= mux4to1:execOut.out
result[12] <= mux4to1:execOut.out
result[13] <= mux4to1:execOut.out
result[14] <= mux4to1:execOut.out
result[15] <= mux4to1:execOut.out
result[16] <= mux4to1:execOut.out
result[17] <= mux4to1:execOut.out
result[18] <= mux4to1:execOut.out
result[19] <= mux4to1:execOut.out
result[20] <= mux4to1:execOut.out
result[21] <= mux4to1:execOut.out
result[22] <= mux4to1:execOut.out
result[23] <= mux4to1:execOut.out
result[24] <= mux4to1:execOut.out
result[25] <= mux4to1:execOut.out
result[26] <= mux4to1:execOut.out
result[27] <= mux4to1:execOut.out
result[28] <= mux4to1:execOut.out
result[29] <= mux4to1:execOut.out
result[30] <= mux4to1:execOut.out
result[31] <= mux4to1:execOut.out
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
error <= outputSel[0].DB_MAX_OUTPUT_PORT_TYPE
argsLessThan <= alu:myALU.isLessThan
argsNotEqual <= alu:myALU.isNotEqual


|processor|execute:executeInsn|errorCodeFinder:errFinder
aluOp[0] => add.IN0
aluOp[0] => mul.IN0
aluOp[0] => div.IN0
aluOp[0] => sub.IN0
aluOp[1] => add.IN1
aluOp[1] => sub.IN1
aluOp[1] => div.IN1
aluOp[1] => mul.IN1
aluOp[2] => add.IN2
aluOp[2] => sub.IN2
aluOp[2] => div.IN2
aluOp[2] => mul.IN2
aluOp[3] => add.IN3
aluOp[3] => sub.IN3
aluOp[3] => mul.IN3
aluOp[3] => div.IN3
aluOp[4] => add.IN4
aluOp[4] => sub.IN4
aluOp[4] => mul.IN4
aluOp[4] => div.IN4
opcode[0] => addi.IN0
opcode[1] => addi.IN1
opcode[2] => addi.IN2
opcode[3] => addi.IN3
opcode[4] => addi.IN4
code[0] <= code[0].DB_MAX_OUTPUT_PORT_TYPE
code[1] <= code[1].DB_MAX_OUTPUT_PORT_TYPE
code[2] <= code[2].DB_MAX_OUTPUT_PORT_TYPE
code[3] <= code[3].DB_MAX_OUTPUT_PORT_TYPE
code[4] <= code[4].DB_MAX_OUTPUT_PORT_TYPE
code[5] <= code[5].DB_MAX_OUTPUT_PORT_TYPE
code[6] <= code[6].DB_MAX_OUTPUT_PORT_TYPE
code[7] <= code[7].DB_MAX_OUTPUT_PORT_TYPE
code[8] <= code[8].DB_MAX_OUTPUT_PORT_TYPE
code[9] <= code[9].DB_MAX_OUTPUT_PORT_TYPE
code[10] <= code[10].DB_MAX_OUTPUT_PORT_TYPE
code[11] <= code[11].DB_MAX_OUTPUT_PORT_TYPE
code[12] <= code[12].DB_MAX_OUTPUT_PORT_TYPE
code[13] <= code[13].DB_MAX_OUTPUT_PORT_TYPE
code[14] <= code[14].DB_MAX_OUTPUT_PORT_TYPE
code[15] <= code[15].DB_MAX_OUTPUT_PORT_TYPE
code[16] <= code[16].DB_MAX_OUTPUT_PORT_TYPE
code[17] <= code[17].DB_MAX_OUTPUT_PORT_TYPE
code[18] <= code[18].DB_MAX_OUTPUT_PORT_TYPE
code[19] <= code[19].DB_MAX_OUTPUT_PORT_TYPE
code[20] <= code[20].DB_MAX_OUTPUT_PORT_TYPE
code[21] <= code[21].DB_MAX_OUTPUT_PORT_TYPE
code[22] <= code[22].DB_MAX_OUTPUT_PORT_TYPE
code[23] <= code[23].DB_MAX_OUTPUT_PORT_TYPE
code[24] <= code[24].DB_MAX_OUTPUT_PORT_TYPE
code[25] <= code[25].DB_MAX_OUTPUT_PORT_TYPE
code[26] <= code[26].DB_MAX_OUTPUT_PORT_TYPE
code[27] <= code[27].DB_MAX_OUTPUT_PORT_TYPE
code[28] <= code[28].DB_MAX_OUTPUT_PORT_TYPE
code[29] <= code[29].DB_MAX_OUTPUT_PORT_TYPE
code[30] <= code[30].DB_MAX_OUTPUT_PORT_TYPE
code[31] <= code[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|ecedffe:multdivcount
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU
data_operandA[0] => data_operandA[0].IN6
data_operandA[1] => data_operandA[1].IN6
data_operandA[2] => data_operandA[2].IN6
data_operandA[3] => data_operandA[3].IN6
data_operandA[4] => data_operandA[4].IN6
data_operandA[5] => data_operandA[5].IN6
data_operandA[6] => data_operandA[6].IN6
data_operandA[7] => data_operandA[7].IN6
data_operandA[8] => data_operandA[8].IN6
data_operandA[9] => data_operandA[9].IN6
data_operandA[10] => data_operandA[10].IN6
data_operandA[11] => data_operandA[11].IN6
data_operandA[12] => data_operandA[12].IN6
data_operandA[13] => data_operandA[13].IN6
data_operandA[14] => data_operandA[14].IN6
data_operandA[15] => data_operandA[15].IN6
data_operandA[16] => data_operandA[16].IN6
data_operandA[17] => data_operandA[17].IN6
data_operandA[18] => data_operandA[18].IN6
data_operandA[19] => data_operandA[19].IN6
data_operandA[20] => data_operandA[20].IN6
data_operandA[21] => data_operandA[21].IN6
data_operandA[22] => data_operandA[22].IN6
data_operandA[23] => data_operandA[23].IN6
data_operandA[24] => data_operandA[24].IN6
data_operandA[25] => data_operandA[25].IN6
data_operandA[26] => data_operandA[26].IN6
data_operandA[27] => data_operandA[27].IN6
data_operandA[28] => data_operandA[28].IN6
data_operandA[29] => data_operandA[29].IN6
data_operandA[30] => data_operandA[30].IN6
data_operandA[31] => data_operandA[31].IN6
data_operandB[0] => data_operandB[0].IN4
data_operandB[1] => data_operandB[1].IN4
data_operandB[2] => data_operandB[2].IN4
data_operandB[3] => data_operandB[3].IN4
data_operandB[4] => data_operandB[4].IN4
data_operandB[5] => data_operandB[5].IN4
data_operandB[6] => data_operandB[6].IN4
data_operandB[7] => data_operandB[7].IN4
data_operandB[8] => data_operandB[8].IN4
data_operandB[9] => data_operandB[9].IN4
data_operandB[10] => data_operandB[10].IN4
data_operandB[11] => data_operandB[11].IN4
data_operandB[12] => data_operandB[12].IN4
data_operandB[13] => data_operandB[13].IN4
data_operandB[14] => data_operandB[14].IN4
data_operandB[15] => data_operandB[15].IN4
data_operandB[16] => data_operandB[16].IN4
data_operandB[17] => data_operandB[17].IN4
data_operandB[18] => data_operandB[18].IN4
data_operandB[19] => data_operandB[19].IN4
data_operandB[20] => data_operandB[20].IN4
data_operandB[21] => data_operandB[21].IN4
data_operandB[22] => data_operandB[22].IN4
data_operandB[23] => data_operandB[23].IN4
data_operandB[24] => data_operandB[24].IN4
data_operandB[25] => data_operandB[25].IN4
data_operandB[26] => data_operandB[26].IN4
data_operandB[27] => data_operandB[27].IN4
data_operandB[28] => data_operandB[28].IN4
data_operandB[29] => data_operandB[29].IN4
data_operandB[30] => data_operandB[30].IN4
data_operandB[31] => data_operandB[31].IN4
ctrl_ALUopcode[0] => ctrl_ALUopcode[0].IN1
ctrl_ALUopcode[1] => ctrl_ALUopcode[1].IN1
ctrl_ALUopcode[2] => ctrl_ALUopcode[2].IN1
ctrl_ALUopcode[3] => ctrl_ALUopcode[3].IN1
ctrl_ALUopcode[4] => ctrl_ALUopcode[4].IN1
ctrl_shiftamt[0] => ctrl_shiftamt[0].IN2
ctrl_shiftamt[1] => ctrl_shiftamt[1].IN2
ctrl_shiftamt[2] => ctrl_shiftamt[2].IN2
ctrl_shiftamt[3] => ctrl_shiftamt[3].IN2
ctrl_shiftamt[4] => ctrl_shiftamt[4].IN2
data_result[0] <= data_result[0].DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result[1].DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result[2].DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result[3].DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result[4].DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result[5].DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result[6].DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result[7].DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result[8].DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result[9].DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result[10].DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result[11].DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result[12].DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result[13].DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result[14].DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result[15].DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result[16].DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result[17].DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result[18].DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result[19].DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result[20].DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result[21].DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result[22].DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result[23].DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result[24].DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result[25].DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result[26].DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result[27].DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result[28].DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result[29].DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result[30].DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result[31].DB_MAX_OUTPUT_PORT_TYPE
isNotEqual <= nequalityChecker:neq.notEqual
isLessThan <= cla:adder.lessThan
overflow <= cla:adder.ovf


|processor|execute:executeInsn|alu:myALU|decoder:outPicker
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|bitwiseAnd:andMod
a[0] => and0.IN0
a[1] => and1.IN0
a[2] => and2.IN0
a[3] => and3.IN0
a[4] => and4.IN0
a[5] => and5.IN0
a[6] => and6.IN0
a[7] => and7.IN0
a[8] => and8.IN0
a[9] => and9.IN0
a[10] => and10.IN0
a[11] => and11.IN0
a[12] => and12.IN0
a[13] => and13.IN0
a[14] => and14.IN0
a[15] => and15.IN0
a[16] => and16.IN0
a[17] => and17.IN0
a[18] => and18.IN0
a[19] => and19.IN0
a[20] => and20.IN0
a[21] => and21.IN0
a[22] => and22.IN0
a[23] => and23.IN0
a[24] => and24.IN0
a[25] => and25.IN0
a[26] => and26.IN0
a[27] => and27.IN0
a[28] => and28.IN0
a[29] => and29.IN0
a[30] => and30.IN0
a[31] => and31.IN0
b[0] => and0.IN1
b[1] => and1.IN1
b[2] => and2.IN1
b[3] => and3.IN1
b[4] => and4.IN1
b[5] => and5.IN1
b[6] => and6.IN1
b[7] => and7.IN1
b[8] => and8.IN1
b[9] => and9.IN1
b[10] => and10.IN1
b[11] => and11.IN1
b[12] => and12.IN1
b[13] => and13.IN1
b[14] => and14.IN1
b[15] => and15.IN1
b[16] => and16.IN1
b[17] => and17.IN1
b[18] => and18.IN1
b[19] => and19.IN1
b[20] => and20.IN1
b[21] => and21.IN1
b[22] => and22.IN1
b[23] => and23.IN1
b[24] => and24.IN1
b[25] => and25.IN1
b[26] => and26.IN1
b[27] => and27.IN1
b[28] => and28.IN1
b[29] => and29.IN1
b[30] => and30.IN1
b[31] => and31.IN1
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|bitwiseOr:orMod
a[0] => or0.IN0
a[1] => or1.IN0
a[2] => or2.IN0
a[3] => or3.IN0
a[4] => or4.IN0
a[5] => or5.IN0
a[6] => or6.IN0
a[7] => or7.IN0
a[8] => or8.IN0
a[9] => or9.IN0
a[10] => or10.IN0
a[11] => or11.IN0
a[12] => or12.IN0
a[13] => or13.IN0
a[14] => or14.IN0
a[15] => or15.IN0
a[16] => or16.IN0
a[17] => or17.IN0
a[18] => or18.IN0
a[19] => or19.IN0
a[20] => or20.IN0
a[21] => or21.IN0
a[22] => or22.IN0
a[23] => or23.IN0
a[24] => or24.IN0
a[25] => or25.IN0
a[26] => or26.IN0
a[27] => or27.IN0
a[28] => or28.IN0
a[29] => or29.IN0
a[30] => or30.IN0
a[31] => or31.IN0
b[0] => or0.IN1
b[1] => or1.IN1
b[2] => or2.IN1
b[3] => or3.IN1
b[4] => or4.IN1
b[5] => or5.IN1
b[6] => or6.IN1
b[7] => or7.IN1
b[8] => or8.IN1
b[9] => or9.IN1
b[10] => or10.IN1
b[11] => or11.IN1
b[12] => or12.IN1
b[13] => or13.IN1
b[14] => or14.IN1
b[15] => or15.IN1
b[16] => or16.IN1
b[17] => or17.IN1
b[18] => or18.IN1
b[19] => or19.IN1
b[20] => or20.IN1
b[21] => or21.IN1
b[22] => or22.IN1
b[23] => or23.IN1
b[24] => or24.IN1
b[25] => or25.IN1
b[26] => or26.IN1
b[27] => or27.IN1
b[28] => or28.IN1
b[29] => or29.IN1
b[30] => or30.IN1
b[31] => or31.IN1
out[0] <= or0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift16:sixteen
a[0] => out[16].DATAIN
a[1] => out[17].DATAIN
a[2] => out[18].DATAIN
a[3] => out[19].DATAIN
a[4] => out[20].DATAIN
a[5] => out[21].DATAIN
a[6] => out[22].DATAIN
a[7] => out[23].DATAIN
a[8] => out[24].DATAIN
a[9] => out[25].DATAIN
a[10] => out[26].DATAIN
a[11] => out[27].DATAIN
a[12] => out[28].DATAIN
a[13] => out[29].DATAIN
a[14] => out[30].DATAIN
a[15] => out[31].DATAIN
a[16] => ~NO_FANOUT~
a[17] => ~NO_FANOUT~
a[18] => ~NO_FANOUT~
a[19] => ~NO_FANOUT~
a[20] => ~NO_FANOUT~
a[21] => ~NO_FANOUT~
a[22] => ~NO_FANOUT~
a[23] => ~NO_FANOUT~
a[24] => ~NO_FANOUT~
a[25] => ~NO_FANOUT~
a[26] => ~NO_FANOUT~
a[27] => ~NO_FANOUT~
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= <GND>
out[5] <= <GND>
out[6] <= <GND>
out[7] <= <GND>
out[8] <= <GND>
out[9] <= <GND>
out[10] <= <GND>
out[11] <= <GND>
out[12] <= <GND>
out[13] <= <GND>
out[14] <= <GND>
out[15] <= <GND>
out[16] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[15].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift8:eight
a[0] => out[8].DATAIN
a[1] => out[9].DATAIN
a[2] => out[10].DATAIN
a[3] => out[11].DATAIN
a[4] => out[12].DATAIN
a[5] => out[13].DATAIN
a[6] => out[14].DATAIN
a[7] => out[15].DATAIN
a[8] => out[16].DATAIN
a[9] => out[17].DATAIN
a[10] => out[18].DATAIN
a[11] => out[19].DATAIN
a[12] => out[20].DATAIN
a[13] => out[21].DATAIN
a[14] => out[22].DATAIN
a[15] => out[23].DATAIN
a[16] => out[24].DATAIN
a[17] => out[25].DATAIN
a[18] => out[26].DATAIN
a[19] => out[27].DATAIN
a[20] => out[28].DATAIN
a[21] => out[29].DATAIN
a[22] => out[30].DATAIN
a[23] => out[31].DATAIN
a[24] => ~NO_FANOUT~
a[25] => ~NO_FANOUT~
a[26] => ~NO_FANOUT~
a[27] => ~NO_FANOUT~
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= <GND>
out[5] <= <GND>
out[6] <= <GND>
out[7] <= <GND>
out[8] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[23].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift4:four
a[0] => out[4].DATAIN
a[1] => out[5].DATAIN
a[2] => out[6].DATAIN
a[3] => out[7].DATAIN
a[4] => out[8].DATAIN
a[5] => out[9].DATAIN
a[6] => out[10].DATAIN
a[7] => out[11].DATAIN
a[8] => out[12].DATAIN
a[9] => out[13].DATAIN
a[10] => out[14].DATAIN
a[11] => out[15].DATAIN
a[12] => out[16].DATAIN
a[13] => out[17].DATAIN
a[14] => out[18].DATAIN
a[15] => out[19].DATAIN
a[16] => out[20].DATAIN
a[17] => out[21].DATAIN
a[18] => out[22].DATAIN
a[19] => out[23].DATAIN
a[20] => out[24].DATAIN
a[21] => out[25].DATAIN
a[22] => out[26].DATAIN
a[23] => out[27].DATAIN
a[24] => out[28].DATAIN
a[25] => out[29].DATAIN
a[26] => out[30].DATAIN
a[27] => out[31].DATAIN
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[27].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift2:two
a[0] => out[2].DATAIN
a[1] => out[3].DATAIN
a[2] => out[4].DATAIN
a[3] => out[5].DATAIN
a[4] => out[6].DATAIN
a[5] => out[7].DATAIN
a[6] => out[8].DATAIN
a[7] => out[9].DATAIN
a[8] => out[10].DATAIN
a[9] => out[11].DATAIN
a[10] => out[12].DATAIN
a[11] => out[13].DATAIN
a[12] => out[14].DATAIN
a[13] => out[15].DATAIN
a[14] => out[16].DATAIN
a[15] => out[17].DATAIN
a[16] => out[18].DATAIN
a[17] => out[19].DATAIN
a[18] => out[20].DATAIN
a[19] => out[21].DATAIN
a[20] => out[22].DATAIN
a[21] => out[23].DATAIN
a[22] => out[24].DATAIN
a[23] => out[25].DATAIN
a[24] => out[26].DATAIN
a[25] => out[27].DATAIN
a[26] => out[28].DATAIN
a[27] => out[29].DATAIN
a[28] => out[30].DATAIN
a[29] => out[31].DATAIN
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[29].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift1:one
a[0] => out[1].DATAIN
a[1] => out[2].DATAIN
a[2] => out[3].DATAIN
a[3] => out[4].DATAIN
a[4] => out[5].DATAIN
a[5] => out[6].DATAIN
a[6] => out[7].DATAIN
a[7] => out[8].DATAIN
a[8] => out[9].DATAIN
a[9] => out[10].DATAIN
a[10] => out[11].DATAIN
a[11] => out[12].DATAIN
a[12] => out[13].DATAIN
a[13] => out[14].DATAIN
a[14] => out[15].DATAIN
a[15] => out[16].DATAIN
a[16] => out[17].DATAIN
a[17] => out[18].DATAIN
a[18] => out[19].DATAIN
a[19] => out[20].DATAIN
a[20] => out[21].DATAIN
a[21] => out[22].DATAIN
a[22] => out[23].DATAIN
a[23] => out[24].DATAIN
a[24] => out[25].DATAIN
a[25] => out[26].DATAIN
a[26] => out[27].DATAIN
a[27] => out[28].DATAIN
a[28] => out[29].DATAIN
a[29] => out[30].DATAIN
a[30] => out[31].DATAIN
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[30].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|rightshifter:right
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift16r:sixteen
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => ~NO_FANOUT~
a[5] => ~NO_FANOUT~
a[6] => ~NO_FANOUT~
a[7] => ~NO_FANOUT~
a[8] => ~NO_FANOUT~
a[9] => ~NO_FANOUT~
a[10] => ~NO_FANOUT~
a[11] => ~NO_FANOUT~
a[12] => ~NO_FANOUT~
a[13] => ~NO_FANOUT~
a[14] => ~NO_FANOUT~
a[15] => ~NO_FANOUT~
a[16] => out[0].DATAIN
a[17] => out[1].DATAIN
a[18] => out[2].DATAIN
a[19] => out[3].DATAIN
a[20] => out[4].DATAIN
a[21] => out[5].DATAIN
a[22] => out[6].DATAIN
a[23] => out[7].DATAIN
a[24] => out[8].DATAIN
a[25] => out[9].DATAIN
a[26] => out[10].DATAIN
a[27] => out[11].DATAIN
a[28] => out[12].DATAIN
a[29] => out[13].DATAIN
a[30] => out[14].DATAIN
a[31] => out[16].DATAIN
a[31] => out[15].DATAIN
out[0] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= <GND>
out[18] <= <GND>
out[19] <= <GND>
out[20] <= <GND>
out[21] <= <GND>
out[22] <= <GND>
out[23] <= <GND>
out[24] <= <GND>
out[25] <= <GND>
out[26] <= <GND>
out[27] <= <GND>
out[28] <= <GND>
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift8r:eight
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => ~NO_FANOUT~
a[5] => ~NO_FANOUT~
a[6] => ~NO_FANOUT~
a[7] => ~NO_FANOUT~
a[8] => out[0].DATAIN
a[9] => out[1].DATAIN
a[10] => out[2].DATAIN
a[11] => out[3].DATAIN
a[12] => out[4].DATAIN
a[13] => out[5].DATAIN
a[14] => out[6].DATAIN
a[15] => out[7].DATAIN
a[16] => out[8].DATAIN
a[17] => out[9].DATAIN
a[18] => out[10].DATAIN
a[19] => out[11].DATAIN
a[20] => out[12].DATAIN
a[21] => out[13].DATAIN
a[22] => out[14].DATAIN
a[23] => out[15].DATAIN
a[24] => out[16].DATAIN
a[25] => out[17].DATAIN
a[26] => out[18].DATAIN
a[27] => out[19].DATAIN
a[28] => out[20].DATAIN
a[29] => out[21].DATAIN
a[30] => out[22].DATAIN
a[31] => out[24].DATAIN
a[31] => out[23].DATAIN
out[0] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= <GND>
out[26] <= <GND>
out[27] <= <GND>
out[28] <= <GND>
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift4r:four
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => out[0].DATAIN
a[5] => out[1].DATAIN
a[6] => out[2].DATAIN
a[7] => out[3].DATAIN
a[8] => out[4].DATAIN
a[9] => out[5].DATAIN
a[10] => out[6].DATAIN
a[11] => out[7].DATAIN
a[12] => out[8].DATAIN
a[13] => out[9].DATAIN
a[14] => out[10].DATAIN
a[15] => out[11].DATAIN
a[16] => out[12].DATAIN
a[17] => out[13].DATAIN
a[18] => out[14].DATAIN
a[19] => out[15].DATAIN
a[20] => out[16].DATAIN
a[21] => out[17].DATAIN
a[22] => out[18].DATAIN
a[23] => out[19].DATAIN
a[24] => out[20].DATAIN
a[25] => out[21].DATAIN
a[26] => out[22].DATAIN
a[27] => out[23].DATAIN
a[28] => out[24].DATAIN
a[29] => out[25].DATAIN
a[30] => out[26].DATAIN
a[31] => out[28].DATAIN
a[31] => out[27].DATAIN
out[0] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift2r:two
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => out[0].DATAIN
a[3] => out[1].DATAIN
a[4] => out[2].DATAIN
a[5] => out[3].DATAIN
a[6] => out[4].DATAIN
a[7] => out[5].DATAIN
a[8] => out[6].DATAIN
a[9] => out[7].DATAIN
a[10] => out[8].DATAIN
a[11] => out[9].DATAIN
a[12] => out[10].DATAIN
a[13] => out[11].DATAIN
a[14] => out[12].DATAIN
a[15] => out[13].DATAIN
a[16] => out[14].DATAIN
a[17] => out[15].DATAIN
a[18] => out[16].DATAIN
a[19] => out[17].DATAIN
a[20] => out[18].DATAIN
a[21] => out[19].DATAIN
a[22] => out[20].DATAIN
a[23] => out[21].DATAIN
a[24] => out[22].DATAIN
a[25] => out[23].DATAIN
a[26] => out[24].DATAIN
a[27] => out[25].DATAIN
a[28] => out[26].DATAIN
a[29] => out[27].DATAIN
a[30] => out[28].DATAIN
a[31] => out[30].DATAIN
a[31] => out[29].DATAIN
out[0] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift1r:one
a[0] => ~NO_FANOUT~
a[1] => out[0].DATAIN
a[2] => out[1].DATAIN
a[3] => out[2].DATAIN
a[4] => out[3].DATAIN
a[5] => out[4].DATAIN
a[6] => out[5].DATAIN
a[7] => out[6].DATAIN
a[8] => out[7].DATAIN
a[9] => out[8].DATAIN
a[10] => out[9].DATAIN
a[11] => out[10].DATAIN
a[12] => out[11].DATAIN
a[13] => out[12].DATAIN
a[14] => out[13].DATAIN
a[15] => out[14].DATAIN
a[16] => out[15].DATAIN
a[17] => out[16].DATAIN
a[18] => out[17].DATAIN
a[19] => out[18].DATAIN
a[20] => out[19].DATAIN
a[21] => out[20].DATAIN
a[22] => out[21].DATAIN
a[23] => out[22].DATAIN
a[24] => out[23].DATAIN
a[25] => out[24].DATAIN
a[26] => out[25].DATAIN
a[27] => out[26].DATAIN
a[28] => out[27].DATAIN
a[29] => out[28].DATAIN
a[30] => out[29].DATAIN
a[31] => out[31].DATAIN
a[31] => out[30].DATAIN
out[0] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|nequalityChecker:neq
a[0] => equalCheck[0].checker.IN0
a[1] => equalCheck[1].checker.IN0
a[2] => equalCheck[2].checker.IN0
a[3] => equalCheck[3].checker.IN0
a[4] => equalCheck[4].checker.IN0
a[5] => equalCheck[5].checker.IN0
a[6] => equalCheck[6].checker.IN0
a[7] => equalCheck[7].checker.IN0
a[8] => equalCheck[8].checker.IN0
a[9] => equalCheck[9].checker.IN0
a[10] => equalCheck[10].checker.IN0
a[11] => equalCheck[11].checker.IN0
a[12] => equalCheck[12].checker.IN0
a[13] => equalCheck[13].checker.IN0
a[14] => equalCheck[14].checker.IN0
a[15] => equalCheck[15].checker.IN0
a[16] => equalCheck[16].checker.IN0
a[17] => equalCheck[17].checker.IN0
a[18] => equalCheck[18].checker.IN0
a[19] => equalCheck[19].checker.IN0
a[20] => equalCheck[20].checker.IN0
a[21] => equalCheck[21].checker.IN0
a[22] => equalCheck[22].checker.IN0
a[23] => equalCheck[23].checker.IN0
a[24] => equalCheck[24].checker.IN0
a[25] => equalCheck[25].checker.IN0
a[26] => equalCheck[26].checker.IN0
a[27] => equalCheck[27].checker.IN0
a[28] => equalCheck[28].checker.IN0
a[29] => equalCheck[29].checker.IN0
a[30] => equalCheck[30].checker.IN0
a[31] => equalCheck[31].checker.IN0
b[0] => equalCheck[0].checker.IN1
b[1] => equalCheck[1].checker.IN1
b[2] => equalCheck[2].checker.IN1
b[3] => equalCheck[3].checker.IN1
b[4] => equalCheck[4].checker.IN1
b[5] => equalCheck[5].checker.IN1
b[6] => equalCheck[6].checker.IN1
b[7] => equalCheck[7].checker.IN1
b[8] => equalCheck[8].checker.IN1
b[9] => equalCheck[9].checker.IN1
b[10] => equalCheck[10].checker.IN1
b[11] => equalCheck[11].checker.IN1
b[12] => equalCheck[12].checker.IN1
b[13] => equalCheck[13].checker.IN1
b[14] => equalCheck[14].checker.IN1
b[15] => equalCheck[15].checker.IN1
b[16] => equalCheck[16].checker.IN1
b[17] => equalCheck[17].checker.IN1
b[18] => equalCheck[18].checker.IN1
b[19] => equalCheck[19].checker.IN1
b[20] => equalCheck[20].checker.IN1
b[21] => equalCheck[21].checker.IN1
b[22] => equalCheck[22].checker.IN1
b[23] => equalCheck[23].checker.IN1
b[24] => equalCheck[24].checker.IN1
b[25] => equalCheck[25].checker.IN1
b[26] => equalCheck[26].checker.IN1
b[27] => equalCheck[27].checker.IN1
b[28] => equalCheck[28].checker.IN1
b[29] => equalCheck[29].checker.IN1
b[30] => equalCheck[30].checker.IN1
b[31] => equalCheck[31].checker.IN1
notEqual <= equality10.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv
data_operandA[0] => data_operandA[0].IN2
data_operandA[1] => data_operandA[1].IN2
data_operandA[2] => data_operandA[2].IN2
data_operandA[3] => data_operandA[3].IN2
data_operandA[4] => data_operandA[4].IN2
data_operandA[5] => data_operandA[5].IN2
data_operandA[6] => data_operandA[6].IN2
data_operandA[7] => data_operandA[7].IN2
data_operandA[8] => data_operandA[8].IN2
data_operandA[9] => data_operandA[9].IN2
data_operandA[10] => data_operandA[10].IN2
data_operandA[11] => data_operandA[11].IN2
data_operandA[12] => data_operandA[12].IN2
data_operandA[13] => data_operandA[13].IN2
data_operandA[14] => data_operandA[14].IN2
data_operandA[15] => data_operandA[15].IN2
data_operandA[16] => data_operandA[16].IN2
data_operandA[17] => data_operandA[17].IN2
data_operandA[18] => data_operandA[18].IN2
data_operandA[19] => data_operandA[19].IN2
data_operandA[20] => data_operandA[20].IN2
data_operandA[21] => data_operandA[21].IN2
data_operandA[22] => data_operandA[22].IN2
data_operandA[23] => data_operandA[23].IN2
data_operandA[24] => data_operandA[24].IN2
data_operandA[25] => data_operandA[25].IN2
data_operandA[26] => data_operandA[26].IN2
data_operandA[27] => data_operandA[27].IN2
data_operandA[28] => data_operandA[28].IN2
data_operandA[29] => data_operandA[29].IN2
data_operandA[30] => data_operandA[30].IN2
data_operandA[31] => data_operandA[31].IN2
data_operandB[0] => data_operandB[0].IN2
data_operandB[1] => data_operandB[1].IN2
data_operandB[2] => data_operandB[2].IN2
data_operandB[3] => data_operandB[3].IN2
data_operandB[4] => data_operandB[4].IN2
data_operandB[5] => data_operandB[5].IN2
data_operandB[6] => data_operandB[6].IN2
data_operandB[7] => data_operandB[7].IN2
data_operandB[8] => data_operandB[8].IN2
data_operandB[9] => data_operandB[9].IN2
data_operandB[10] => data_operandB[10].IN2
data_operandB[11] => data_operandB[11].IN2
data_operandB[12] => data_operandB[12].IN2
data_operandB[13] => data_operandB[13].IN2
data_operandB[14] => data_operandB[14].IN2
data_operandB[15] => data_operandB[15].IN2
data_operandB[16] => data_operandB[16].IN2
data_operandB[17] => data_operandB[17].IN2
data_operandB[18] => data_operandB[18].IN2
data_operandB[19] => data_operandB[19].IN2
data_operandB[20] => data_operandB[20].IN2
data_operandB[21] => data_operandB[21].IN2
data_operandB[22] => data_operandB[22].IN2
data_operandB[23] => data_operandB[23].IN2
data_operandB[24] => data_operandB[24].IN2
data_operandB[25] => data_operandB[25].IN2
data_operandB[26] => data_operandB[26].IN2
data_operandB[27] => data_operandB[27].IN2
data_operandB[28] => data_operandB[28].IN2
data_operandB[29] => data_operandB[29].IN2
data_operandB[30] => data_operandB[30].IN2
data_operandB[31] => data_operandB[31].IN2
ctrl_MULT => ctrl_MULT.IN1
ctrl_DIV => resetCondition.IN0
clock => clock.IN3
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= data_exception.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= data_resultRDY.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|ecedffe:whichOp
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth
data_operandA[0] => data_operandA[0].IN3
data_operandA[1] => data_operandA[1].IN3
data_operandA[2] => data_operandA[2].IN3
data_operandA[3] => data_operandA[3].IN3
data_operandA[4] => data_operandA[4].IN3
data_operandA[5] => data_operandA[5].IN3
data_operandA[6] => data_operandA[6].IN3
data_operandA[7] => data_operandA[7].IN3
data_operandA[8] => data_operandA[8].IN3
data_operandA[9] => data_operandA[9].IN3
data_operandA[10] => data_operandA[10].IN3
data_operandA[11] => data_operandA[11].IN3
data_operandA[12] => data_operandA[12].IN3
data_operandA[13] => data_operandA[13].IN3
data_operandA[14] => data_operandA[14].IN3
data_operandA[15] => data_operandA[15].IN3
data_operandA[16] => data_operandA[16].IN3
data_operandA[17] => data_operandA[17].IN3
data_operandA[18] => data_operandA[18].IN3
data_operandA[19] => data_operandA[19].IN3
data_operandA[20] => data_operandA[20].IN3
data_operandA[21] => data_operandA[21].IN3
data_operandA[22] => data_operandA[22].IN3
data_operandA[23] => data_operandA[23].IN3
data_operandA[24] => data_operandA[24].IN3
data_operandA[25] => data_operandA[25].IN3
data_operandA[26] => data_operandA[26].IN3
data_operandA[27] => data_operandA[27].IN3
data_operandA[28] => data_operandA[28].IN3
data_operandA[29] => data_operandA[29].IN3
data_operandA[30] => data_operandA[30].IN3
data_operandA[31] => data_operandA[31].IN3
data_operandB[0] => data_operandB[0].IN3
data_operandB[1] => data_operandB[1].IN3
data_operandB[2] => data_operandB[2].IN3
data_operandB[3] => data_operandB[3].IN3
data_operandB[4] => data_operandB[4].IN3
data_operandB[5] => data_operandB[5].IN3
data_operandB[6] => data_operandB[6].IN3
data_operandB[7] => data_operandB[7].IN3
data_operandB[8] => data_operandB[8].IN3
data_operandB[9] => data_operandB[9].IN3
data_operandB[10] => data_operandB[10].IN3
data_operandB[11] => data_operandB[11].IN3
data_operandB[12] => data_operandB[12].IN3
data_operandB[13] => data_operandB[13].IN3
data_operandB[14] => data_operandB[14].IN3
data_operandB[15] => data_operandB[15].IN3
data_operandB[16] => data_operandB[16].IN3
data_operandB[17] => data_operandB[17].IN3
data_operandB[18] => data_operandB[18].IN3
data_operandB[19] => data_operandB[19].IN3
data_operandB[20] => data_operandB[20].IN3
data_operandB[21] => data_operandB[21].IN3
data_operandB[22] => data_operandB[22].IN3
data_operandB[23] => data_operandB[23].IN3
data_operandB[24] => data_operandB[24].IN3
data_operandB[25] => data_operandB[25].IN3
data_operandB[26] => data_operandB[26].IN3
data_operandB[27] => data_operandB[27].IN3
data_operandB[28] => data_operandB[28].IN3
data_operandB[29] => data_operandB[29].IN3
data_operandB[30] => data_operandB[30].IN3
data_operandB[31] => data_operandB[31].IN3
clock => clock.IN1
res => res.IN2
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= finalException.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= highCount.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter
clock => clock.IN5
reset => Decoder0.IN0
reset => Decoder1.IN0
reset => Decoder2.IN0
reset => Decoder3.IN0
reset => Decoder4.IN0
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:dff0.q
out[1] <= ecedffe:dff1.q
out[2] <= ecedffe:dff2.q
out[3] <= ecedffe:dff3.q
out[4] <= ecedffe:dff4.q


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff0
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff1
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff2
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff3
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff4
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalZero:aZero
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalZero:bZero
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalOne:aOne
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isOne <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalOne:bOne
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isOne <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalMaxPositive:aHigh
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isMax <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalMaxPositive:bHigh
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isMax <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr
data_operandA[0] => data_operandA[0].IN1
data_operandA[1] => data_operandA[1].IN1
data_operandA[2] => data_operandA[2].IN1
data_operandA[3] => data_operandA[3].IN1
data_operandA[4] => data_operandA[4].IN1
data_operandA[5] => data_operandA[5].IN1
data_operandA[6] => data_operandA[6].IN1
data_operandA[7] => data_operandA[7].IN1
data_operandA[8] => data_operandA[8].IN1
data_operandA[9] => data_operandA[9].IN1
data_operandA[10] => data_operandA[10].IN1
data_operandA[11] => data_operandA[11].IN1
data_operandA[12] => data_operandA[12].IN1
data_operandA[13] => data_operandA[13].IN1
data_operandA[14] => data_operandA[14].IN1
data_operandA[15] => data_operandA[15].IN1
data_operandA[16] => data_operandA[16].IN1
data_operandA[17] => data_operandA[17].IN1
data_operandA[18] => data_operandA[18].IN1
data_operandA[19] => data_operandA[19].IN1
data_operandA[20] => data_operandA[20].IN1
data_operandA[21] => data_operandA[21].IN1
data_operandA[22] => data_operandA[22].IN1
data_operandA[23] => data_operandA[23].IN1
data_operandA[24] => data_operandA[24].IN1
data_operandA[25] => data_operandA[25].IN1
data_operandA[26] => data_operandA[26].IN1
data_operandA[27] => data_operandA[27].IN1
data_operandA[28] => data_operandA[28].IN1
data_operandA[29] => data_operandA[29].IN1
data_operandA[30] => data_operandA[30].IN1
data_operandA[31] => data_operandA[31].IN1
data_operandB[0] => data_operandB[0].IN2
data_operandB[1] => data_operandB[1].IN2
data_operandB[2] => data_operandB[2].IN2
data_operandB[3] => data_operandB[3].IN2
data_operandB[4] => data_operandB[4].IN2
data_operandB[5] => data_operandB[5].IN2
data_operandB[6] => data_operandB[6].IN2
data_operandB[7] => data_operandB[7].IN2
data_operandB[8] => data_operandB[8].IN2
data_operandB[9] => data_operandB[9].IN2
data_operandB[10] => data_operandB[10].IN2
data_operandB[11] => data_operandB[11].IN2
data_operandB[12] => data_operandB[12].IN2
data_operandB[13] => data_operandB[13].IN2
data_operandB[14] => data_operandB[14].IN2
data_operandB[15] => data_operandB[15].IN2
data_operandB[16] => data_operandB[16].IN2
data_operandB[17] => data_operandB[17].IN2
data_operandB[18] => data_operandB[18].IN2
data_operandB[19] => data_operandB[19].IN2
data_operandB[20] => data_operandB[20].IN2
data_operandB[21] => data_operandB[21].IN2
data_operandB[22] => data_operandB[22].IN2
data_operandB[23] => data_operandB[23].IN2
data_operandB[24] => data_operandB[24].IN2
data_operandB[25] => data_operandB[25].IN2
data_operandB[26] => data_operandB[26].IN2
data_operandB[27] => data_operandB[27].IN2
data_operandB[28] => data_operandB[28].IN2
data_operandB[29] => data_operandB[29].IN2
data_operandB[30] => data_operandB[30].IN2
data_operandB[31] => data_operandB[31].IN2
clock => clock.IN6
res => res.IN4
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= overflow.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= countHigh.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter
clock => clock.IN6
reset => Decoder0.IN0
reset => Decoder1.IN0
reset => Decoder2.IN0
reset => Decoder3.IN0
reset => Decoder4.IN0
reset => Decoder5.IN0
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:dff0.q
out[1] <= ecedffe:dff1.q
out[2] <= ecedffe:dff2.q
out[3] <= ecedffe:dff3.q
out[4] <= ecedffe:dff4.q
out[5] <= ecedffe:dff5.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff0
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff1
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff2
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff3
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff4
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff5
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1
a[0] => filledA[1].IN1
a[1] => filledA[2].IN1
a[2] => filledA[3].IN1
a[3] => filledA[4].IN1
a[4] => filledA[5].IN1
a[5] => filledA[6].IN1
a[6] => filledA[7].IN1
a[7] => filledA[8].IN1
a[8] => filledA[9].IN1
a[9] => filledA[10].IN1
a[10] => filledA[11].IN1
a[11] => filledA[12].IN1
a[12] => filledA[13].IN1
a[13] => filledA[14].IN1
a[14] => filledA[15].IN1
a[15] => filledA[16].IN1
a[16] => filledA[17].IN1
a[17] => filledA[18].IN1
a[18] => filledA[19].IN1
a[19] => filledA[20].IN1
a[20] => filledA[21].IN1
a[21] => filledA[22].IN1
a[22] => filledA[23].IN1
a[23] => filledA[24].IN1
a[24] => filledA[25].IN1
a[25] => filledA[26].IN1
a[26] => filledA[27].IN1
a[27] => filledA[28].IN1
a[28] => filledA[29].IN1
a[29] => filledA[30].IN1
a[30] => filledA[31].IN1
a[31] => ~NO_FANOUT~
m[0] => m[0].IN1
m[1] => m[1].IN1
m[2] => m[2].IN1
m[3] => m[3].IN1
m[4] => m[4].IN1
m[5] => m[5].IN1
m[6] => m[6].IN1
m[7] => m[7].IN1
m[8] => m[8].IN1
m[9] => m[9].IN1
m[10] => m[10].IN1
m[11] => m[11].IN1
m[12] => m[12].IN1
m[13] => m[13].IN1
m[14] => m[14].IN1
m[15] => m[15].IN1
m[16] => m[16].IN1
m[17] => m[17].IN1
m[18] => m[18].IN1
m[19] => m[19].IN1
m[20] => m[20].IN1
m[21] => m[21].IN1
m[22] => m[22].IN1
m[23] => m[23].IN1
m[24] => m[24].IN1
m[25] => m[25].IN1
m[26] => m[26].IN1
m[27] => m[27].IN1
m[28] => m[28].IN1
m[29] => m[29].IN1
m[30] => m[30].IN1
m[31] => m[31].IN1
q[0] => newQ[1].DATAIN
q[1] => newQ[2].DATAIN
q[2] => newQ[3].DATAIN
q[3] => newQ[4].DATAIN
q[4] => newQ[5].DATAIN
q[5] => newQ[6].DATAIN
q[6] => newQ[7].DATAIN
q[7] => newQ[8].DATAIN
q[8] => newQ[9].DATAIN
q[9] => newQ[10].DATAIN
q[10] => newQ[11].DATAIN
q[11] => newQ[12].DATAIN
q[12] => newQ[13].DATAIN
q[13] => newQ[14].DATAIN
q[14] => newQ[15].DATAIN
q[15] => newQ[16].DATAIN
q[16] => newQ[17].DATAIN
q[17] => newQ[18].DATAIN
q[18] => newQ[19].DATAIN
q[19] => newQ[20].DATAIN
q[20] => newQ[21].DATAIN
q[21] => newQ[22].DATAIN
q[22] => newQ[23].DATAIN
q[23] => newQ[24].DATAIN
q[24] => newQ[25].DATAIN
q[25] => newQ[26].DATAIN
q[26] => newQ[27].DATAIN
q[27] => newQ[28].DATAIN
q[28] => newQ[29].DATAIN
q[29] => newQ[30].DATAIN
q[30] => newQ[31].DATAIN
q[31] => filledA[0].IN1
newA[0] <= cla:opAdder.sum
newA[1] <= cla:opAdder.sum
newA[2] <= cla:opAdder.sum
newA[3] <= cla:opAdder.sum
newA[4] <= cla:opAdder.sum
newA[5] <= cla:opAdder.sum
newA[6] <= cla:opAdder.sum
newA[7] <= cla:opAdder.sum
newA[8] <= cla:opAdder.sum
newA[9] <= cla:opAdder.sum
newA[10] <= cla:opAdder.sum
newA[11] <= cla:opAdder.sum
newA[12] <= cla:opAdder.sum
newA[13] <= cla:opAdder.sum
newA[14] <= cla:opAdder.sum
newA[15] <= cla:opAdder.sum
newA[16] <= cla:opAdder.sum
newA[17] <= cla:opAdder.sum
newA[18] <= cla:opAdder.sum
newA[19] <= cla:opAdder.sum
newA[20] <= cla:opAdder.sum
newA[21] <= cla:opAdder.sum
newA[22] <= cla:opAdder.sum
newA[23] <= cla:opAdder.sum
newA[24] <= cla:opAdder.sum
newA[25] <= cla:opAdder.sum
newA[26] <= cla:opAdder.sum
newA[27] <= cla:opAdder.sum
newA[28] <= cla:opAdder.sum
newA[29] <= cla:opAdder.sum
newA[30] <= cla:opAdder.sum
newA[31] <= cla:opAdder.sum
newQ[0] <= cla:opAdder.sum
newQ[1] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
newQ[2] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
newQ[3] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
newQ[4] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
newQ[5] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
newQ[6] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
newQ[7] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
newQ[8] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
newQ[9] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
newQ[10] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
newQ[11] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
newQ[12] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
newQ[13] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
newQ[14] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
newQ[15] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
newQ[16] <= q[15].DB_MAX_OUTPUT_PORT_TYPE
newQ[17] <= q[16].DB_MAX_OUTPUT_PORT_TYPE
newQ[18] <= q[17].DB_MAX_OUTPUT_PORT_TYPE
newQ[19] <= q[18].DB_MAX_OUTPUT_PORT_TYPE
newQ[20] <= q[19].DB_MAX_OUTPUT_PORT_TYPE
newQ[21] <= q[20].DB_MAX_OUTPUT_PORT_TYPE
newQ[22] <= q[21].DB_MAX_OUTPUT_PORT_TYPE
newQ[23] <= q[22].DB_MAX_OUTPUT_PORT_TYPE
newQ[24] <= q[23].DB_MAX_OUTPUT_PORT_TYPE
newQ[25] <= q[24].DB_MAX_OUTPUT_PORT_TYPE
newQ[26] <= q[25].DB_MAX_OUTPUT_PORT_TYPE
newQ[27] <= q[26].DB_MAX_OUTPUT_PORT_TYPE
newQ[28] <= q[27].DB_MAX_OUTPUT_PORT_TYPE
newQ[29] <= q[28].DB_MAX_OUTPUT_PORT_TYPE
newQ[30] <= q[29].DB_MAX_OUTPUT_PORT_TYPE
newQ[31] <= q[30].DB_MAX_OUTPUT_PORT_TYPE
error <= cla:opAdder.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
m[0] => m[0].IN1
m[1] => m[1].IN1
m[2] => m[2].IN1
m[3] => m[3].IN1
m[4] => m[4].IN1
m[5] => m[5].IN1
m[6] => m[6].IN1
m[7] => m[7].IN1
m[8] => m[8].IN1
m[9] => m[9].IN1
m[10] => m[10].IN1
m[11] => m[11].IN1
m[12] => m[12].IN1
m[13] => m[13].IN1
m[14] => m[14].IN1
m[15] => m[15].IN1
m[16] => m[16].IN1
m[17] => m[17].IN1
m[18] => m[18].IN1
m[19] => m[19].IN1
m[20] => m[20].IN1
m[21] => m[21].IN1
m[22] => m[22].IN1
m[23] => m[23].IN1
m[24] => m[24].IN1
m[25] => m[25].IN1
m[26] => m[26].IN1
m[27] => m[27].IN1
m[28] => m[28].IN1
m[29] => m[29].IN1
m[30] => m[30].IN1
m[31] => m[31].IN1
newA[0] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[1] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[2] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[3] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[4] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[5] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[6] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[7] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[8] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[9] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[10] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[11] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[12] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[13] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[14] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[15] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[16] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[17] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[18] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[19] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[20] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[21] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[22] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[23] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[24] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[25] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[26] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[27] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[28] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[29] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[30] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[31] <= newA.DB_MAX_OUTPUT_PORT_TYPE
error <= cla:restoreAdd.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|ecedffe:negateResult
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|equalZero:zeroCheck
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|ecedffe:divZero
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|mux4to1:execOut
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
jumpCtrl[0] => jumpCtrl[0].IN1
jumpCtrl[1] => jumpCtrl[1].IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsLessThan => branchTaken.IN1
argsLessThan => branchTaken.IN1
pc[0] => pc[0].IN2
pc[1] => pc[1].IN2
pc[2] => pc[2].IN2
pc[3] => pc[3].IN2
pc[4] => pc[4].IN2
pc[5] => pc[5].IN2
pc[6] => pc[6].IN2
pc[7] => pc[7].IN2
pc[8] => pc[8].IN2
pc[9] => pc[9].IN2
pc[10] => pc[10].IN2
pc[11] => pc[11].IN2
pc[12] => pc[12].IN2
pc[13] => pc[13].IN2
pc[14] => pc[14].IN2
pc[15] => pc[15].IN2
pc[16] => pc[16].IN2
pc[17] => pc[17].IN2
pc[18] => pc[18].IN2
pc[19] => pc[19].IN2
pc[20] => pc[20].IN2
pc[21] => pc[21].IN2
pc[22] => pc[22].IN2
pc[23] => pc[23].IN2
pc[24] => pc[24].IN2
pc[25] => pc[25].IN2
pc[26] => pc[26].IN2
pc[27] => pc[27].IN2
pc[28] => pc[28].IN2
pc[29] => pc[29].IN2
pc[30] => pc[30].IN2
pc[31] => pc[31].IN2
imm[0] => imm[0].IN1
imm[1] => imm[1].IN1
imm[2] => imm[2].IN1
imm[3] => imm[3].IN1
imm[4] => imm[4].IN1
imm[5] => imm[5].IN1
imm[6] => imm[6].IN1
imm[7] => imm[7].IN1
imm[8] => imm[8].IN1
imm[9] => imm[9].IN1
imm[10] => imm[10].IN1
imm[11] => imm[11].IN1
imm[12] => imm[12].IN1
imm[13] => imm[13].IN1
imm[14] => imm[14].IN1
imm[15] => imm[15].IN1
imm[16] => imm[16].IN1
imm[17] => imm[17].IN1
imm[18] => imm[18].IN1
imm[19] => imm[19].IN1
imm[20] => imm[20].IN1
imm[21] => imm[21].IN1
imm[22] => imm[22].IN1
imm[23] => imm[23].IN1
imm[24] => imm[24].IN1
imm[25] => imm[25].IN1
imm[26] => imm[26].IN1
imm[27] => imm[27].IN1
imm[28] => imm[28].IN1
imm[29] => imm[29].IN1
imm[30] => imm[30].IN1
imm[31] => imm[31].IN1
target[0] => target[0].IN3
target[1] => target[1].IN3
target[2] => target[2].IN3
target[3] => target[3].IN3
target[4] => target[4].IN3
target[5] => target[5].IN3
target[6] => target[6].IN3
target[7] => target[7].IN3
target[8] => target[8].IN3
target[9] => target[9].IN3
target[10] => target[10].IN3
target[11] => target[11].IN3
target[12] => target[12].IN3
target[13] => target[13].IN3
target[14] => target[14].IN3
target[15] => target[15].IN3
target[16] => target[16].IN3
target[17] => target[17].IN3
target[18] => target[18].IN3
target[19] => target[19].IN3
target[20] => target[20].IN3
target[21] => target[21].IN3
target[22] => target[22].IN3
target[23] => target[23].IN3
target[24] => target[24].IN3
target[25] => target[25].IN3
target[26] => target[26].IN3
target[27] => target[27].IN3
target[28] => target[28].IN3
target[29] => target[29].IN3
target[30] => target[30].IN3
target[31] => target[31].IN3
regBVal[0] => regBVal[0].IN1
regBVal[1] => regBVal[1].IN1
regBVal[2] => regBVal[2].IN1
regBVal[3] => regBVal[3].IN1
regBVal[4] => regBVal[4].IN1
regBVal[5] => regBVal[5].IN1
regBVal[6] => regBVal[6].IN1
regBVal[7] => regBVal[7].IN1
regBVal[8] => regBVal[8].IN1
regBVal[9] => regBVal[9].IN1
regBVal[10] => regBVal[10].IN1
regBVal[11] => regBVal[11].IN1
regBVal[12] => regBVal[12].IN1
regBVal[13] => regBVal[13].IN1
regBVal[14] => regBVal[14].IN1
regBVal[15] => regBVal[15].IN1
regBVal[16] => regBVal[16].IN1
regBVal[17] => regBVal[17].IN1
regBVal[18] => regBVal[18].IN1
regBVal[19] => regBVal[19].IN1
regBVal[20] => regBVal[20].IN1
regBVal[21] => regBVal[21].IN1
regBVal[22] => regBVal[22].IN1
regBVal[23] => regBVal[23].IN1
regBVal[24] => regBVal[24].IN1
regBVal[25] => regBVal[25].IN1
regBVal[26] => regBVal[26].IN1
regBVal[27] => regBVal[27].IN1
regBVal[28] => regBVal[28].IN1
regBVal[29] => regBVal[29].IN1
regBVal[30] => regBVal[30].IN1
regBVal[31] => regBVal[31].IN1
nextPC[0] <= mux4to1:jumpMux.out
nextPC[1] <= mux4to1:jumpMux.out
nextPC[2] <= mux4to1:jumpMux.out
nextPC[3] <= mux4to1:jumpMux.out
nextPC[4] <= mux4to1:jumpMux.out
nextPC[5] <= mux4to1:jumpMux.out
nextPC[6] <= mux4to1:jumpMux.out
nextPC[7] <= mux4to1:jumpMux.out
nextPC[8] <= mux4to1:jumpMux.out
nextPC[9] <= mux4to1:jumpMux.out
nextPC[10] <= mux4to1:jumpMux.out
nextPC[11] <= mux4to1:jumpMux.out
nextPC[12] <= mux4to1:jumpMux.out
nextPC[13] <= mux4to1:jumpMux.out
nextPC[14] <= mux4to1:jumpMux.out
nextPC[15] <= mux4to1:jumpMux.out
nextPC[16] <= mux4to1:jumpMux.out
nextPC[17] <= mux4to1:jumpMux.out
nextPC[18] <= mux4to1:jumpMux.out
nextPC[19] <= mux4to1:jumpMux.out
nextPC[20] <= mux4to1:jumpMux.out
nextPC[21] <= mux4to1:jumpMux.out
nextPC[22] <= mux4to1:jumpMux.out
nextPC[23] <= mux4to1:jumpMux.out
nextPC[24] <= mux4to1:jumpMux.out
nextPC[25] <= mux4to1:jumpMux.out
nextPC[26] <= mux4to1:jumpMux.out
nextPC[27] <= mux4to1:jumpMux.out
nextPC[28] <= mux4to1:jumpMux.out
nextPC[29] <= mux4to1:jumpMux.out
nextPC[30] <= mux4to1:jumpMux.out
nextPC[31] <= mux4to1:jumpMux.out
pcOverride <= pcOverride.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|mux4to1:branchMux
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|mux4to1:jumpMux
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|servoLogic:servoController
clock => clock.IN1
reset => reset.IN1
servoCtrl[0] => servoCtrl[0].IN1
servoCtrl[1] => servoCtrl[1].IN1
angle[0] => zPos.DATAB
angle[0] => yPos.DATAB
angle[0] => xPos.DATAB
angle[1] => zPos.DATAB
angle[1] => yPos.DATAB
angle[1] => xPos.DATAB
angle[2] => zPos.DATAB
angle[2] => yPos.DATAB
angle[2] => xPos.DATAB
angle[3] => zPos.DATAB
angle[3] => yPos.DATAB
angle[3] => xPos.DATAB
angle[4] => zPos.DATAB
angle[4] => yPos.DATAB
angle[4] => xPos.DATAB
angle[5] => zPos.DATAB
angle[5] => yPos.DATAB
angle[5] => xPos.DATAB
angle[6] => zPos.DATAB
angle[6] => yPos.DATAB
angle[6] => xPos.DATAB
angle[7] => zPos.DATAB
angle[7] => yPos.DATAB
angle[7] => xPos.DATAB
angle[8] => ~NO_FANOUT~
angle[9] => ~NO_FANOUT~
angle[10] => ~NO_FANOUT~
angle[11] => ~NO_FANOUT~
angle[12] => ~NO_FANOUT~
angle[13] => ~NO_FANOUT~
angle[14] => ~NO_FANOUT~
angle[15] => ~NO_FANOUT~
angle[16] => ~NO_FANOUT~
angle[17] => ~NO_FANOUT~
angle[18] => ~NO_FANOUT~
angle[19] => ~NO_FANOUT~
angle[20] => ~NO_FANOUT~
angle[21] => ~NO_FANOUT~
angle[22] => ~NO_FANOUT~
angle[23] => ~NO_FANOUT~
angle[24] => ~NO_FANOUT~
angle[25] => ~NO_FANOUT~
angle[26] => ~NO_FANOUT~
angle[27] => ~NO_FANOUT~
angle[28] => ~NO_FANOUT~
angle[29] => ~NO_FANOUT~
angle[30] => ~NO_FANOUT~
angle[31] => ~NO_FANOUT~
servoX <= armController:servos.port5
servoY <= armController:servos.port6
servoZ <= armController:servos.port7
servoReady <= armController:servos.port8


|processor|servoLogic:servoController|armController:servos
clk => servoClk.CLK
clk => _.IN1
reset => reset.IN1
x[0] => Mult0.IN18
x[1] => Mult0.IN17
x[2] => Mult0.IN16
x[3] => Mult0.IN15
x[4] => Mult0.IN14
x[5] => Mult0.IN13
x[6] => Mult0.IN12
x[7] => Mult0.IN11
y[0] => Mult2.IN18
y[1] => Mult2.IN17
y[2] => Mult2.IN16
y[3] => Mult2.IN15
y[4] => Mult2.IN14
y[5] => Mult2.IN13
y[6] => Mult2.IN12
y[7] => Mult2.IN11
z[0] => Mult4.IN18
z[1] => Mult4.IN17
z[2] => Mult4.IN16
z[3] => Mult4.IN15
z[4] => Mult4.IN14
z[5] => Mult4.IN13
z[6] => Mult4.IN12
z[7] => Mult4.IN11
servoX <= servoX.DB_MAX_OUTPUT_PORT_TYPE
servoY <= servoY.DB_MAX_OUTPUT_PORT_TYPE
servoZ <= servoZ.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
servoCtrl[0] => Equal2.IN0
servoCtrl[0] => Equal3.IN1
servoCtrl[0] => Equal4.IN1
servoCtrl[1] => Equal2.IN1
servoCtrl[1] => Equal3.IN0
servoCtrl[1] => Equal4.IN0


|processor|servoLogic:servoController|armController:servos|milCounter:counter
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
clk => out[9]~reg0.CLK
clk => out[10]~reg0.CLK
clk => out[11]~reg0.CLK
clk => out[12]~reg0.CLK
clk => out[13]~reg0.CLK
clk => out[14]~reg0.CLK
clk => out[15]~reg0.CLK
clk => out[16]~reg0.CLK
clk => out[17]~reg0.CLK
clk => out[18]~reg0.CLK
clk => out[19]~reg0.CLK
reset => out.IN1
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|IR_Receiver:IR
iCLK => oDATA[0]~reg0.CLK
iCLK => oDATA[1]~reg0.CLK
iCLK => oDATA[2]~reg0.CLK
iCLK => oDATA[3]~reg0.CLK
iCLK => oDATA[4]~reg0.CLK
iCLK => oDATA[5]~reg0.CLK
iCLK => oDATA[6]~reg0.CLK
iCLK => oDATA[7]~reg0.CLK
iCLK => oDATA[8]~reg0.CLK
iCLK => oDATA[9]~reg0.CLK
iCLK => oDATA[10]~reg0.CLK
iCLK => oDATA[11]~reg0.CLK
iCLK => oDATA[12]~reg0.CLK
iCLK => oDATA[13]~reg0.CLK
iCLK => oDATA[14]~reg0.CLK
iCLK => oDATA[15]~reg0.CLK
iCLK => oDATA[16]~reg0.CLK
iCLK => oDATA[17]~reg0.CLK
iCLK => oDATA[18]~reg0.CLK
iCLK => oDATA[19]~reg0.CLK
iCLK => oDATA[20]~reg0.CLK
iCLK => oDATA[21]~reg0.CLK
iCLK => oDATA[22]~reg0.CLK
iCLK => oDATA[23]~reg0.CLK
iCLK => oDATA[24]~reg0.CLK
iCLK => oDATA[25]~reg0.CLK
iCLK => oDATA[26]~reg0.CLK
iCLK => oDATA[27]~reg0.CLK
iCLK => oDATA[28]~reg0.CLK
iCLK => oDATA[29]~reg0.CLK
iCLK => oDATA[30]~reg0.CLK
iCLK => oDATA[31]~reg0.CLK
iCLK => data_buf[0].CLK
iCLK => data_buf[1].CLK
iCLK => data_buf[2].CLK
iCLK => data_buf[3].CLK
iCLK => data_buf[4].CLK
iCLK => data_buf[5].CLK
iCLK => data_buf[6].CLK
iCLK => data_buf[7].CLK
iCLK => data_buf[8].CLK
iCLK => data_buf[9].CLK
iCLK => data_buf[10].CLK
iCLK => data_buf[11].CLK
iCLK => data_buf[12].CLK
iCLK => data_buf[13].CLK
iCLK => data_buf[14].CLK
iCLK => data_buf[15].CLK
iCLK => data_buf[16].CLK
iCLK => data_buf[17].CLK
iCLK => data_buf[18].CLK
iCLK => data_buf[19].CLK
iCLK => data_buf[20].CLK
iCLK => data_buf[21].CLK
iCLK => data_buf[22].CLK
iCLK => data_buf[23].CLK
iCLK => data_buf[24].CLK
iCLK => data_buf[25].CLK
iCLK => data_buf[26].CLK
iCLK => data_buf[27].CLK
iCLK => data_buf[28].CLK
iCLK => data_buf[29].CLK
iCLK => data_buf[30].CLK
iCLK => data_buf[31].CLK
iCLK => data_ready.CLK
iCLK => data[0].CLK
iCLK => data[1].CLK
iCLK => data[2].CLK
iCLK => data[3].CLK
iCLK => data[4].CLK
iCLK => data[5].CLK
iCLK => data[6].CLK
iCLK => data[7].CLK
iCLK => data[8].CLK
iCLK => data[9].CLK
iCLK => data[10].CLK
iCLK => data[11].CLK
iCLK => data[12].CLK
iCLK => data[13].CLK
iCLK => data[14].CLK
iCLK => data[15].CLK
iCLK => data[16].CLK
iCLK => data[17].CLK
iCLK => data[18].CLK
iCLK => data[19].CLK
iCLK => data[20].CLK
iCLK => data[21].CLK
iCLK => data[22].CLK
iCLK => data[23].CLK
iCLK => data[24].CLK
iCLK => data[25].CLK
iCLK => data[26].CLK
iCLK => data[27].CLK
iCLK => data[28].CLK
iCLK => data[29].CLK
iCLK => data[30].CLK
iCLK => data[31].CLK
iCLK => bitcount[0].CLK
iCLK => bitcount[1].CLK
iCLK => bitcount[2].CLK
iCLK => bitcount[3].CLK
iCLK => bitcount[4].CLK
iCLK => bitcount[5].CLK
iCLK => data_count_flag.CLK
iCLK => data_count[0].CLK
iCLK => data_count[1].CLK
iCLK => data_count[2].CLK
iCLK => data_count[3].CLK
iCLK => data_count[4].CLK
iCLK => data_count[5].CLK
iCLK => data_count[6].CLK
iCLK => data_count[7].CLK
iCLK => data_count[8].CLK
iCLK => data_count[9].CLK
iCLK => data_count[10].CLK
iCLK => data_count[11].CLK
iCLK => data_count[12].CLK
iCLK => data_count[13].CLK
iCLK => data_count[14].CLK
iCLK => data_count[15].CLK
iCLK => data_count[16].CLK
iCLK => data_count[17].CLK
iCLK => state_count_flag.CLK
iCLK => state_count[0].CLK
iCLK => state_count[1].CLK
iCLK => state_count[2].CLK
iCLK => state_count[3].CLK
iCLK => state_count[4].CLK
iCLK => state_count[5].CLK
iCLK => state_count[6].CLK
iCLK => state_count[7].CLK
iCLK => state_count[8].CLK
iCLK => state_count[9].CLK
iCLK => state_count[10].CLK
iCLK => state_count[11].CLK
iCLK => state_count[12].CLK
iCLK => state_count[13].CLK
iCLK => state_count[14].CLK
iCLK => state_count[15].CLK
iCLK => state_count[16].CLK
iCLK => state_count[17].CLK
iCLK => idle_count_flag.CLK
iCLK => idle_count[0].CLK
iCLK => idle_count[1].CLK
iCLK => idle_count[2].CLK
iCLK => idle_count[3].CLK
iCLK => idle_count[4].CLK
iCLK => idle_count[5].CLK
iCLK => idle_count[6].CLK
iCLK => idle_count[7].CLK
iCLK => idle_count[8].CLK
iCLK => idle_count[9].CLK
iCLK => idle_count[10].CLK
iCLK => idle_count[11].CLK
iCLK => idle_count[12].CLK
iCLK => idle_count[13].CLK
iCLK => idle_count[14].CLK
iCLK => idle_count[15].CLK
iCLK => idle_count[16].CLK
iCLK => idle_count[17].CLK
iCLK => state~1.DATAIN
iRST_n => data_ready.ACLR
iRST_n => oDATA[0]~reg0.ACLR
iRST_n => oDATA[1]~reg0.ACLR
iRST_n => oDATA[2]~reg0.ACLR
iRST_n => oDATA[3]~reg0.ACLR
iRST_n => oDATA[4]~reg0.ACLR
iRST_n => oDATA[5]~reg0.ACLR
iRST_n => oDATA[6]~reg0.ACLR
iRST_n => oDATA[7]~reg0.ACLR
iRST_n => oDATA[8]~reg0.ACLR
iRST_n => oDATA[9]~reg0.ACLR
iRST_n => oDATA[10]~reg0.ACLR
iRST_n => oDATA[11]~reg0.ACLR
iRST_n => oDATA[12]~reg0.ACLR
iRST_n => oDATA[13]~reg0.ACLR
iRST_n => oDATA[14]~reg0.ACLR
iRST_n => oDATA[15]~reg0.ACLR
iRST_n => oDATA[16]~reg0.ACLR
iRST_n => oDATA[17]~reg0.ACLR
iRST_n => oDATA[18]~reg0.ACLR
iRST_n => oDATA[19]~reg0.ACLR
iRST_n => oDATA[20]~reg0.ACLR
iRST_n => oDATA[21]~reg0.ACLR
iRST_n => oDATA[22]~reg0.ACLR
iRST_n => oDATA[23]~reg0.ACLR
iRST_n => oDATA[24]~reg0.ACLR
iRST_n => oDATA[25]~reg0.ACLR
iRST_n => oDATA[26]~reg0.ACLR
iRST_n => oDATA[27]~reg0.ACLR
iRST_n => oDATA[28]~reg0.ACLR
iRST_n => oDATA[29]~reg0.ACLR
iRST_n => oDATA[30]~reg0.ACLR
iRST_n => oDATA[31]~reg0.ACLR
iRST_n => idle_count[0].ACLR
iRST_n => idle_count[1].ACLR
iRST_n => idle_count[2].ACLR
iRST_n => idle_count[3].ACLR
iRST_n => idle_count[4].ACLR
iRST_n => idle_count[5].ACLR
iRST_n => idle_count[6].ACLR
iRST_n => idle_count[7].ACLR
iRST_n => idle_count[8].ACLR
iRST_n => idle_count[9].ACLR
iRST_n => idle_count[10].ACLR
iRST_n => idle_count[11].ACLR
iRST_n => idle_count[12].ACLR
iRST_n => idle_count[13].ACLR
iRST_n => idle_count[14].ACLR
iRST_n => idle_count[15].ACLR
iRST_n => idle_count[16].ACLR
iRST_n => idle_count[17].ACLR
iRST_n => idle_count_flag.ACLR
iRST_n => state_count[0].ACLR
iRST_n => state_count[1].ACLR
iRST_n => state_count[2].ACLR
iRST_n => state_count[3].ACLR
iRST_n => state_count[4].ACLR
iRST_n => state_count[5].ACLR
iRST_n => state_count[6].ACLR
iRST_n => state_count[7].ACLR
iRST_n => state_count[8].ACLR
iRST_n => state_count[9].ACLR
iRST_n => state_count[10].ACLR
iRST_n => state_count[11].ACLR
iRST_n => state_count[12].ACLR
iRST_n => state_count[13].ACLR
iRST_n => state_count[14].ACLR
iRST_n => state_count[15].ACLR
iRST_n => state_count[16].ACLR
iRST_n => state_count[17].ACLR
iRST_n => state_count_flag.ACLR
iRST_n => data_count[0].ACLR
iRST_n => data_count[1].ACLR
iRST_n => data_count[2].ACLR
iRST_n => data_count[3].ACLR
iRST_n => data_count[4].ACLR
iRST_n => data_count[5].ACLR
iRST_n => data_count[6].ACLR
iRST_n => data_count[7].ACLR
iRST_n => data_count[8].ACLR
iRST_n => data_count[9].ACLR
iRST_n => data_count[10].ACLR
iRST_n => data_count[11].ACLR
iRST_n => data_count[12].ACLR
iRST_n => data_count[13].ACLR
iRST_n => data_count[14].ACLR
iRST_n => data_count[15].ACLR
iRST_n => data_count[16].ACLR
iRST_n => data_count[17].ACLR
iRST_n => data_count_flag.ACLR
iRST_n => bitcount[0].ACLR
iRST_n => bitcount[1].ACLR
iRST_n => bitcount[2].ACLR
iRST_n => bitcount[3].ACLR
iRST_n => bitcount[4].ACLR
iRST_n => bitcount[5].ACLR
iRST_n => data[0].ACLR
iRST_n => data[1].ACLR
iRST_n => data[2].ACLR
iRST_n => data[3].ACLR
iRST_n => data[4].ACLR
iRST_n => data[5].ACLR
iRST_n => data[6].ACLR
iRST_n => data[7].ACLR
iRST_n => data[8].ACLR
iRST_n => data[9].ACLR
iRST_n => data[10].ACLR
iRST_n => data[11].ACLR
iRST_n => data[12].ACLR
iRST_n => data[13].ACLR
iRST_n => data[14].ACLR
iRST_n => data[15].ACLR
iRST_n => data[16].ACLR
iRST_n => data[17].ACLR
iRST_n => data[18].ACLR
iRST_n => data[19].ACLR
iRST_n => data[20].ACLR
iRST_n => data[21].ACLR
iRST_n => data[22].ACLR
iRST_n => data[23].ACLR
iRST_n => data[24].ACLR
iRST_n => data[25].ACLR
iRST_n => data[26].ACLR
iRST_n => data[27].ACLR
iRST_n => data[28].ACLR
iRST_n => data[29].ACLR
iRST_n => data[30].ACLR
iRST_n => data[31].ACLR
iRST_n => state~3.DATAIN
iRST_n => data_buf[31].ENA
iRST_n => data_buf[30].ENA
iRST_n => data_buf[29].ENA
iRST_n => data_buf[28].ENA
iRST_n => data_buf[27].ENA
iRST_n => data_buf[26].ENA
iRST_n => data_buf[25].ENA
iRST_n => data_buf[24].ENA
iRST_n => data_buf[23].ENA
iRST_n => data_buf[22].ENA
iRST_n => data_buf[21].ENA
iRST_n => data_buf[20].ENA
iRST_n => data_buf[19].ENA
iRST_n => data_buf[18].ENA
iRST_n => data_buf[17].ENA
iRST_n => data_buf[16].ENA
iRST_n => data_buf[15].ENA
iRST_n => data_buf[14].ENA
iRST_n => data_buf[13].ENA
iRST_n => data_buf[12].ENA
iRST_n => data_buf[11].ENA
iRST_n => data_buf[10].ENA
iRST_n => data_buf[9].ENA
iRST_n => data_buf[8].ENA
iRST_n => data_buf[7].ENA
iRST_n => data_buf[6].ENA
iRST_n => data_buf[5].ENA
iRST_n => data_buf[4].ENA
iRST_n => data_buf[3].ENA
iRST_n => data_buf[2].ENA
iRST_n => data_buf[1].ENA
iRST_n => data_buf[0].ENA
iIRDA => always3.IN0
iIRDA => always5.IN0
iIRDA => always1.IN0
oDATA_READY <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
oDATA[0] <= oDATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[1] <= oDATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[2] <= oDATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[3] <= oDATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[4] <= oDATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[5] <= oDATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[6] <= oDATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[7] <= oDATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[8] <= oDATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[9] <= oDATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[10] <= oDATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[11] <= oDATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[12] <= oDATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[13] <= oDATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[14] <= oDATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[15] <= oDATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[16] <= oDATA[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[17] <= oDATA[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[18] <= oDATA[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[19] <= oDATA[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[20] <= oDATA[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[21] <= oDATA[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[22] <= oDATA[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[23] <= oDATA[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[24] <= oDATA[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[25] <= oDATA[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[26] <= oDATA[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[27] <= oDATA[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[28] <= oDATA[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[29] <= oDATA[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[30] <= oDATA[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[31] <= oDATA[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
irData0[0] => irDatareg[0].DATAIN
irData0[1] => irDatareg[1].DATAIN
irData0[2] => irDatareg[2].DATAIN
irData0[3] => irDatareg[3].DATAIN
irData0[4] => irDatareg[4].DATAIN
irData0[5] => irDatareg[5].DATAIN
irData0[6] => irDatareg[6].DATAIN
irData0[7] => irDatareg[7].DATAIN
irData0[8] => irDatareg[8].DATAIN
irData0[9] => irDatareg[9].DATAIN
irData0[10] => irDatareg[10].DATAIN
irData0[11] => irDatareg[11].DATAIN
irData0[12] => irDatareg[12].DATAIN
irData0[13] => irDatareg[13].DATAIN
irData0[14] => irDatareg[14].DATAIN
irData0[15] => irDatareg[15].DATAIN
irData0[16] => irDatareg[16].DATAIN
irData0[17] => irDatareg[17].DATAIN
irData0[18] => irDatareg[18].DATAIN
irData0[19] => irDatareg[19].DATAIN
irData0[20] => irDatareg[20].DATAIN
irData0[21] => irDatareg[21].DATAIN
irData0[22] => irDatareg[22].DATAIN
irData0[23] => irDatareg[23].DATAIN
irData0[24] => irDatareg[24].DATAIN
irData0[25] => irDatareg[25].DATAIN
irData0[26] => irDatareg[26].DATAIN
irData0[27] => irDatareg[27].DATAIN
irData0[28] => irDatareg[28].DATAIN
irData0[29] => irDatareg[29].DATAIN
irData0[30] => irDatareg[30].DATAIN
irData0[31] => irDatareg[31].DATAIN
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
servo0[0] => servoReg[0].DATAIN
servo0[1] => servoReg[1].DATAIN
ir0 => IRreg.DATAIN
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
irData1[0] <= irDatareg[0].DB_MAX_OUTPUT_PORT_TYPE
irData1[1] <= irDatareg[1].DB_MAX_OUTPUT_PORT_TYPE
irData1[2] <= irDatareg[2].DB_MAX_OUTPUT_PORT_TYPE
irData1[3] <= irDatareg[3].DB_MAX_OUTPUT_PORT_TYPE
irData1[4] <= irDatareg[4].DB_MAX_OUTPUT_PORT_TYPE
irData1[5] <= irDatareg[5].DB_MAX_OUTPUT_PORT_TYPE
irData1[6] <= irDatareg[6].DB_MAX_OUTPUT_PORT_TYPE
irData1[7] <= irDatareg[7].DB_MAX_OUTPUT_PORT_TYPE
irData1[8] <= irDatareg[8].DB_MAX_OUTPUT_PORT_TYPE
irData1[9] <= irDatareg[9].DB_MAX_OUTPUT_PORT_TYPE
irData1[10] <= irDatareg[10].DB_MAX_OUTPUT_PORT_TYPE
irData1[11] <= irDatareg[11].DB_MAX_OUTPUT_PORT_TYPE
irData1[12] <= irDatareg[12].DB_MAX_OUTPUT_PORT_TYPE
irData1[13] <= irDatareg[13].DB_MAX_OUTPUT_PORT_TYPE
irData1[14] <= irDatareg[14].DB_MAX_OUTPUT_PORT_TYPE
irData1[15] <= irDatareg[15].DB_MAX_OUTPUT_PORT_TYPE
irData1[16] <= irDatareg[16].DB_MAX_OUTPUT_PORT_TYPE
irData1[17] <= irDatareg[17].DB_MAX_OUTPUT_PORT_TYPE
irData1[18] <= irDatareg[18].DB_MAX_OUTPUT_PORT_TYPE
irData1[19] <= irDatareg[19].DB_MAX_OUTPUT_PORT_TYPE
irData1[20] <= irDatareg[20].DB_MAX_OUTPUT_PORT_TYPE
irData1[21] <= irDatareg[21].DB_MAX_OUTPUT_PORT_TYPE
irData1[22] <= irDatareg[22].DB_MAX_OUTPUT_PORT_TYPE
irData1[23] <= irDatareg[23].DB_MAX_OUTPUT_PORT_TYPE
irData1[24] <= irDatareg[24].DB_MAX_OUTPUT_PORT_TYPE
irData1[25] <= irDatareg[25].DB_MAX_OUTPUT_PORT_TYPE
irData1[26] <= irDatareg[26].DB_MAX_OUTPUT_PORT_TYPE
irData1[27] <= irDatareg[27].DB_MAX_OUTPUT_PORT_TYPE
irData1[28] <= irDatareg[28].DB_MAX_OUTPUT_PORT_TYPE
irData1[29] <= irDatareg[29].DB_MAX_OUTPUT_PORT_TYPE
irData1[30] <= irDatareg[30].DB_MAX_OUTPUT_PORT_TYPE
irData1[31] <= irDatareg[31].DB_MAX_OUTPUT_PORT_TYPE
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
servo1[0] <= servoReg[0].DB_MAX_OUTPUT_PORT_TYPE
servo1[1] <= servoReg[1].DB_MAX_OUTPUT_PORT_TYPE
ir1 <= IRreg.DB_MAX_OUTPUT_PORT_TYPE
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchXM|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wmBypass0
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|dmem:mydmem
aclr => aclr.IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a
q[16] <= altsyncram:altsyncram_component.q_a
q[17] <= altsyncram:altsyncram_component.q_a
q[18] <= altsyncram:altsyncram_component.q_a
q[19] <= altsyncram:altsyncram_component.q_a
q[20] <= altsyncram:altsyncram_component.q_a
q[21] <= altsyncram:altsyncram_component.q_a
q[22] <= altsyncram:altsyncram_component.q_a
q[23] <= altsyncram:altsyncram_component.q_a
q[24] <= altsyncram:altsyncram_component.q_a
q[25] <= altsyncram:altsyncram_component.q_a
q[26] <= altsyncram:altsyncram_component.q_a
q[27] <= altsyncram:altsyncram_component.q_a
q[28] <= altsyncram:altsyncram_component.q_a
q[29] <= altsyncram:altsyncram_component.q_a
q[30] <= altsyncram:altsyncram_component.q_a
q[31] <= altsyncram:altsyncram_component.q_a


|processor|dmem:mydmem|altsyncram:altsyncram_component
wren_a => altsyncram_p6g1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_p6g1:auto_generated.data_a[0]
data_a[1] => altsyncram_p6g1:auto_generated.data_a[1]
data_a[2] => altsyncram_p6g1:auto_generated.data_a[2]
data_a[3] => altsyncram_p6g1:auto_generated.data_a[3]
data_a[4] => altsyncram_p6g1:auto_generated.data_a[4]
data_a[5] => altsyncram_p6g1:auto_generated.data_a[5]
data_a[6] => altsyncram_p6g1:auto_generated.data_a[6]
data_a[7] => altsyncram_p6g1:auto_generated.data_a[7]
data_a[8] => altsyncram_p6g1:auto_generated.data_a[8]
data_a[9] => altsyncram_p6g1:auto_generated.data_a[9]
data_a[10] => altsyncram_p6g1:auto_generated.data_a[10]
data_a[11] => altsyncram_p6g1:auto_generated.data_a[11]
data_a[12] => altsyncram_p6g1:auto_generated.data_a[12]
data_a[13] => altsyncram_p6g1:auto_generated.data_a[13]
data_a[14] => altsyncram_p6g1:auto_generated.data_a[14]
data_a[15] => altsyncram_p6g1:auto_generated.data_a[15]
data_a[16] => altsyncram_p6g1:auto_generated.data_a[16]
data_a[17] => altsyncram_p6g1:auto_generated.data_a[17]
data_a[18] => altsyncram_p6g1:auto_generated.data_a[18]
data_a[19] => altsyncram_p6g1:auto_generated.data_a[19]
data_a[20] => altsyncram_p6g1:auto_generated.data_a[20]
data_a[21] => altsyncram_p6g1:auto_generated.data_a[21]
data_a[22] => altsyncram_p6g1:auto_generated.data_a[22]
data_a[23] => altsyncram_p6g1:auto_generated.data_a[23]
data_a[24] => altsyncram_p6g1:auto_generated.data_a[24]
data_a[25] => altsyncram_p6g1:auto_generated.data_a[25]
data_a[26] => altsyncram_p6g1:auto_generated.data_a[26]
data_a[27] => altsyncram_p6g1:auto_generated.data_a[27]
data_a[28] => altsyncram_p6g1:auto_generated.data_a[28]
data_a[29] => altsyncram_p6g1:auto_generated.data_a[29]
data_a[30] => altsyncram_p6g1:auto_generated.data_a[30]
data_a[31] => altsyncram_p6g1:auto_generated.data_a[31]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_p6g1:auto_generated.address_a[0]
address_a[1] => altsyncram_p6g1:auto_generated.address_a[1]
address_a[2] => altsyncram_p6g1:auto_generated.address_a[2]
address_a[3] => altsyncram_p6g1:auto_generated.address_a[3]
address_a[4] => altsyncram_p6g1:auto_generated.address_a[4]
address_a[5] => altsyncram_p6g1:auto_generated.address_a[5]
address_a[6] => altsyncram_p6g1:auto_generated.address_a[6]
address_a[7] => altsyncram_p6g1:auto_generated.address_a[7]
address_a[8] => altsyncram_p6g1:auto_generated.address_a[8]
address_a[9] => altsyncram_p6g1:auto_generated.address_a[9]
address_a[10] => altsyncram_p6g1:auto_generated.address_a[10]
address_a[11] => altsyncram_p6g1:auto_generated.address_a[11]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_p6g1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => altsyncram_p6g1:auto_generated.aclr0
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_p6g1:auto_generated.q_a[0]
q_a[1] <= altsyncram_p6g1:auto_generated.q_a[1]
q_a[2] <= altsyncram_p6g1:auto_generated.q_a[2]
q_a[3] <= altsyncram_p6g1:auto_generated.q_a[3]
q_a[4] <= altsyncram_p6g1:auto_generated.q_a[4]
q_a[5] <= altsyncram_p6g1:auto_generated.q_a[5]
q_a[6] <= altsyncram_p6g1:auto_generated.q_a[6]
q_a[7] <= altsyncram_p6g1:auto_generated.q_a[7]
q_a[8] <= altsyncram_p6g1:auto_generated.q_a[8]
q_a[9] <= altsyncram_p6g1:auto_generated.q_a[9]
q_a[10] <= altsyncram_p6g1:auto_generated.q_a[10]
q_a[11] <= altsyncram_p6g1:auto_generated.q_a[11]
q_a[12] <= altsyncram_p6g1:auto_generated.q_a[12]
q_a[13] <= altsyncram_p6g1:auto_generated.q_a[13]
q_a[14] <= altsyncram_p6g1:auto_generated.q_a[14]
q_a[15] <= altsyncram_p6g1:auto_generated.q_a[15]
q_a[16] <= altsyncram_p6g1:auto_generated.q_a[16]
q_a[17] <= altsyncram_p6g1:auto_generated.q_a[17]
q_a[18] <= altsyncram_p6g1:auto_generated.q_a[18]
q_a[19] <= altsyncram_p6g1:auto_generated.q_a[19]
q_a[20] <= altsyncram_p6g1:auto_generated.q_a[20]
q_a[21] <= altsyncram_p6g1:auto_generated.q_a[21]
q_a[22] <= altsyncram_p6g1:auto_generated.q_a[22]
q_a[23] <= altsyncram_p6g1:auto_generated.q_a[23]
q_a[24] <= altsyncram_p6g1:auto_generated.q_a[24]
q_a[25] <= altsyncram_p6g1:auto_generated.q_a[25]
q_a[26] <= altsyncram_p6g1:auto_generated.q_a[26]
q_a[27] <= altsyncram_p6g1:auto_generated.q_a[27]
q_a[28] <= altsyncram_p6g1:auto_generated.q_a[28]
q_a[29] <= altsyncram_p6g1:auto_generated.q_a[29]
q_a[30] <= altsyncram_p6g1:auto_generated.q_a[30]
q_a[31] <= altsyncram_p6g1:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|processor|dmem:mydmem|altsyncram:altsyncram_component|altsyncram_p6g1:auto_generated
aclr0 => ram_block1a0.CLR0
aclr0 => ram_block1a1.CLR0
aclr0 => ram_block1a2.CLR0
aclr0 => ram_block1a3.CLR0
aclr0 => ram_block1a4.CLR0
aclr0 => ram_block1a5.CLR0
aclr0 => ram_block1a6.CLR0
aclr0 => ram_block1a7.CLR0
aclr0 => ram_block1a8.CLR0
aclr0 => ram_block1a9.CLR0
aclr0 => ram_block1a10.CLR0
aclr0 => ram_block1a11.CLR0
aclr0 => ram_block1a12.CLR0
aclr0 => ram_block1a13.CLR0
aclr0 => ram_block1a14.CLR0
aclr0 => ram_block1a15.CLR0
aclr0 => ram_block1a16.CLR0
aclr0 => ram_block1a17.CLR0
aclr0 => ram_block1a18.CLR0
aclr0 => ram_block1a19.CLR0
aclr0 => ram_block1a20.CLR0
aclr0 => ram_block1a21.CLR0
aclr0 => ram_block1a22.CLR0
aclr0 => ram_block1a23.CLR0
aclr0 => ram_block1a24.CLR0
aclr0 => ram_block1a25.CLR0
aclr0 => ram_block1a26.CLR0
aclr0 => ram_block1a27.CLR0
aclr0 => ram_block1a28.CLR0
aclr0 => ram_block1a29.CLR0
aclr0 => ram_block1a30.CLR0
aclr0 => ram_block1a31.CLR0
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[8] => ram_block1a12.PORTAADDR8
address_a[8] => ram_block1a13.PORTAADDR8
address_a[8] => ram_block1a14.PORTAADDR8
address_a[8] => ram_block1a15.PORTAADDR8
address_a[8] => ram_block1a16.PORTAADDR8
address_a[8] => ram_block1a17.PORTAADDR8
address_a[8] => ram_block1a18.PORTAADDR8
address_a[8] => ram_block1a19.PORTAADDR8
address_a[8] => ram_block1a20.PORTAADDR8
address_a[8] => ram_block1a21.PORTAADDR8
address_a[8] => ram_block1a22.PORTAADDR8
address_a[8] => ram_block1a23.PORTAADDR8
address_a[8] => ram_block1a24.PORTAADDR8
address_a[8] => ram_block1a25.PORTAADDR8
address_a[8] => ram_block1a26.PORTAADDR8
address_a[8] => ram_block1a27.PORTAADDR8
address_a[8] => ram_block1a28.PORTAADDR8
address_a[8] => ram_block1a29.PORTAADDR8
address_a[8] => ram_block1a30.PORTAADDR8
address_a[8] => ram_block1a31.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[9] => ram_block1a12.PORTAADDR9
address_a[9] => ram_block1a13.PORTAADDR9
address_a[9] => ram_block1a14.PORTAADDR9
address_a[9] => ram_block1a15.PORTAADDR9
address_a[9] => ram_block1a16.PORTAADDR9
address_a[9] => ram_block1a17.PORTAADDR9
address_a[9] => ram_block1a18.PORTAADDR9
address_a[9] => ram_block1a19.PORTAADDR9
address_a[9] => ram_block1a20.PORTAADDR9
address_a[9] => ram_block1a21.PORTAADDR9
address_a[9] => ram_block1a22.PORTAADDR9
address_a[9] => ram_block1a23.PORTAADDR9
address_a[9] => ram_block1a24.PORTAADDR9
address_a[9] => ram_block1a25.PORTAADDR9
address_a[9] => ram_block1a26.PORTAADDR9
address_a[9] => ram_block1a27.PORTAADDR9
address_a[9] => ram_block1a28.PORTAADDR9
address_a[9] => ram_block1a29.PORTAADDR9
address_a[9] => ram_block1a30.PORTAADDR9
address_a[9] => ram_block1a31.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[10] => ram_block1a12.PORTAADDR10
address_a[10] => ram_block1a13.PORTAADDR10
address_a[10] => ram_block1a14.PORTAADDR10
address_a[10] => ram_block1a15.PORTAADDR10
address_a[10] => ram_block1a16.PORTAADDR10
address_a[10] => ram_block1a17.PORTAADDR10
address_a[10] => ram_block1a18.PORTAADDR10
address_a[10] => ram_block1a19.PORTAADDR10
address_a[10] => ram_block1a20.PORTAADDR10
address_a[10] => ram_block1a21.PORTAADDR10
address_a[10] => ram_block1a22.PORTAADDR10
address_a[10] => ram_block1a23.PORTAADDR10
address_a[10] => ram_block1a24.PORTAADDR10
address_a[10] => ram_block1a25.PORTAADDR10
address_a[10] => ram_block1a26.PORTAADDR10
address_a[10] => ram_block1a27.PORTAADDR10
address_a[10] => ram_block1a28.PORTAADDR10
address_a[10] => ram_block1a29.PORTAADDR10
address_a[10] => ram_block1a30.PORTAADDR10
address_a[10] => ram_block1a31.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[11] => ram_block1a12.PORTAADDR11
address_a[11] => ram_block1a13.PORTAADDR11
address_a[11] => ram_block1a14.PORTAADDR11
address_a[11] => ram_block1a15.PORTAADDR11
address_a[11] => ram_block1a16.PORTAADDR11
address_a[11] => ram_block1a17.PORTAADDR11
address_a[11] => ram_block1a18.PORTAADDR11
address_a[11] => ram_block1a19.PORTAADDR11
address_a[11] => ram_block1a20.PORTAADDR11
address_a[11] => ram_block1a21.PORTAADDR11
address_a[11] => ram_block1a22.PORTAADDR11
address_a[11] => ram_block1a23.PORTAADDR11
address_a[11] => ram_block1a24.PORTAADDR11
address_a[11] => ram_block1a25.PORTAADDR11
address_a[11] => ram_block1a26.PORTAADDR11
address_a[11] => ram_block1a27.PORTAADDR11
address_a[11] => ram_block1a28.PORTAADDR11
address_a[11] => ram_block1a29.PORTAADDR11
address_a[11] => ram_block1a30.PORTAADDR11
address_a[11] => ram_block1a31.PORTAADDR11
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
data_a[8] => ram_block1a8.PORTADATAIN
data_a[9] => ram_block1a9.PORTADATAIN
data_a[10] => ram_block1a10.PORTADATAIN
data_a[11] => ram_block1a11.PORTADATAIN
data_a[12] => ram_block1a12.PORTADATAIN
data_a[13] => ram_block1a13.PORTADATAIN
data_a[14] => ram_block1a14.PORTADATAIN
data_a[15] => ram_block1a15.PORTADATAIN
data_a[16] => ram_block1a16.PORTADATAIN
data_a[17] => ram_block1a17.PORTADATAIN
data_a[18] => ram_block1a18.PORTADATAIN
data_a[19] => ram_block1a19.PORTADATAIN
data_a[20] => ram_block1a20.PORTADATAIN
data_a[21] => ram_block1a21.PORTADATAIN
data_a[22] => ram_block1a22.PORTADATAIN
data_a[23] => ram_block1a23.PORTADATAIN
data_a[24] => ram_block1a24.PORTADATAIN
data_a[25] => ram_block1a25.PORTADATAIN
data_a[26] => ram_block1a26.PORTADATAIN
data_a[27] => ram_block1a27.PORTADATAIN
data_a[28] => ram_block1a28.PORTADATAIN
data_a[29] => ram_block1a29.PORTADATAIN
data_a[30] => ram_block1a30.PORTADATAIN
data_a[31] => ram_block1a31.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a8.PORTAWE
wren_a => ram_block1a9.PORTAWE
wren_a => ram_block1a10.PORTAWE
wren_a => ram_block1a11.PORTAWE
wren_a => ram_block1a12.PORTAWE
wren_a => ram_block1a13.PORTAWE
wren_a => ram_block1a14.PORTAWE
wren_a => ram_block1a15.PORTAWE
wren_a => ram_block1a16.PORTAWE
wren_a => ram_block1a17.PORTAWE
wren_a => ram_block1a18.PORTAWE
wren_a => ram_block1a19.PORTAWE
wren_a => ram_block1a20.PORTAWE
wren_a => ram_block1a21.PORTAWE
wren_a => ram_block1a22.PORTAWE
wren_a => ram_block1a23.PORTAWE
wren_a => ram_block1a24.PORTAWE
wren_a => ram_block1a25.PORTAWE
wren_a => ram_block1a26.PORTAWE
wren_a => ram_block1a27.PORTAWE
wren_a => ram_block1a28.PORTAWE
wren_a => ram_block1a29.PORTAWE
wren_a => ram_block1a30.PORTAWE
wren_a => ram_block1a31.PORTAWE


|processor|pipelineLatch:latchMW
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
irData0[0] => irDatareg[0].DATAIN
irData0[1] => irDatareg[1].DATAIN
irData0[2] => irDatareg[2].DATAIN
irData0[3] => irDatareg[3].DATAIN
irData0[4] => irDatareg[4].DATAIN
irData0[5] => irDatareg[5].DATAIN
irData0[6] => irDatareg[6].DATAIN
irData0[7] => irDatareg[7].DATAIN
irData0[8] => irDatareg[8].DATAIN
irData0[9] => irDatareg[9].DATAIN
irData0[10] => irDatareg[10].DATAIN
irData0[11] => irDatareg[11].DATAIN
irData0[12] => irDatareg[12].DATAIN
irData0[13] => irDatareg[13].DATAIN
irData0[14] => irDatareg[14].DATAIN
irData0[15] => irDatareg[15].DATAIN
irData0[16] => irDatareg[16].DATAIN
irData0[17] => irDatareg[17].DATAIN
irData0[18] => irDatareg[18].DATAIN
irData0[19] => irDatareg[19].DATAIN
irData0[20] => irDatareg[20].DATAIN
irData0[21] => irDatareg[21].DATAIN
irData0[22] => irDatareg[22].DATAIN
irData0[23] => irDatareg[23].DATAIN
irData0[24] => irDatareg[24].DATAIN
irData0[25] => irDatareg[25].DATAIN
irData0[26] => irDatareg[26].DATAIN
irData0[27] => irDatareg[27].DATAIN
irData0[28] => irDatareg[28].DATAIN
irData0[29] => irDatareg[29].DATAIN
irData0[30] => irDatareg[30].DATAIN
irData0[31] => irDatareg[31].DATAIN
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
servo0[0] => servoReg[0].DATAIN
servo0[1] => servoReg[1].DATAIN
ir0 => IRreg.DATAIN
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
irData1[0] <= irDatareg[0].DB_MAX_OUTPUT_PORT_TYPE
irData1[1] <= irDatareg[1].DB_MAX_OUTPUT_PORT_TYPE
irData1[2] <= irDatareg[2].DB_MAX_OUTPUT_PORT_TYPE
irData1[3] <= irDatareg[3].DB_MAX_OUTPUT_PORT_TYPE
irData1[4] <= irDatareg[4].DB_MAX_OUTPUT_PORT_TYPE
irData1[5] <= irDatareg[5].DB_MAX_OUTPUT_PORT_TYPE
irData1[6] <= irDatareg[6].DB_MAX_OUTPUT_PORT_TYPE
irData1[7] <= irDatareg[7].DB_MAX_OUTPUT_PORT_TYPE
irData1[8] <= irDatareg[8].DB_MAX_OUTPUT_PORT_TYPE
irData1[9] <= irDatareg[9].DB_MAX_OUTPUT_PORT_TYPE
irData1[10] <= irDatareg[10].DB_MAX_OUTPUT_PORT_TYPE
irData1[11] <= irDatareg[11].DB_MAX_OUTPUT_PORT_TYPE
irData1[12] <= irDatareg[12].DB_MAX_OUTPUT_PORT_TYPE
irData1[13] <= irDatareg[13].DB_MAX_OUTPUT_PORT_TYPE
irData1[14] <= irDatareg[14].DB_MAX_OUTPUT_PORT_TYPE
irData1[15] <= irDatareg[15].DB_MAX_OUTPUT_PORT_TYPE
irData1[16] <= irDatareg[16].DB_MAX_OUTPUT_PORT_TYPE
irData1[17] <= irDatareg[17].DB_MAX_OUTPUT_PORT_TYPE
irData1[18] <= irDatareg[18].DB_MAX_OUTPUT_PORT_TYPE
irData1[19] <= irDatareg[19].DB_MAX_OUTPUT_PORT_TYPE
irData1[20] <= irDatareg[20].DB_MAX_OUTPUT_PORT_TYPE
irData1[21] <= irDatareg[21].DB_MAX_OUTPUT_PORT_TYPE
irData1[22] <= irDatareg[22].DB_MAX_OUTPUT_PORT_TYPE
irData1[23] <= irDatareg[23].DB_MAX_OUTPUT_PORT_TYPE
irData1[24] <= irDatareg[24].DB_MAX_OUTPUT_PORT_TYPE
irData1[25] <= irDatareg[25].DB_MAX_OUTPUT_PORT_TYPE
irData1[26] <= irDatareg[26].DB_MAX_OUTPUT_PORT_TYPE
irData1[27] <= irDatareg[27].DB_MAX_OUTPUT_PORT_TYPE
irData1[28] <= irDatareg[28].DB_MAX_OUTPUT_PORT_TYPE
irData1[29] <= irDatareg[29].DB_MAX_OUTPUT_PORT_TYPE
irData1[30] <= irDatareg[30].DB_MAX_OUTPUT_PORT_TYPE
irData1[31] <= irDatareg[31].DB_MAX_OUTPUT_PORT_TYPE
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
servo1[0] <= servoReg[0].DB_MAX_OUTPUT_PORT_TYPE
servo1[1] <= servoReg[1].DB_MAX_OUTPUT_PORT_TYPE
ir1 <= IRreg.DB_MAX_OUTPUT_PORT_TYPE
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchMW|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fiveBitmux4to1:regW
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


|processor|fiveBitmux4to1:servoMux
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


