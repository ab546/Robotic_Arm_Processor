|processor
clock => clock.IN1
reset => reset.IN2
dmem_data_in[0] <= dMemInM[0].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[1] <= dMemInM[1].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[2] <= dMemInM[2].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[3] <= dMemInM[3].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[4] <= dMemInM[4].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[5] <= dMemInM[5].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[6] <= dMemInM[6].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[7] <= dMemInM[7].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[8] <= dMemInM[8].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[9] <= dMemInM[9].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[10] <= dMemInM[10].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[11] <= dMemInM[11].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[12] <= dMemInM[12].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[13] <= dMemInM[13].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[14] <= dMemInM[14].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[15] <= dMemInM[15].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[16] <= dMemInM[16].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[17] <= dMemInM[17].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[18] <= dMemInM[18].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[19] <= dMemInM[19].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[20] <= dMemInM[20].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[21] <= dMemInM[21].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[22] <= dMemInM[22].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[23] <= dMemInM[23].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[24] <= dMemInM[24].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[25] <= dMemInM[25].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[26] <= dMemInM[26].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[27] <= dMemInM[27].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[28] <= dMemInM[28].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[29] <= dMemInM[29].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[30] <= dMemInM[30].DB_MAX_OUTPUT_PORT_TYPE
dmem_data_in[31] <= dMemInM[31].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[0] <= execResultXM[0].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[1] <= execResultXM[1].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[2] <= execResultXM[2].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[3] <= execResultXM[3].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[4] <= execResultXM[4].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[5] <= execResultXM[5].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[6] <= execResultXM[6].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[7] <= execResultXM[7].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[8] <= execResultXM[8].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[9] <= execResultXM[9].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[10] <= execResultXM[10].DB_MAX_OUTPUT_PORT_TYPE
dmem_address[11] <= execResultXM[11].DB_MAX_OUTPUT_PORT_TYPE
gatedClk <= gatedClk.DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[0] <= fetchInsn[0].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[1] <= fetchInsn[1].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[2] <= fetchInsn[2].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[3] <= fetchInsn[3].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[4] <= fetchInsn[4].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[5] <= fetchInsn[5].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[6] <= fetchInsn[6].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[7] <= fetchInsn[7].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[8] <= fetchInsn[8].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[9] <= fetchInsn[9].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[10] <= fetchInsn[10].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[11] <= fetchInsn[11].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[12] <= fetchInsn[12].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[13] <= fetchInsn[13].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[14] <= fetchInsn[14].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[15] <= fetchInsn[15].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[16] <= fetchInsn[16].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[17] <= fetchInsn[17].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[18] <= fetchInsn[18].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[19] <= fetchInsn[19].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[20] <= fetchInsn[20].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[21] <= fetchInsn[21].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[22] <= fetchInsn[22].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[23] <= fetchInsn[23].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[24] <= fetchInsn[24].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[25] <= fetchInsn[25].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[26] <= fetchInsn[26].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[27] <= fetchInsn[27].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[28] <= fetchInsn[28].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[29] <= fetchInsn[29].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[30] <= fetchInsn[30].DB_MAX_OUTPUT_PORT_TYPE
fetchInsn[31] <= fetchInsn[31].DB_MAX_OUTPUT_PORT_TYPE
pcF[0] <= pcF[0].DB_MAX_OUTPUT_PORT_TYPE
pcF[1] <= pcF[1].DB_MAX_OUTPUT_PORT_TYPE
pcF[2] <= pcF[2].DB_MAX_OUTPUT_PORT_TYPE
pcF[3] <= pcF[3].DB_MAX_OUTPUT_PORT_TYPE
pcF[4] <= pcF[4].DB_MAX_OUTPUT_PORT_TYPE
pcF[5] <= pcF[5].DB_MAX_OUTPUT_PORT_TYPE
pcF[6] <= pcF[6].DB_MAX_OUTPUT_PORT_TYPE
pcF[7] <= pcF[7].DB_MAX_OUTPUT_PORT_TYPE
pcF[8] <= pcF[8].DB_MAX_OUTPUT_PORT_TYPE
pcF[9] <= pcF[9].DB_MAX_OUTPUT_PORT_TYPE
pcF[10] <= pcF[10].DB_MAX_OUTPUT_PORT_TYPE
pcF[11] <= pcF[11].DB_MAX_OUTPUT_PORT_TYPE
pcF[12] <= pcF[12].DB_MAX_OUTPUT_PORT_TYPE
pcF[13] <= pcF[13].DB_MAX_OUTPUT_PORT_TYPE
pcF[14] <= pcF[14].DB_MAX_OUTPUT_PORT_TYPE
pcF[15] <= pcF[15].DB_MAX_OUTPUT_PORT_TYPE
pcF[16] <= pcF[16].DB_MAX_OUTPUT_PORT_TYPE
pcF[17] <= pcF[17].DB_MAX_OUTPUT_PORT_TYPE
pcF[18] <= pcF[18].DB_MAX_OUTPUT_PORT_TYPE
pcF[19] <= pcF[19].DB_MAX_OUTPUT_PORT_TYPE
pcF[20] <= pcF[20].DB_MAX_OUTPUT_PORT_TYPE
pcF[21] <= pcF[21].DB_MAX_OUTPUT_PORT_TYPE
pcF[22] <= pcF[22].DB_MAX_OUTPUT_PORT_TYPE
pcF[23] <= pcF[23].DB_MAX_OUTPUT_PORT_TYPE
pcF[24] <= pcF[24].DB_MAX_OUTPUT_PORT_TYPE
pcF[25] <= pcF[25].DB_MAX_OUTPUT_PORT_TYPE
pcF[26] <= pcF[26].DB_MAX_OUTPUT_PORT_TYPE
pcF[27] <= pcF[27].DB_MAX_OUTPUT_PORT_TYPE
pcF[28] <= pcF[28].DB_MAX_OUTPUT_PORT_TYPE
pcF[29] <= pcF[29].DB_MAX_OUTPUT_PORT_TYPE
pcF[30] <= pcF[30].DB_MAX_OUTPUT_PORT_TYPE
pcF[31] <= pcF[31].DB_MAX_OUTPUT_PORT_TYPE
immF[0] <= immF[0].DB_MAX_OUTPUT_PORT_TYPE
immF[1] <= immF[1].DB_MAX_OUTPUT_PORT_TYPE
immF[2] <= immF[2].DB_MAX_OUTPUT_PORT_TYPE
immF[3] <= immF[3].DB_MAX_OUTPUT_PORT_TYPE
immF[4] <= immF[4].DB_MAX_OUTPUT_PORT_TYPE
immF[5] <= immF[5].DB_MAX_OUTPUT_PORT_TYPE
immF[6] <= immF[6].DB_MAX_OUTPUT_PORT_TYPE
immF[7] <= immF[7].DB_MAX_OUTPUT_PORT_TYPE
immF[8] <= immF[8].DB_MAX_OUTPUT_PORT_TYPE
immF[9] <= immF[9].DB_MAX_OUTPUT_PORT_TYPE
immF[10] <= immF[10].DB_MAX_OUTPUT_PORT_TYPE
immF[11] <= immF[11].DB_MAX_OUTPUT_PORT_TYPE
immF[12] <= immF[12].DB_MAX_OUTPUT_PORT_TYPE
immF[13] <= immF[13].DB_MAX_OUTPUT_PORT_TYPE
immF[14] <= immF[14].DB_MAX_OUTPUT_PORT_TYPE
immF[15] <= immF[15].DB_MAX_OUTPUT_PORT_TYPE
immF[16] <= immF[16].DB_MAX_OUTPUT_PORT_TYPE
immF[17] <= immF[17].DB_MAX_OUTPUT_PORT_TYPE
immF[18] <= immF[18].DB_MAX_OUTPUT_PORT_TYPE
immF[19] <= immF[19].DB_MAX_OUTPUT_PORT_TYPE
immF[20] <= immF[20].DB_MAX_OUTPUT_PORT_TYPE
immF[21] <= immF[21].DB_MAX_OUTPUT_PORT_TYPE
immF[22] <= immF[22].DB_MAX_OUTPUT_PORT_TYPE
immF[23] <= immF[23].DB_MAX_OUTPUT_PORT_TYPE
immF[24] <= immF[24].DB_MAX_OUTPUT_PORT_TYPE
immF[25] <= immF[25].DB_MAX_OUTPUT_PORT_TYPE
immF[26] <= immF[26].DB_MAX_OUTPUT_PORT_TYPE
immF[27] <= immF[27].DB_MAX_OUTPUT_PORT_TYPE
immF[28] <= immF[28].DB_MAX_OUTPUT_PORT_TYPE
immF[29] <= immF[29].DB_MAX_OUTPUT_PORT_TYPE
immF[30] <= immF[30].DB_MAX_OUTPUT_PORT_TYPE
immF[31] <= immF[31].DB_MAX_OUTPUT_PORT_TYPE
targetF[0] <= targetF[0].DB_MAX_OUTPUT_PORT_TYPE
targetF[1] <= targetF[1].DB_MAX_OUTPUT_PORT_TYPE
targetF[2] <= targetF[2].DB_MAX_OUTPUT_PORT_TYPE
targetF[3] <= targetF[3].DB_MAX_OUTPUT_PORT_TYPE
targetF[4] <= targetF[4].DB_MAX_OUTPUT_PORT_TYPE
targetF[5] <= targetF[5].DB_MAX_OUTPUT_PORT_TYPE
targetF[6] <= targetF[6].DB_MAX_OUTPUT_PORT_TYPE
targetF[7] <= targetF[7].DB_MAX_OUTPUT_PORT_TYPE
targetF[8] <= targetF[8].DB_MAX_OUTPUT_PORT_TYPE
targetF[9] <= targetF[9].DB_MAX_OUTPUT_PORT_TYPE
targetF[10] <= targetF[10].DB_MAX_OUTPUT_PORT_TYPE
targetF[11] <= targetF[11].DB_MAX_OUTPUT_PORT_TYPE
targetF[12] <= targetF[12].DB_MAX_OUTPUT_PORT_TYPE
targetF[13] <= targetF[13].DB_MAX_OUTPUT_PORT_TYPE
targetF[14] <= targetF[14].DB_MAX_OUTPUT_PORT_TYPE
targetF[15] <= targetF[15].DB_MAX_OUTPUT_PORT_TYPE
targetF[16] <= targetF[16].DB_MAX_OUTPUT_PORT_TYPE
targetF[17] <= targetF[17].DB_MAX_OUTPUT_PORT_TYPE
targetF[18] <= targetF[18].DB_MAX_OUTPUT_PORT_TYPE
targetF[19] <= targetF[19].DB_MAX_OUTPUT_PORT_TYPE
targetF[20] <= targetF[20].DB_MAX_OUTPUT_PORT_TYPE
targetF[21] <= targetF[21].DB_MAX_OUTPUT_PORT_TYPE
targetF[22] <= targetF[22].DB_MAX_OUTPUT_PORT_TYPE
targetF[23] <= targetF[23].DB_MAX_OUTPUT_PORT_TYPE
targetF[24] <= targetF[24].DB_MAX_OUTPUT_PORT_TYPE
targetF[25] <= targetF[25].DB_MAX_OUTPUT_PORT_TYPE
targetF[26] <= targetF[26].DB_MAX_OUTPUT_PORT_TYPE
targetF[27] <= targetF[27].DB_MAX_OUTPUT_PORT_TYPE
targetF[28] <= targetF[28].DB_MAX_OUTPUT_PORT_TYPE
targetF[29] <= targetF[29].DB_MAX_OUTPUT_PORT_TYPE
targetF[30] <= targetF[30].DB_MAX_OUTPUT_PORT_TYPE
targetF[31] <= targetF[31].DB_MAX_OUTPUT_PORT_TYPE
opcodeF[0] <= opcodeF[0].DB_MAX_OUTPUT_PORT_TYPE
opcodeF[1] <= opcodeF[1].DB_MAX_OUTPUT_PORT_TYPE
opcodeF[2] <= opcodeF[2].DB_MAX_OUTPUT_PORT_TYPE
opcodeF[3] <= opcodeF[3].DB_MAX_OUTPUT_PORT_TYPE
opcodeF[4] <= opcodeF[4].DB_MAX_OUTPUT_PORT_TYPE
rdF[0] <= rdF[0].DB_MAX_OUTPUT_PORT_TYPE
rdF[1] <= rdF[1].DB_MAX_OUTPUT_PORT_TYPE
rdF[2] <= rdF[2].DB_MAX_OUTPUT_PORT_TYPE
rdF[3] <= rdF[3].DB_MAX_OUTPUT_PORT_TYPE
rdF[4] <= rdF[4].DB_MAX_OUTPUT_PORT_TYPE
rsF[0] <= rsF[0].DB_MAX_OUTPUT_PORT_TYPE
rsF[1] <= rsF[1].DB_MAX_OUTPUT_PORT_TYPE
rsF[2] <= rsF[2].DB_MAX_OUTPUT_PORT_TYPE
rsF[3] <= rsF[3].DB_MAX_OUTPUT_PORT_TYPE
rsF[4] <= rsF[4].DB_MAX_OUTPUT_PORT_TYPE
rtF[0] <= rtF[0].DB_MAX_OUTPUT_PORT_TYPE
rtF[1] <= rtF[1].DB_MAX_OUTPUT_PORT_TYPE
rtF[2] <= rtF[2].DB_MAX_OUTPUT_PORT_TYPE
rtF[3] <= rtF[3].DB_MAX_OUTPUT_PORT_TYPE
rtF[4] <= rtF[4].DB_MAX_OUTPUT_PORT_TYPE
shamtF[0] <= shamtF[0].DB_MAX_OUTPUT_PORT_TYPE
shamtF[1] <= shamtF[1].DB_MAX_OUTPUT_PORT_TYPE
shamtF[2] <= shamtF[2].DB_MAX_OUTPUT_PORT_TYPE
shamtF[3] <= shamtF[3].DB_MAX_OUTPUT_PORT_TYPE
shamtF[4] <= shamtF[4].DB_MAX_OUTPUT_PORT_TYPE
aluOpF[0] <= aluOpF[0].DB_MAX_OUTPUT_PORT_TYPE
aluOpF[1] <= aluOpF[1].DB_MAX_OUTPUT_PORT_TYPE
aluOpF[2] <= aluOpF[2].DB_MAX_OUTPUT_PORT_TYPE
aluOpF[3] <= aluOpF[3].DB_MAX_OUTPUT_PORT_TYPE
aluOpF[4] <= aluOpF[4].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlF[0] <= jumpCtrlF[0].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlF[1] <= jumpCtrlF[1].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlF[0] <= branchCtrlF[0].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlF[1] <= branchCtrlF[1].DB_MAX_OUTPUT_PORT_TYPE
regWriteEnF <= regWriteEnF.DB_MAX_OUTPUT_PORT_TYPE
aluInBF <= aluInBF.DB_MAX_OUTPUT_PORT_TYPE
loadDataF <= loadDataF.DB_MAX_OUTPUT_PORT_TYPE
storeDataF <= storeDataF.DB_MAX_OUTPUT_PORT_TYPE
setxCtrlF <= setxCtrlF.DB_MAX_OUTPUT_PORT_TYPE
pcFD[0] <= pcFD[0].DB_MAX_OUTPUT_PORT_TYPE
pcFD[1] <= pcFD[1].DB_MAX_OUTPUT_PORT_TYPE
pcFD[2] <= pcFD[2].DB_MAX_OUTPUT_PORT_TYPE
pcFD[3] <= pcFD[3].DB_MAX_OUTPUT_PORT_TYPE
pcFD[4] <= pcFD[4].DB_MAX_OUTPUT_PORT_TYPE
pcFD[5] <= pcFD[5].DB_MAX_OUTPUT_PORT_TYPE
pcFD[6] <= pcFD[6].DB_MAX_OUTPUT_PORT_TYPE
pcFD[7] <= pcFD[7].DB_MAX_OUTPUT_PORT_TYPE
pcFD[8] <= pcFD[8].DB_MAX_OUTPUT_PORT_TYPE
pcFD[9] <= pcFD[9].DB_MAX_OUTPUT_PORT_TYPE
pcFD[10] <= pcFD[10].DB_MAX_OUTPUT_PORT_TYPE
pcFD[11] <= pcFD[11].DB_MAX_OUTPUT_PORT_TYPE
pcFD[12] <= pcFD[12].DB_MAX_OUTPUT_PORT_TYPE
pcFD[13] <= pcFD[13].DB_MAX_OUTPUT_PORT_TYPE
pcFD[14] <= pcFD[14].DB_MAX_OUTPUT_PORT_TYPE
pcFD[15] <= pcFD[15].DB_MAX_OUTPUT_PORT_TYPE
pcFD[16] <= pcFD[16].DB_MAX_OUTPUT_PORT_TYPE
pcFD[17] <= pcFD[17].DB_MAX_OUTPUT_PORT_TYPE
pcFD[18] <= pcFD[18].DB_MAX_OUTPUT_PORT_TYPE
pcFD[19] <= pcFD[19].DB_MAX_OUTPUT_PORT_TYPE
pcFD[20] <= pcFD[20].DB_MAX_OUTPUT_PORT_TYPE
pcFD[21] <= pcFD[21].DB_MAX_OUTPUT_PORT_TYPE
pcFD[22] <= pcFD[22].DB_MAX_OUTPUT_PORT_TYPE
pcFD[23] <= pcFD[23].DB_MAX_OUTPUT_PORT_TYPE
pcFD[24] <= pcFD[24].DB_MAX_OUTPUT_PORT_TYPE
pcFD[25] <= pcFD[25].DB_MAX_OUTPUT_PORT_TYPE
pcFD[26] <= pcFD[26].DB_MAX_OUTPUT_PORT_TYPE
pcFD[27] <= pcFD[27].DB_MAX_OUTPUT_PORT_TYPE
pcFD[28] <= pcFD[28].DB_MAX_OUTPUT_PORT_TYPE
pcFD[29] <= pcFD[29].DB_MAX_OUTPUT_PORT_TYPE
pcFD[30] <= pcFD[30].DB_MAX_OUTPUT_PORT_TYPE
pcFD[31] <= pcFD[31].DB_MAX_OUTPUT_PORT_TYPE
immFD[0] <= immFD[0].DB_MAX_OUTPUT_PORT_TYPE
immFD[1] <= immFD[1].DB_MAX_OUTPUT_PORT_TYPE
immFD[2] <= immFD[2].DB_MAX_OUTPUT_PORT_TYPE
immFD[3] <= immFD[3].DB_MAX_OUTPUT_PORT_TYPE
immFD[4] <= immFD[4].DB_MAX_OUTPUT_PORT_TYPE
immFD[5] <= immFD[5].DB_MAX_OUTPUT_PORT_TYPE
immFD[6] <= immFD[6].DB_MAX_OUTPUT_PORT_TYPE
immFD[7] <= immFD[7].DB_MAX_OUTPUT_PORT_TYPE
immFD[8] <= immFD[8].DB_MAX_OUTPUT_PORT_TYPE
immFD[9] <= immFD[9].DB_MAX_OUTPUT_PORT_TYPE
immFD[10] <= immFD[10].DB_MAX_OUTPUT_PORT_TYPE
immFD[11] <= immFD[11].DB_MAX_OUTPUT_PORT_TYPE
immFD[12] <= immFD[12].DB_MAX_OUTPUT_PORT_TYPE
immFD[13] <= immFD[13].DB_MAX_OUTPUT_PORT_TYPE
immFD[14] <= immFD[14].DB_MAX_OUTPUT_PORT_TYPE
immFD[15] <= immFD[15].DB_MAX_OUTPUT_PORT_TYPE
immFD[16] <= immFD[16].DB_MAX_OUTPUT_PORT_TYPE
immFD[17] <= immFD[17].DB_MAX_OUTPUT_PORT_TYPE
immFD[18] <= immFD[18].DB_MAX_OUTPUT_PORT_TYPE
immFD[19] <= immFD[19].DB_MAX_OUTPUT_PORT_TYPE
immFD[20] <= immFD[20].DB_MAX_OUTPUT_PORT_TYPE
immFD[21] <= immFD[21].DB_MAX_OUTPUT_PORT_TYPE
immFD[22] <= immFD[22].DB_MAX_OUTPUT_PORT_TYPE
immFD[23] <= immFD[23].DB_MAX_OUTPUT_PORT_TYPE
immFD[24] <= immFD[24].DB_MAX_OUTPUT_PORT_TYPE
immFD[25] <= immFD[25].DB_MAX_OUTPUT_PORT_TYPE
immFD[26] <= immFD[26].DB_MAX_OUTPUT_PORT_TYPE
immFD[27] <= immFD[27].DB_MAX_OUTPUT_PORT_TYPE
immFD[28] <= immFD[28].DB_MAX_OUTPUT_PORT_TYPE
immFD[29] <= immFD[29].DB_MAX_OUTPUT_PORT_TYPE
immFD[30] <= immFD[30].DB_MAX_OUTPUT_PORT_TYPE
immFD[31] <= immFD[31].DB_MAX_OUTPUT_PORT_TYPE
targetFD[0] <= targetFD[0].DB_MAX_OUTPUT_PORT_TYPE
targetFD[1] <= targetFD[1].DB_MAX_OUTPUT_PORT_TYPE
targetFD[2] <= targetFD[2].DB_MAX_OUTPUT_PORT_TYPE
targetFD[3] <= targetFD[3].DB_MAX_OUTPUT_PORT_TYPE
targetFD[4] <= targetFD[4].DB_MAX_OUTPUT_PORT_TYPE
targetFD[5] <= targetFD[5].DB_MAX_OUTPUT_PORT_TYPE
targetFD[6] <= targetFD[6].DB_MAX_OUTPUT_PORT_TYPE
targetFD[7] <= targetFD[7].DB_MAX_OUTPUT_PORT_TYPE
targetFD[8] <= targetFD[8].DB_MAX_OUTPUT_PORT_TYPE
targetFD[9] <= targetFD[9].DB_MAX_OUTPUT_PORT_TYPE
targetFD[10] <= targetFD[10].DB_MAX_OUTPUT_PORT_TYPE
targetFD[11] <= targetFD[11].DB_MAX_OUTPUT_PORT_TYPE
targetFD[12] <= targetFD[12].DB_MAX_OUTPUT_PORT_TYPE
targetFD[13] <= targetFD[13].DB_MAX_OUTPUT_PORT_TYPE
targetFD[14] <= targetFD[14].DB_MAX_OUTPUT_PORT_TYPE
targetFD[15] <= targetFD[15].DB_MAX_OUTPUT_PORT_TYPE
targetFD[16] <= targetFD[16].DB_MAX_OUTPUT_PORT_TYPE
targetFD[17] <= targetFD[17].DB_MAX_OUTPUT_PORT_TYPE
targetFD[18] <= targetFD[18].DB_MAX_OUTPUT_PORT_TYPE
targetFD[19] <= targetFD[19].DB_MAX_OUTPUT_PORT_TYPE
targetFD[20] <= targetFD[20].DB_MAX_OUTPUT_PORT_TYPE
targetFD[21] <= targetFD[21].DB_MAX_OUTPUT_PORT_TYPE
targetFD[22] <= targetFD[22].DB_MAX_OUTPUT_PORT_TYPE
targetFD[23] <= targetFD[23].DB_MAX_OUTPUT_PORT_TYPE
targetFD[24] <= targetFD[24].DB_MAX_OUTPUT_PORT_TYPE
targetFD[25] <= targetFD[25].DB_MAX_OUTPUT_PORT_TYPE
targetFD[26] <= targetFD[26].DB_MAX_OUTPUT_PORT_TYPE
targetFD[27] <= targetFD[27].DB_MAX_OUTPUT_PORT_TYPE
targetFD[28] <= targetFD[28].DB_MAX_OUTPUT_PORT_TYPE
targetFD[29] <= targetFD[29].DB_MAX_OUTPUT_PORT_TYPE
targetFD[30] <= targetFD[30].DB_MAX_OUTPUT_PORT_TYPE
targetFD[31] <= targetFD[31].DB_MAX_OUTPUT_PORT_TYPE
opcodeFD[0] <= opcodeFD[0].DB_MAX_OUTPUT_PORT_TYPE
opcodeFD[1] <= opcodeFD[1].DB_MAX_OUTPUT_PORT_TYPE
opcodeFD[2] <= opcodeFD[2].DB_MAX_OUTPUT_PORT_TYPE
opcodeFD[3] <= opcodeFD[3].DB_MAX_OUTPUT_PORT_TYPE
opcodeFD[4] <= opcodeFD[4].DB_MAX_OUTPUT_PORT_TYPE
rdFD[0] <= rdFD[0].DB_MAX_OUTPUT_PORT_TYPE
rdFD[1] <= rdFD[1].DB_MAX_OUTPUT_PORT_TYPE
rdFD[2] <= rdFD[2].DB_MAX_OUTPUT_PORT_TYPE
rdFD[3] <= rdFD[3].DB_MAX_OUTPUT_PORT_TYPE
rdFD[4] <= rdFD[4].DB_MAX_OUTPUT_PORT_TYPE
rsFD[0] <= rsFD[0].DB_MAX_OUTPUT_PORT_TYPE
rsFD[1] <= rsFD[1].DB_MAX_OUTPUT_PORT_TYPE
rsFD[2] <= rsFD[2].DB_MAX_OUTPUT_PORT_TYPE
rsFD[3] <= rsFD[3].DB_MAX_OUTPUT_PORT_TYPE
rsFD[4] <= rsFD[4].DB_MAX_OUTPUT_PORT_TYPE
rtFD[0] <= rtFD[0].DB_MAX_OUTPUT_PORT_TYPE
rtFD[1] <= rtFD[1].DB_MAX_OUTPUT_PORT_TYPE
rtFD[2] <= rtFD[2].DB_MAX_OUTPUT_PORT_TYPE
rtFD[3] <= rtFD[3].DB_MAX_OUTPUT_PORT_TYPE
rtFD[4] <= rtFD[4].DB_MAX_OUTPUT_PORT_TYPE
shamtFD[0] <= shamtFD[0].DB_MAX_OUTPUT_PORT_TYPE
shamtFD[1] <= shamtFD[1].DB_MAX_OUTPUT_PORT_TYPE
shamtFD[2] <= shamtFD[2].DB_MAX_OUTPUT_PORT_TYPE
shamtFD[3] <= shamtFD[3].DB_MAX_OUTPUT_PORT_TYPE
shamtFD[4] <= shamtFD[4].DB_MAX_OUTPUT_PORT_TYPE
aluOpFD[0] <= aluOpFD[0].DB_MAX_OUTPUT_PORT_TYPE
aluOpFD[1] <= aluOpFD[1].DB_MAX_OUTPUT_PORT_TYPE
aluOpFD[2] <= aluOpFD[2].DB_MAX_OUTPUT_PORT_TYPE
aluOpFD[3] <= aluOpFD[3].DB_MAX_OUTPUT_PORT_TYPE
aluOpFD[4] <= aluOpFD[4].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlFD[0] <= jumpCtrlFD[0].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlFD[1] <= jumpCtrlFD[1].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlFD[0] <= branchCtrlFD[0].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlFD[1] <= branchCtrlFD[1].DB_MAX_OUTPUT_PORT_TYPE
regWriteEnFD <= regWriteEnFD.DB_MAX_OUTPUT_PORT_TYPE
aluInBFD <= aluInBFD.DB_MAX_OUTPUT_PORT_TYPE
loadDataFD <= loadDataFD.DB_MAX_OUTPUT_PORT_TYPE
storeDataFD <= storeDataFD.DB_MAX_OUTPUT_PORT_TYPE
setxCtrlFD <= setxCtrlFD.DB_MAX_OUTPUT_PORT_TYPE
regAValD[0] <= regAValD[0].DB_MAX_OUTPUT_PORT_TYPE
regAValD[1] <= regAValD[1].DB_MAX_OUTPUT_PORT_TYPE
regAValD[2] <= regAValD[2].DB_MAX_OUTPUT_PORT_TYPE
regAValD[3] <= regAValD[3].DB_MAX_OUTPUT_PORT_TYPE
regAValD[4] <= regAValD[4].DB_MAX_OUTPUT_PORT_TYPE
regAValD[5] <= regAValD[5].DB_MAX_OUTPUT_PORT_TYPE
regAValD[6] <= regAValD[6].DB_MAX_OUTPUT_PORT_TYPE
regAValD[7] <= regAValD[7].DB_MAX_OUTPUT_PORT_TYPE
regAValD[8] <= regAValD[8].DB_MAX_OUTPUT_PORT_TYPE
regAValD[9] <= regAValD[9].DB_MAX_OUTPUT_PORT_TYPE
regAValD[10] <= regAValD[10].DB_MAX_OUTPUT_PORT_TYPE
regAValD[11] <= regAValD[11].DB_MAX_OUTPUT_PORT_TYPE
regAValD[12] <= regAValD[12].DB_MAX_OUTPUT_PORT_TYPE
regAValD[13] <= regAValD[13].DB_MAX_OUTPUT_PORT_TYPE
regAValD[14] <= regAValD[14].DB_MAX_OUTPUT_PORT_TYPE
regAValD[15] <= regAValD[15].DB_MAX_OUTPUT_PORT_TYPE
regAValD[16] <= regAValD[16].DB_MAX_OUTPUT_PORT_TYPE
regAValD[17] <= regAValD[17].DB_MAX_OUTPUT_PORT_TYPE
regAValD[18] <= regAValD[18].DB_MAX_OUTPUT_PORT_TYPE
regAValD[19] <= regAValD[19].DB_MAX_OUTPUT_PORT_TYPE
regAValD[20] <= regAValD[20].DB_MAX_OUTPUT_PORT_TYPE
regAValD[21] <= regAValD[21].DB_MAX_OUTPUT_PORT_TYPE
regAValD[22] <= regAValD[22].DB_MAX_OUTPUT_PORT_TYPE
regAValD[23] <= regAValD[23].DB_MAX_OUTPUT_PORT_TYPE
regAValD[24] <= regAValD[24].DB_MAX_OUTPUT_PORT_TYPE
regAValD[25] <= regAValD[25].DB_MAX_OUTPUT_PORT_TYPE
regAValD[26] <= regAValD[26].DB_MAX_OUTPUT_PORT_TYPE
regAValD[27] <= regAValD[27].DB_MAX_OUTPUT_PORT_TYPE
regAValD[28] <= regAValD[28].DB_MAX_OUTPUT_PORT_TYPE
regAValD[29] <= regAValD[29].DB_MAX_OUTPUT_PORT_TYPE
regAValD[30] <= regAValD[30].DB_MAX_OUTPUT_PORT_TYPE
regAValD[31] <= regAValD[31].DB_MAX_OUTPUT_PORT_TYPE
regBValD[0] <= regBValD[0].DB_MAX_OUTPUT_PORT_TYPE
regBValD[1] <= regBValD[1].DB_MAX_OUTPUT_PORT_TYPE
regBValD[2] <= regBValD[2].DB_MAX_OUTPUT_PORT_TYPE
regBValD[3] <= regBValD[3].DB_MAX_OUTPUT_PORT_TYPE
regBValD[4] <= regBValD[4].DB_MAX_OUTPUT_PORT_TYPE
regBValD[5] <= regBValD[5].DB_MAX_OUTPUT_PORT_TYPE
regBValD[6] <= regBValD[6].DB_MAX_OUTPUT_PORT_TYPE
regBValD[7] <= regBValD[7].DB_MAX_OUTPUT_PORT_TYPE
regBValD[8] <= regBValD[8].DB_MAX_OUTPUT_PORT_TYPE
regBValD[9] <= regBValD[9].DB_MAX_OUTPUT_PORT_TYPE
regBValD[10] <= regBValD[10].DB_MAX_OUTPUT_PORT_TYPE
regBValD[11] <= regBValD[11].DB_MAX_OUTPUT_PORT_TYPE
regBValD[12] <= regBValD[12].DB_MAX_OUTPUT_PORT_TYPE
regBValD[13] <= regBValD[13].DB_MAX_OUTPUT_PORT_TYPE
regBValD[14] <= regBValD[14].DB_MAX_OUTPUT_PORT_TYPE
regBValD[15] <= regBValD[15].DB_MAX_OUTPUT_PORT_TYPE
regBValD[16] <= regBValD[16].DB_MAX_OUTPUT_PORT_TYPE
regBValD[17] <= regBValD[17].DB_MAX_OUTPUT_PORT_TYPE
regBValD[18] <= regBValD[18].DB_MAX_OUTPUT_PORT_TYPE
regBValD[19] <= regBValD[19].DB_MAX_OUTPUT_PORT_TYPE
regBValD[20] <= regBValD[20].DB_MAX_OUTPUT_PORT_TYPE
regBValD[21] <= regBValD[21].DB_MAX_OUTPUT_PORT_TYPE
regBValD[22] <= regBValD[22].DB_MAX_OUTPUT_PORT_TYPE
regBValD[23] <= regBValD[23].DB_MAX_OUTPUT_PORT_TYPE
regBValD[24] <= regBValD[24].DB_MAX_OUTPUT_PORT_TYPE
regBValD[25] <= regBValD[25].DB_MAX_OUTPUT_PORT_TYPE
regBValD[26] <= regBValD[26].DB_MAX_OUTPUT_PORT_TYPE
regBValD[27] <= regBValD[27].DB_MAX_OUTPUT_PORT_TYPE
regBValD[28] <= regBValD[28].DB_MAX_OUTPUT_PORT_TYPE
regBValD[29] <= regBValD[29].DB_MAX_OUTPUT_PORT_TYPE
regBValD[30] <= regBValD[30].DB_MAX_OUTPUT_PORT_TYPE
regBValD[31] <= regBValD[31].DB_MAX_OUTPUT_PORT_TYPE
pcDX[0] <= pcDX[0].DB_MAX_OUTPUT_PORT_TYPE
pcDX[1] <= pcDX[1].DB_MAX_OUTPUT_PORT_TYPE
pcDX[2] <= pcDX[2].DB_MAX_OUTPUT_PORT_TYPE
pcDX[3] <= pcDX[3].DB_MAX_OUTPUT_PORT_TYPE
pcDX[4] <= pcDX[4].DB_MAX_OUTPUT_PORT_TYPE
pcDX[5] <= pcDX[5].DB_MAX_OUTPUT_PORT_TYPE
pcDX[6] <= pcDX[6].DB_MAX_OUTPUT_PORT_TYPE
pcDX[7] <= pcDX[7].DB_MAX_OUTPUT_PORT_TYPE
pcDX[8] <= pcDX[8].DB_MAX_OUTPUT_PORT_TYPE
pcDX[9] <= pcDX[9].DB_MAX_OUTPUT_PORT_TYPE
pcDX[10] <= pcDX[10].DB_MAX_OUTPUT_PORT_TYPE
pcDX[11] <= pcDX[11].DB_MAX_OUTPUT_PORT_TYPE
pcDX[12] <= pcDX[12].DB_MAX_OUTPUT_PORT_TYPE
pcDX[13] <= pcDX[13].DB_MAX_OUTPUT_PORT_TYPE
pcDX[14] <= pcDX[14].DB_MAX_OUTPUT_PORT_TYPE
pcDX[15] <= pcDX[15].DB_MAX_OUTPUT_PORT_TYPE
pcDX[16] <= pcDX[16].DB_MAX_OUTPUT_PORT_TYPE
pcDX[17] <= pcDX[17].DB_MAX_OUTPUT_PORT_TYPE
pcDX[18] <= pcDX[18].DB_MAX_OUTPUT_PORT_TYPE
pcDX[19] <= pcDX[19].DB_MAX_OUTPUT_PORT_TYPE
pcDX[20] <= pcDX[20].DB_MAX_OUTPUT_PORT_TYPE
pcDX[21] <= pcDX[21].DB_MAX_OUTPUT_PORT_TYPE
pcDX[22] <= pcDX[22].DB_MAX_OUTPUT_PORT_TYPE
pcDX[23] <= pcDX[23].DB_MAX_OUTPUT_PORT_TYPE
pcDX[24] <= pcDX[24].DB_MAX_OUTPUT_PORT_TYPE
pcDX[25] <= pcDX[25].DB_MAX_OUTPUT_PORT_TYPE
pcDX[26] <= pcDX[26].DB_MAX_OUTPUT_PORT_TYPE
pcDX[27] <= pcDX[27].DB_MAX_OUTPUT_PORT_TYPE
pcDX[28] <= pcDX[28].DB_MAX_OUTPUT_PORT_TYPE
pcDX[29] <= pcDX[29].DB_MAX_OUTPUT_PORT_TYPE
pcDX[30] <= pcDX[30].DB_MAX_OUTPUT_PORT_TYPE
pcDX[31] <= pcDX[31].DB_MAX_OUTPUT_PORT_TYPE
immDX[0] <= immDX[0].DB_MAX_OUTPUT_PORT_TYPE
immDX[1] <= immDX[1].DB_MAX_OUTPUT_PORT_TYPE
immDX[2] <= immDX[2].DB_MAX_OUTPUT_PORT_TYPE
immDX[3] <= immDX[3].DB_MAX_OUTPUT_PORT_TYPE
immDX[4] <= immDX[4].DB_MAX_OUTPUT_PORT_TYPE
immDX[5] <= immDX[5].DB_MAX_OUTPUT_PORT_TYPE
immDX[6] <= immDX[6].DB_MAX_OUTPUT_PORT_TYPE
immDX[7] <= immDX[7].DB_MAX_OUTPUT_PORT_TYPE
immDX[8] <= immDX[8].DB_MAX_OUTPUT_PORT_TYPE
immDX[9] <= immDX[9].DB_MAX_OUTPUT_PORT_TYPE
immDX[10] <= immDX[10].DB_MAX_OUTPUT_PORT_TYPE
immDX[11] <= immDX[11].DB_MAX_OUTPUT_PORT_TYPE
immDX[12] <= immDX[12].DB_MAX_OUTPUT_PORT_TYPE
immDX[13] <= immDX[13].DB_MAX_OUTPUT_PORT_TYPE
immDX[14] <= immDX[14].DB_MAX_OUTPUT_PORT_TYPE
immDX[15] <= immDX[15].DB_MAX_OUTPUT_PORT_TYPE
immDX[16] <= immDX[16].DB_MAX_OUTPUT_PORT_TYPE
immDX[17] <= immDX[17].DB_MAX_OUTPUT_PORT_TYPE
immDX[18] <= immDX[18].DB_MAX_OUTPUT_PORT_TYPE
immDX[19] <= immDX[19].DB_MAX_OUTPUT_PORT_TYPE
immDX[20] <= immDX[20].DB_MAX_OUTPUT_PORT_TYPE
immDX[21] <= immDX[21].DB_MAX_OUTPUT_PORT_TYPE
immDX[22] <= immDX[22].DB_MAX_OUTPUT_PORT_TYPE
immDX[23] <= immDX[23].DB_MAX_OUTPUT_PORT_TYPE
immDX[24] <= immDX[24].DB_MAX_OUTPUT_PORT_TYPE
immDX[25] <= immDX[25].DB_MAX_OUTPUT_PORT_TYPE
immDX[26] <= immDX[26].DB_MAX_OUTPUT_PORT_TYPE
immDX[27] <= immDX[27].DB_MAX_OUTPUT_PORT_TYPE
immDX[28] <= immDX[28].DB_MAX_OUTPUT_PORT_TYPE
immDX[29] <= immDX[29].DB_MAX_OUTPUT_PORT_TYPE
immDX[30] <= immDX[30].DB_MAX_OUTPUT_PORT_TYPE
immDX[31] <= immDX[31].DB_MAX_OUTPUT_PORT_TYPE
targetDX[0] <= targetDX[0].DB_MAX_OUTPUT_PORT_TYPE
targetDX[1] <= targetDX[1].DB_MAX_OUTPUT_PORT_TYPE
targetDX[2] <= targetDX[2].DB_MAX_OUTPUT_PORT_TYPE
targetDX[3] <= targetDX[3].DB_MAX_OUTPUT_PORT_TYPE
targetDX[4] <= targetDX[4].DB_MAX_OUTPUT_PORT_TYPE
targetDX[5] <= targetDX[5].DB_MAX_OUTPUT_PORT_TYPE
targetDX[6] <= targetDX[6].DB_MAX_OUTPUT_PORT_TYPE
targetDX[7] <= targetDX[7].DB_MAX_OUTPUT_PORT_TYPE
targetDX[8] <= targetDX[8].DB_MAX_OUTPUT_PORT_TYPE
targetDX[9] <= targetDX[9].DB_MAX_OUTPUT_PORT_TYPE
targetDX[10] <= targetDX[10].DB_MAX_OUTPUT_PORT_TYPE
targetDX[11] <= targetDX[11].DB_MAX_OUTPUT_PORT_TYPE
targetDX[12] <= targetDX[12].DB_MAX_OUTPUT_PORT_TYPE
targetDX[13] <= targetDX[13].DB_MAX_OUTPUT_PORT_TYPE
targetDX[14] <= targetDX[14].DB_MAX_OUTPUT_PORT_TYPE
targetDX[15] <= targetDX[15].DB_MAX_OUTPUT_PORT_TYPE
targetDX[16] <= targetDX[16].DB_MAX_OUTPUT_PORT_TYPE
targetDX[17] <= targetDX[17].DB_MAX_OUTPUT_PORT_TYPE
targetDX[18] <= targetDX[18].DB_MAX_OUTPUT_PORT_TYPE
targetDX[19] <= targetDX[19].DB_MAX_OUTPUT_PORT_TYPE
targetDX[20] <= targetDX[20].DB_MAX_OUTPUT_PORT_TYPE
targetDX[21] <= targetDX[21].DB_MAX_OUTPUT_PORT_TYPE
targetDX[22] <= targetDX[22].DB_MAX_OUTPUT_PORT_TYPE
targetDX[23] <= targetDX[23].DB_MAX_OUTPUT_PORT_TYPE
targetDX[24] <= targetDX[24].DB_MAX_OUTPUT_PORT_TYPE
targetDX[25] <= targetDX[25].DB_MAX_OUTPUT_PORT_TYPE
targetDX[26] <= targetDX[26].DB_MAX_OUTPUT_PORT_TYPE
targetDX[27] <= targetDX[27].DB_MAX_OUTPUT_PORT_TYPE
targetDX[28] <= targetDX[28].DB_MAX_OUTPUT_PORT_TYPE
targetDX[29] <= targetDX[29].DB_MAX_OUTPUT_PORT_TYPE
targetDX[30] <= targetDX[30].DB_MAX_OUTPUT_PORT_TYPE
targetDX[31] <= targetDX[31].DB_MAX_OUTPUT_PORT_TYPE
opcodeDX[0] <= opcodeDX[0].DB_MAX_OUTPUT_PORT_TYPE
opcodeDX[1] <= opcodeDX[1].DB_MAX_OUTPUT_PORT_TYPE
opcodeDX[2] <= opcodeDX[2].DB_MAX_OUTPUT_PORT_TYPE
opcodeDX[3] <= opcodeDX[3].DB_MAX_OUTPUT_PORT_TYPE
opcodeDX[4] <= opcodeDX[4].DB_MAX_OUTPUT_PORT_TYPE
rdDX[0] <= rdDX[0].DB_MAX_OUTPUT_PORT_TYPE
rdDX[1] <= rdDX[1].DB_MAX_OUTPUT_PORT_TYPE
rdDX[2] <= rdDX[2].DB_MAX_OUTPUT_PORT_TYPE
rdDX[3] <= rdDX[3].DB_MAX_OUTPUT_PORT_TYPE
rdDX[4] <= rdDX[4].DB_MAX_OUTPUT_PORT_TYPE
rsDX[0] <= rsDX[0].DB_MAX_OUTPUT_PORT_TYPE
rsDX[1] <= rsDX[1].DB_MAX_OUTPUT_PORT_TYPE
rsDX[2] <= rsDX[2].DB_MAX_OUTPUT_PORT_TYPE
rsDX[3] <= rsDX[3].DB_MAX_OUTPUT_PORT_TYPE
rsDX[4] <= rsDX[4].DB_MAX_OUTPUT_PORT_TYPE
rtDX[0] <= rtDX[0].DB_MAX_OUTPUT_PORT_TYPE
rtDX[1] <= rtDX[1].DB_MAX_OUTPUT_PORT_TYPE
rtDX[2] <= rtDX[2].DB_MAX_OUTPUT_PORT_TYPE
rtDX[3] <= rtDX[3].DB_MAX_OUTPUT_PORT_TYPE
rtDX[4] <= rtDX[4].DB_MAX_OUTPUT_PORT_TYPE
shamtDX[0] <= shamtDX[0].DB_MAX_OUTPUT_PORT_TYPE
shamtDX[1] <= shamtDX[1].DB_MAX_OUTPUT_PORT_TYPE
shamtDX[2] <= shamtDX[2].DB_MAX_OUTPUT_PORT_TYPE
shamtDX[3] <= shamtDX[3].DB_MAX_OUTPUT_PORT_TYPE
shamtDX[4] <= shamtDX[4].DB_MAX_OUTPUT_PORT_TYPE
aluOpDX[0] <= aluOpDX[0].DB_MAX_OUTPUT_PORT_TYPE
aluOpDX[1] <= aluOpDX[1].DB_MAX_OUTPUT_PORT_TYPE
aluOpDX[2] <= aluOpDX[2].DB_MAX_OUTPUT_PORT_TYPE
aluOpDX[3] <= aluOpDX[3].DB_MAX_OUTPUT_PORT_TYPE
aluOpDX[4] <= aluOpDX[4].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlDX[0] <= jumpCtrlDX[0].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlDX[1] <= jumpCtrlDX[1].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlDX[0] <= branchCtrlDX[0].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlDX[1] <= branchCtrlDX[1].DB_MAX_OUTPUT_PORT_TYPE
regWriteEnDX <= regWriteEnDX.DB_MAX_OUTPUT_PORT_TYPE
aluInBDX <= aluInBDX.DB_MAX_OUTPUT_PORT_TYPE
loadDataDX <= loadDataDX.DB_MAX_OUTPUT_PORT_TYPE
storeDataDX <= storeDataDX.DB_MAX_OUTPUT_PORT_TYPE
setxCtrlDX <= setxCtrlDX.DB_MAX_OUTPUT_PORT_TYPE
regAValDX[0] <= regAValDX[0].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[1] <= regAValDX[1].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[2] <= regAValDX[2].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[3] <= regAValDX[3].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[4] <= regAValDX[4].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[5] <= regAValDX[5].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[6] <= regAValDX[6].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[7] <= regAValDX[7].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[8] <= regAValDX[8].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[9] <= regAValDX[9].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[10] <= regAValDX[10].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[11] <= regAValDX[11].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[12] <= regAValDX[12].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[13] <= regAValDX[13].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[14] <= regAValDX[14].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[15] <= regAValDX[15].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[16] <= regAValDX[16].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[17] <= regAValDX[17].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[18] <= regAValDX[18].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[19] <= regAValDX[19].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[20] <= regAValDX[20].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[21] <= regAValDX[21].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[22] <= regAValDX[22].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[23] <= regAValDX[23].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[24] <= regAValDX[24].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[25] <= regAValDX[25].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[26] <= regAValDX[26].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[27] <= regAValDX[27].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[28] <= regAValDX[28].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[29] <= regAValDX[29].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[30] <= regAValDX[30].DB_MAX_OUTPUT_PORT_TYPE
regAValDX[31] <= regAValDX[31].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[0] <= regBValDX[0].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[1] <= regBValDX[1].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[2] <= regBValDX[2].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[3] <= regBValDX[3].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[4] <= regBValDX[4].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[5] <= regBValDX[5].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[6] <= regBValDX[6].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[7] <= regBValDX[7].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[8] <= regBValDX[8].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[9] <= regBValDX[9].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[10] <= regBValDX[10].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[11] <= regBValDX[11].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[12] <= regBValDX[12].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[13] <= regBValDX[13].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[14] <= regBValDX[14].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[15] <= regBValDX[15].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[16] <= regBValDX[16].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[17] <= regBValDX[17].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[18] <= regBValDX[18].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[19] <= regBValDX[19].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[20] <= regBValDX[20].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[21] <= regBValDX[21].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[22] <= regBValDX[22].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[23] <= regBValDX[23].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[24] <= regBValDX[24].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[25] <= regBValDX[25].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[26] <= regBValDX[26].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[27] <= regBValDX[27].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[28] <= regBValDX[28].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[29] <= regBValDX[29].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[30] <= regBValDX[30].DB_MAX_OUTPUT_PORT_TYPE
regBValDX[31] <= regBValDX[31].DB_MAX_OUTPUT_PORT_TYPE
execResultX[0] <= execResultX[0].DB_MAX_OUTPUT_PORT_TYPE
execResultX[1] <= execResultX[1].DB_MAX_OUTPUT_PORT_TYPE
execResultX[2] <= execResultX[2].DB_MAX_OUTPUT_PORT_TYPE
execResultX[3] <= execResultX[3].DB_MAX_OUTPUT_PORT_TYPE
execResultX[4] <= execResultX[4].DB_MAX_OUTPUT_PORT_TYPE
execResultX[5] <= execResultX[5].DB_MAX_OUTPUT_PORT_TYPE
execResultX[6] <= execResultX[6].DB_MAX_OUTPUT_PORT_TYPE
execResultX[7] <= execResultX[7].DB_MAX_OUTPUT_PORT_TYPE
execResultX[8] <= execResultX[8].DB_MAX_OUTPUT_PORT_TYPE
execResultX[9] <= execResultX[9].DB_MAX_OUTPUT_PORT_TYPE
execResultX[10] <= execResultX[10].DB_MAX_OUTPUT_PORT_TYPE
execResultX[11] <= execResultX[11].DB_MAX_OUTPUT_PORT_TYPE
execResultX[12] <= execResultX[12].DB_MAX_OUTPUT_PORT_TYPE
execResultX[13] <= execResultX[13].DB_MAX_OUTPUT_PORT_TYPE
execResultX[14] <= execResultX[14].DB_MAX_OUTPUT_PORT_TYPE
execResultX[15] <= execResultX[15].DB_MAX_OUTPUT_PORT_TYPE
execResultX[16] <= execResultX[16].DB_MAX_OUTPUT_PORT_TYPE
execResultX[17] <= execResultX[17].DB_MAX_OUTPUT_PORT_TYPE
execResultX[18] <= execResultX[18].DB_MAX_OUTPUT_PORT_TYPE
execResultX[19] <= execResultX[19].DB_MAX_OUTPUT_PORT_TYPE
execResultX[20] <= execResultX[20].DB_MAX_OUTPUT_PORT_TYPE
execResultX[21] <= execResultX[21].DB_MAX_OUTPUT_PORT_TYPE
execResultX[22] <= execResultX[22].DB_MAX_OUTPUT_PORT_TYPE
execResultX[23] <= execResultX[23].DB_MAX_OUTPUT_PORT_TYPE
execResultX[24] <= execResultX[24].DB_MAX_OUTPUT_PORT_TYPE
execResultX[25] <= execResultX[25].DB_MAX_OUTPUT_PORT_TYPE
execResultX[26] <= execResultX[26].DB_MAX_OUTPUT_PORT_TYPE
execResultX[27] <= execResultX[27].DB_MAX_OUTPUT_PORT_TYPE
execResultX[28] <= execResultX[28].DB_MAX_OUTPUT_PORT_TYPE
execResultX[29] <= execResultX[29].DB_MAX_OUTPUT_PORT_TYPE
execResultX[30] <= execResultX[30].DB_MAX_OUTPUT_PORT_TYPE
execResultX[31] <= execResultX[31].DB_MAX_OUTPUT_PORT_TYPE
execErrorX <= execErrorX.DB_MAX_OUTPUT_PORT_TYPE
execReadyX <= execute:executeInsn.port14
argsLessThanX <= argsLessThanX.DB_MAX_OUTPUT_PORT_TYPE
argsNotEqualX <= argsNotEqualX.DB_MAX_OUTPUT_PORT_TYPE
nextPCX[0] <= nextPCX[0].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[1] <= nextPCX[1].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[2] <= nextPCX[2].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[3] <= nextPCX[3].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[4] <= nextPCX[4].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[5] <= nextPCX[5].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[6] <= nextPCX[6].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[7] <= nextPCX[7].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[8] <= nextPCX[8].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[9] <= nextPCX[9].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[10] <= nextPCX[10].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[11] <= nextPCX[11].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[12] <= nextPCX[12].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[13] <= nextPCX[13].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[14] <= nextPCX[14].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[15] <= nextPCX[15].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[16] <= nextPCX[16].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[17] <= nextPCX[17].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[18] <= nextPCX[18].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[19] <= nextPCX[19].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[20] <= nextPCX[20].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[21] <= nextPCX[21].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[22] <= nextPCX[22].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[23] <= nextPCX[23].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[24] <= nextPCX[24].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[25] <= nextPCX[25].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[26] <= nextPCX[26].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[27] <= nextPCX[27].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[28] <= nextPCX[28].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[29] <= nextPCX[29].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[30] <= nextPCX[30].DB_MAX_OUTPUT_PORT_TYPE
nextPCX[31] <= nextPCX[31].DB_MAX_OUTPUT_PORT_TYPE
pcOverrideX <= pcOverrideX.DB_MAX_OUTPUT_PORT_TYPE
pcXM[0] <= pcXM[0].DB_MAX_OUTPUT_PORT_TYPE
pcXM[1] <= pcXM[1].DB_MAX_OUTPUT_PORT_TYPE
pcXM[2] <= pcXM[2].DB_MAX_OUTPUT_PORT_TYPE
pcXM[3] <= pcXM[3].DB_MAX_OUTPUT_PORT_TYPE
pcXM[4] <= pcXM[4].DB_MAX_OUTPUT_PORT_TYPE
pcXM[5] <= pcXM[5].DB_MAX_OUTPUT_PORT_TYPE
pcXM[6] <= pcXM[6].DB_MAX_OUTPUT_PORT_TYPE
pcXM[7] <= pcXM[7].DB_MAX_OUTPUT_PORT_TYPE
pcXM[8] <= pcXM[8].DB_MAX_OUTPUT_PORT_TYPE
pcXM[9] <= pcXM[9].DB_MAX_OUTPUT_PORT_TYPE
pcXM[10] <= pcXM[10].DB_MAX_OUTPUT_PORT_TYPE
pcXM[11] <= pcXM[11].DB_MAX_OUTPUT_PORT_TYPE
pcXM[12] <= pcXM[12].DB_MAX_OUTPUT_PORT_TYPE
pcXM[13] <= pcXM[13].DB_MAX_OUTPUT_PORT_TYPE
pcXM[14] <= pcXM[14].DB_MAX_OUTPUT_PORT_TYPE
pcXM[15] <= pcXM[15].DB_MAX_OUTPUT_PORT_TYPE
pcXM[16] <= pcXM[16].DB_MAX_OUTPUT_PORT_TYPE
pcXM[17] <= pcXM[17].DB_MAX_OUTPUT_PORT_TYPE
pcXM[18] <= pcXM[18].DB_MAX_OUTPUT_PORT_TYPE
pcXM[19] <= pcXM[19].DB_MAX_OUTPUT_PORT_TYPE
pcXM[20] <= pcXM[20].DB_MAX_OUTPUT_PORT_TYPE
pcXM[21] <= pcXM[21].DB_MAX_OUTPUT_PORT_TYPE
pcXM[22] <= pcXM[22].DB_MAX_OUTPUT_PORT_TYPE
pcXM[23] <= pcXM[23].DB_MAX_OUTPUT_PORT_TYPE
pcXM[24] <= pcXM[24].DB_MAX_OUTPUT_PORT_TYPE
pcXM[25] <= pcXM[25].DB_MAX_OUTPUT_PORT_TYPE
pcXM[26] <= pcXM[26].DB_MAX_OUTPUT_PORT_TYPE
pcXM[27] <= pcXM[27].DB_MAX_OUTPUT_PORT_TYPE
pcXM[28] <= pcXM[28].DB_MAX_OUTPUT_PORT_TYPE
pcXM[29] <= pcXM[29].DB_MAX_OUTPUT_PORT_TYPE
pcXM[30] <= pcXM[30].DB_MAX_OUTPUT_PORT_TYPE
pcXM[31] <= pcXM[31].DB_MAX_OUTPUT_PORT_TYPE
immXM[0] <= immXM[0].DB_MAX_OUTPUT_PORT_TYPE
immXM[1] <= immXM[1].DB_MAX_OUTPUT_PORT_TYPE
immXM[2] <= immXM[2].DB_MAX_OUTPUT_PORT_TYPE
immXM[3] <= immXM[3].DB_MAX_OUTPUT_PORT_TYPE
immXM[4] <= immXM[4].DB_MAX_OUTPUT_PORT_TYPE
immXM[5] <= immXM[5].DB_MAX_OUTPUT_PORT_TYPE
immXM[6] <= immXM[6].DB_MAX_OUTPUT_PORT_TYPE
immXM[7] <= immXM[7].DB_MAX_OUTPUT_PORT_TYPE
immXM[8] <= immXM[8].DB_MAX_OUTPUT_PORT_TYPE
immXM[9] <= immXM[9].DB_MAX_OUTPUT_PORT_TYPE
immXM[10] <= immXM[10].DB_MAX_OUTPUT_PORT_TYPE
immXM[11] <= immXM[11].DB_MAX_OUTPUT_PORT_TYPE
immXM[12] <= immXM[12].DB_MAX_OUTPUT_PORT_TYPE
immXM[13] <= immXM[13].DB_MAX_OUTPUT_PORT_TYPE
immXM[14] <= immXM[14].DB_MAX_OUTPUT_PORT_TYPE
immXM[15] <= immXM[15].DB_MAX_OUTPUT_PORT_TYPE
immXM[16] <= immXM[16].DB_MAX_OUTPUT_PORT_TYPE
immXM[17] <= immXM[17].DB_MAX_OUTPUT_PORT_TYPE
immXM[18] <= immXM[18].DB_MAX_OUTPUT_PORT_TYPE
immXM[19] <= immXM[19].DB_MAX_OUTPUT_PORT_TYPE
immXM[20] <= immXM[20].DB_MAX_OUTPUT_PORT_TYPE
immXM[21] <= immXM[21].DB_MAX_OUTPUT_PORT_TYPE
immXM[22] <= immXM[22].DB_MAX_OUTPUT_PORT_TYPE
immXM[23] <= immXM[23].DB_MAX_OUTPUT_PORT_TYPE
immXM[24] <= immXM[24].DB_MAX_OUTPUT_PORT_TYPE
immXM[25] <= immXM[25].DB_MAX_OUTPUT_PORT_TYPE
immXM[26] <= immXM[26].DB_MAX_OUTPUT_PORT_TYPE
immXM[27] <= immXM[27].DB_MAX_OUTPUT_PORT_TYPE
immXM[28] <= immXM[28].DB_MAX_OUTPUT_PORT_TYPE
immXM[29] <= immXM[29].DB_MAX_OUTPUT_PORT_TYPE
immXM[30] <= immXM[30].DB_MAX_OUTPUT_PORT_TYPE
immXM[31] <= immXM[31].DB_MAX_OUTPUT_PORT_TYPE
targetXM[0] <= targetXM[0].DB_MAX_OUTPUT_PORT_TYPE
targetXM[1] <= targetXM[1].DB_MAX_OUTPUT_PORT_TYPE
targetXM[2] <= targetXM[2].DB_MAX_OUTPUT_PORT_TYPE
targetXM[3] <= targetXM[3].DB_MAX_OUTPUT_PORT_TYPE
targetXM[4] <= targetXM[4].DB_MAX_OUTPUT_PORT_TYPE
targetXM[5] <= targetXM[5].DB_MAX_OUTPUT_PORT_TYPE
targetXM[6] <= targetXM[6].DB_MAX_OUTPUT_PORT_TYPE
targetXM[7] <= targetXM[7].DB_MAX_OUTPUT_PORT_TYPE
targetXM[8] <= targetXM[8].DB_MAX_OUTPUT_PORT_TYPE
targetXM[9] <= targetXM[9].DB_MAX_OUTPUT_PORT_TYPE
targetXM[10] <= targetXM[10].DB_MAX_OUTPUT_PORT_TYPE
targetXM[11] <= targetXM[11].DB_MAX_OUTPUT_PORT_TYPE
targetXM[12] <= targetXM[12].DB_MAX_OUTPUT_PORT_TYPE
targetXM[13] <= targetXM[13].DB_MAX_OUTPUT_PORT_TYPE
targetXM[14] <= targetXM[14].DB_MAX_OUTPUT_PORT_TYPE
targetXM[15] <= targetXM[15].DB_MAX_OUTPUT_PORT_TYPE
targetXM[16] <= targetXM[16].DB_MAX_OUTPUT_PORT_TYPE
targetXM[17] <= targetXM[17].DB_MAX_OUTPUT_PORT_TYPE
targetXM[18] <= targetXM[18].DB_MAX_OUTPUT_PORT_TYPE
targetXM[19] <= targetXM[19].DB_MAX_OUTPUT_PORT_TYPE
targetXM[20] <= targetXM[20].DB_MAX_OUTPUT_PORT_TYPE
targetXM[21] <= targetXM[21].DB_MAX_OUTPUT_PORT_TYPE
targetXM[22] <= targetXM[22].DB_MAX_OUTPUT_PORT_TYPE
targetXM[23] <= targetXM[23].DB_MAX_OUTPUT_PORT_TYPE
targetXM[24] <= targetXM[24].DB_MAX_OUTPUT_PORT_TYPE
targetXM[25] <= targetXM[25].DB_MAX_OUTPUT_PORT_TYPE
targetXM[26] <= targetXM[26].DB_MAX_OUTPUT_PORT_TYPE
targetXM[27] <= targetXM[27].DB_MAX_OUTPUT_PORT_TYPE
targetXM[28] <= targetXM[28].DB_MAX_OUTPUT_PORT_TYPE
targetXM[29] <= targetXM[29].DB_MAX_OUTPUT_PORT_TYPE
targetXM[30] <= targetXM[30].DB_MAX_OUTPUT_PORT_TYPE
targetXM[31] <= targetXM[31].DB_MAX_OUTPUT_PORT_TYPE
opcodeXM[0] <= opcodeXM[0].DB_MAX_OUTPUT_PORT_TYPE
opcodeXM[1] <= opcodeXM[1].DB_MAX_OUTPUT_PORT_TYPE
opcodeXM[2] <= opcodeXM[2].DB_MAX_OUTPUT_PORT_TYPE
opcodeXM[3] <= opcodeXM[3].DB_MAX_OUTPUT_PORT_TYPE
opcodeXM[4] <= opcodeXM[4].DB_MAX_OUTPUT_PORT_TYPE
rdXM[0] <= rdXM[0].DB_MAX_OUTPUT_PORT_TYPE
rdXM[1] <= rdXM[1].DB_MAX_OUTPUT_PORT_TYPE
rdXM[2] <= rdXM[2].DB_MAX_OUTPUT_PORT_TYPE
rdXM[3] <= rdXM[3].DB_MAX_OUTPUT_PORT_TYPE
rdXM[4] <= rdXM[4].DB_MAX_OUTPUT_PORT_TYPE
rsXM[0] <= rsXM[0].DB_MAX_OUTPUT_PORT_TYPE
rsXM[1] <= rsXM[1].DB_MAX_OUTPUT_PORT_TYPE
rsXM[2] <= rsXM[2].DB_MAX_OUTPUT_PORT_TYPE
rsXM[3] <= rsXM[3].DB_MAX_OUTPUT_PORT_TYPE
rsXM[4] <= rsXM[4].DB_MAX_OUTPUT_PORT_TYPE
rtXM[0] <= rtXM[0].DB_MAX_OUTPUT_PORT_TYPE
rtXM[1] <= rtXM[1].DB_MAX_OUTPUT_PORT_TYPE
rtXM[2] <= rtXM[2].DB_MAX_OUTPUT_PORT_TYPE
rtXM[3] <= rtXM[3].DB_MAX_OUTPUT_PORT_TYPE
rtXM[4] <= rtXM[4].DB_MAX_OUTPUT_PORT_TYPE
shamtXM[0] <= shamtXM[0].DB_MAX_OUTPUT_PORT_TYPE
shamtXM[1] <= shamtXM[1].DB_MAX_OUTPUT_PORT_TYPE
shamtXM[2] <= shamtXM[2].DB_MAX_OUTPUT_PORT_TYPE
shamtXM[3] <= shamtXM[3].DB_MAX_OUTPUT_PORT_TYPE
shamtXM[4] <= shamtXM[4].DB_MAX_OUTPUT_PORT_TYPE
aluOpXM[0] <= aluOpXM[0].DB_MAX_OUTPUT_PORT_TYPE
aluOpXM[1] <= aluOpXM[1].DB_MAX_OUTPUT_PORT_TYPE
aluOpXM[2] <= aluOpXM[2].DB_MAX_OUTPUT_PORT_TYPE
aluOpXM[3] <= aluOpXM[3].DB_MAX_OUTPUT_PORT_TYPE
aluOpXM[4] <= aluOpXM[4].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlXM[0] <= jumpCtrlXM[0].DB_MAX_OUTPUT_PORT_TYPE
jumpCtrlXM[1] <= jumpCtrlXM[1].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlXM[0] <= branchCtrlXM[0].DB_MAX_OUTPUT_PORT_TYPE
branchCtrlXM[1] <= branchCtrlXM[1].DB_MAX_OUTPUT_PORT_TYPE
regWriteEnXM <= regWriteEnXM.DB_MAX_OUTPUT_PORT_TYPE
aluInBXM <= aluInBXM.DB_MAX_OUTPUT_PORT_TYPE
loadDataXM <= loadDataXM.DB_MAX_OUTPUT_PORT_TYPE
storeDataXM <= storeDataXM.DB_MAX_OUTPUT_PORT_TYPE
setxCtrlXM <= setxCtrlXM.DB_MAX_OUTPUT_PORT_TYPE
execErrorXM <= execErrorXM.DB_MAX_OUTPUT_PORT_TYPE
execResultXM[0] <= execResultXM[0].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[1] <= execResultXM[1].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[2] <= execResultXM[2].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[3] <= execResultXM[3].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[4] <= execResultXM[4].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[5] <= execResultXM[5].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[6] <= execResultXM[6].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[7] <= execResultXM[7].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[8] <= execResultXM[8].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[9] <= execResultXM[9].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[10] <= execResultXM[10].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[11] <= execResultXM[11].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[12] <= execResultXM[12].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[13] <= execResultXM[13].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[14] <= execResultXM[14].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[15] <= execResultXM[15].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[16] <= execResultXM[16].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[17] <= execResultXM[17].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[18] <= execResultXM[18].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[19] <= execResultXM[19].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[20] <= execResultXM[20].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[21] <= execResultXM[21].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[22] <= execResultXM[22].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[23] <= execResultXM[23].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[24] <= execResultXM[24].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[25] <= execResultXM[25].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[26] <= execResultXM[26].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[27] <= execResultXM[27].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[28] <= execResultXM[28].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[29] <= execResultXM[29].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[30] <= execResultXM[30].DB_MAX_OUTPUT_PORT_TYPE
execResultXM[31] <= execResultXM[31].DB_MAX_OUTPUT_PORT_TYPE
regBValXM[0] <= pipelineLatch:latchXM.port40
regBValXM[1] <= pipelineLatch:latchXM.port40
regBValXM[2] <= pipelineLatch:latchXM.port40
regBValXM[3] <= pipelineLatch:latchXM.port40
regBValXM[4] <= pipelineLatch:latchXM.port40
regBValXM[5] <= pipelineLatch:latchXM.port40
regBValXM[6] <= pipelineLatch:latchXM.port40
regBValXM[7] <= pipelineLatch:latchXM.port40
regBValXM[8] <= pipelineLatch:latchXM.port40
regBValXM[9] <= pipelineLatch:latchXM.port40
regBValXM[10] <= pipelineLatch:latchXM.port40
regBValXM[11] <= pipelineLatch:latchXM.port40
regBValXM[12] <= pipelineLatch:latchXM.port40
regBValXM[13] <= pipelineLatch:latchXM.port40
regBValXM[14] <= pipelineLatch:latchXM.port40
regBValXM[15] <= pipelineLatch:latchXM.port40
regBValXM[16] <= pipelineLatch:latchXM.port40
regBValXM[17] <= pipelineLatch:latchXM.port40
regBValXM[18] <= pipelineLatch:latchXM.port40
regBValXM[19] <= pipelineLatch:latchXM.port40
regBValXM[20] <= pipelineLatch:latchXM.port40
regBValXM[21] <= pipelineLatch:latchXM.port40
regBValXM[22] <= pipelineLatch:latchXM.port40
regBValXM[23] <= pipelineLatch:latchXM.port40
regBValXM[24] <= pipelineLatch:latchXM.port40
regBValXM[25] <= pipelineLatch:latchXM.port40
regBValXM[26] <= pipelineLatch:latchXM.port40
regBValXM[27] <= pipelineLatch:latchXM.port40
regBValXM[28] <= pipelineLatch:latchXM.port40
regBValXM[29] <= pipelineLatch:latchXM.port40
regBValXM[30] <= pipelineLatch:latchXM.port40
regBValXM[31] <= pipelineLatch:latchXM.port40
dMemOutM[0] <= dMemOutM[0].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[1] <= dMemOutM[1].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[2] <= dMemOutM[2].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[3] <= dMemOutM[3].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[4] <= dMemOutM[4].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[5] <= dMemOutM[5].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[6] <= dMemOutM[6].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[7] <= dMemOutM[7].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[8] <= dMemOutM[8].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[9] <= dMemOutM[9].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[10] <= dMemOutM[10].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[11] <= dMemOutM[11].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[12] <= dMemOutM[12].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[13] <= dMemOutM[13].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[14] <= dMemOutM[14].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[15] <= dMemOutM[15].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[16] <= dMemOutM[16].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[17] <= dMemOutM[17].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[18] <= dMemOutM[18].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[19] <= dMemOutM[19].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[20] <= dMemOutM[20].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[21] <= dMemOutM[21].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[22] <= dMemOutM[22].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[23] <= dMemOutM[23].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[24] <= dMemOutM[24].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[25] <= dMemOutM[25].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[26] <= dMemOutM[26].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[27] <= dMemOutM[27].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[28] <= dMemOutM[28].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[29] <= dMemOutM[29].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[30] <= dMemOutM[30].DB_MAX_OUTPUT_PORT_TYPE
dMemOutM[31] <= dMemOutM[31].DB_MAX_OUTPUT_PORT_TYPE
pcMW[0] <= pipelineLatch:latchMW.port22
pcMW[1] <= pipelineLatch:latchMW.port22
pcMW[2] <= pipelineLatch:latchMW.port22
pcMW[3] <= pipelineLatch:latchMW.port22
pcMW[4] <= pipelineLatch:latchMW.port22
pcMW[5] <= pipelineLatch:latchMW.port22
pcMW[6] <= pipelineLatch:latchMW.port22
pcMW[7] <= pipelineLatch:latchMW.port22
pcMW[8] <= pipelineLatch:latchMW.port22
pcMW[9] <= pipelineLatch:latchMW.port22
pcMW[10] <= pipelineLatch:latchMW.port22
pcMW[11] <= pipelineLatch:latchMW.port22
pcMW[12] <= pipelineLatch:latchMW.port22
pcMW[13] <= pipelineLatch:latchMW.port22
pcMW[14] <= pipelineLatch:latchMW.port22
pcMW[15] <= pipelineLatch:latchMW.port22
pcMW[16] <= pipelineLatch:latchMW.port22
pcMW[17] <= pipelineLatch:latchMW.port22
pcMW[18] <= pipelineLatch:latchMW.port22
pcMW[19] <= pipelineLatch:latchMW.port22
pcMW[20] <= pipelineLatch:latchMW.port22
pcMW[21] <= pipelineLatch:latchMW.port22
pcMW[22] <= pipelineLatch:latchMW.port22
pcMW[23] <= pipelineLatch:latchMW.port22
pcMW[24] <= pipelineLatch:latchMW.port22
pcMW[25] <= pipelineLatch:latchMW.port22
pcMW[26] <= pipelineLatch:latchMW.port22
pcMW[27] <= pipelineLatch:latchMW.port22
pcMW[28] <= pipelineLatch:latchMW.port22
pcMW[29] <= pipelineLatch:latchMW.port22
pcMW[30] <= pipelineLatch:latchMW.port22
pcMW[31] <= pipelineLatch:latchMW.port22
immMW[0] <= pipelineLatch:latchMW.port29
immMW[1] <= pipelineLatch:latchMW.port29
immMW[2] <= pipelineLatch:latchMW.port29
immMW[3] <= pipelineLatch:latchMW.port29
immMW[4] <= pipelineLatch:latchMW.port29
immMW[5] <= pipelineLatch:latchMW.port29
immMW[6] <= pipelineLatch:latchMW.port29
immMW[7] <= pipelineLatch:latchMW.port29
immMW[8] <= pipelineLatch:latchMW.port29
immMW[9] <= pipelineLatch:latchMW.port29
immMW[10] <= pipelineLatch:latchMW.port29
immMW[11] <= pipelineLatch:latchMW.port29
immMW[12] <= pipelineLatch:latchMW.port29
immMW[13] <= pipelineLatch:latchMW.port29
immMW[14] <= pipelineLatch:latchMW.port29
immMW[15] <= pipelineLatch:latchMW.port29
immMW[16] <= pipelineLatch:latchMW.port29
immMW[17] <= pipelineLatch:latchMW.port29
immMW[18] <= pipelineLatch:latchMW.port29
immMW[19] <= pipelineLatch:latchMW.port29
immMW[20] <= pipelineLatch:latchMW.port29
immMW[21] <= pipelineLatch:latchMW.port29
immMW[22] <= pipelineLatch:latchMW.port29
immMW[23] <= pipelineLatch:latchMW.port29
immMW[24] <= pipelineLatch:latchMW.port29
immMW[25] <= pipelineLatch:latchMW.port29
immMW[26] <= pipelineLatch:latchMW.port29
immMW[27] <= pipelineLatch:latchMW.port29
immMW[28] <= pipelineLatch:latchMW.port29
immMW[29] <= pipelineLatch:latchMW.port29
immMW[30] <= pipelineLatch:latchMW.port29
immMW[31] <= pipelineLatch:latchMW.port29
targetMW[0] <= pipelineLatch:latchMW.port30
targetMW[1] <= pipelineLatch:latchMW.port30
targetMW[2] <= pipelineLatch:latchMW.port30
targetMW[3] <= pipelineLatch:latchMW.port30
targetMW[4] <= pipelineLatch:latchMW.port30
targetMW[5] <= pipelineLatch:latchMW.port30
targetMW[6] <= pipelineLatch:latchMW.port30
targetMW[7] <= pipelineLatch:latchMW.port30
targetMW[8] <= pipelineLatch:latchMW.port30
targetMW[9] <= pipelineLatch:latchMW.port30
targetMW[10] <= pipelineLatch:latchMW.port30
targetMW[11] <= pipelineLatch:latchMW.port30
targetMW[12] <= pipelineLatch:latchMW.port30
targetMW[13] <= pipelineLatch:latchMW.port30
targetMW[14] <= pipelineLatch:latchMW.port30
targetMW[15] <= pipelineLatch:latchMW.port30
targetMW[16] <= pipelineLatch:latchMW.port30
targetMW[17] <= pipelineLatch:latchMW.port30
targetMW[18] <= pipelineLatch:latchMW.port30
targetMW[19] <= pipelineLatch:latchMW.port30
targetMW[20] <= pipelineLatch:latchMW.port30
targetMW[21] <= pipelineLatch:latchMW.port30
targetMW[22] <= pipelineLatch:latchMW.port30
targetMW[23] <= pipelineLatch:latchMW.port30
targetMW[24] <= pipelineLatch:latchMW.port30
targetMW[25] <= pipelineLatch:latchMW.port30
targetMW[26] <= pipelineLatch:latchMW.port30
targetMW[27] <= pipelineLatch:latchMW.port30
targetMW[28] <= pipelineLatch:latchMW.port30
targetMW[29] <= pipelineLatch:latchMW.port30
targetMW[30] <= pipelineLatch:latchMW.port30
targetMW[31] <= pipelineLatch:latchMW.port30
opcodeMW[0] <= pipelineLatch:latchMW.port23
opcodeMW[1] <= pipelineLatch:latchMW.port23
opcodeMW[2] <= pipelineLatch:latchMW.port23
opcodeMW[3] <= pipelineLatch:latchMW.port23
opcodeMW[4] <= pipelineLatch:latchMW.port23
rdMW[0] <= rdMW[0].DB_MAX_OUTPUT_PORT_TYPE
rdMW[1] <= rdMW[1].DB_MAX_OUTPUT_PORT_TYPE
rdMW[2] <= rdMW[2].DB_MAX_OUTPUT_PORT_TYPE
rdMW[3] <= rdMW[3].DB_MAX_OUTPUT_PORT_TYPE
rdMW[4] <= rdMW[4].DB_MAX_OUTPUT_PORT_TYPE
rsMW[0] <= pipelineLatch:latchMW.port25
rsMW[1] <= pipelineLatch:latchMW.port25
rsMW[2] <= pipelineLatch:latchMW.port25
rsMW[3] <= pipelineLatch:latchMW.port25
rsMW[4] <= pipelineLatch:latchMW.port25
rtMW[0] <= pipelineLatch:latchMW.port26
rtMW[1] <= pipelineLatch:latchMW.port26
rtMW[2] <= pipelineLatch:latchMW.port26
rtMW[3] <= pipelineLatch:latchMW.port26
rtMW[4] <= pipelineLatch:latchMW.port26
shamtMW[0] <= pipelineLatch:latchMW.port27
shamtMW[1] <= pipelineLatch:latchMW.port27
shamtMW[2] <= pipelineLatch:latchMW.port27
shamtMW[3] <= pipelineLatch:latchMW.port27
shamtMW[4] <= pipelineLatch:latchMW.port27
aluOpMW[0] <= pipelineLatch:latchMW.port28
aluOpMW[1] <= pipelineLatch:latchMW.port28
aluOpMW[2] <= pipelineLatch:latchMW.port28
aluOpMW[3] <= pipelineLatch:latchMW.port28
aluOpMW[4] <= pipelineLatch:latchMW.port28
jumpCtrlMW[0] <= pipelineLatch:latchMW.port33
jumpCtrlMW[1] <= pipelineLatch:latchMW.port33
branchCtrlMW[0] <= pipelineLatch:latchMW.port34
branchCtrlMW[1] <= pipelineLatch:latchMW.port34
regWriteEnMW <= regWriteEnMW.DB_MAX_OUTPUT_PORT_TYPE
aluInBMW <= pipelineLatch:latchMW.port32
loadDataMW <= pipelineLatch:latchMW.port35
storeDataMW <= pipelineLatch:latchMW.port36
setxCtrlMW <= pipelineLatch:latchMW.port37
execErrorMW <= pipelineLatch:latchMW.port38
execResultMW[0] <= pipelineLatch:latchMW.port39
execResultMW[1] <= pipelineLatch:latchMW.port39
execResultMW[2] <= pipelineLatch:latchMW.port39
execResultMW[3] <= pipelineLatch:latchMW.port39
execResultMW[4] <= pipelineLatch:latchMW.port39
execResultMW[5] <= pipelineLatch:latchMW.port39
execResultMW[6] <= pipelineLatch:latchMW.port39
execResultMW[7] <= pipelineLatch:latchMW.port39
execResultMW[8] <= pipelineLatch:latchMW.port39
execResultMW[9] <= pipelineLatch:latchMW.port39
execResultMW[10] <= pipelineLatch:latchMW.port39
execResultMW[11] <= pipelineLatch:latchMW.port39
execResultMW[12] <= pipelineLatch:latchMW.port39
execResultMW[13] <= pipelineLatch:latchMW.port39
execResultMW[14] <= pipelineLatch:latchMW.port39
execResultMW[15] <= pipelineLatch:latchMW.port39
execResultMW[16] <= pipelineLatch:latchMW.port39
execResultMW[17] <= pipelineLatch:latchMW.port39
execResultMW[18] <= pipelineLatch:latchMW.port39
execResultMW[19] <= pipelineLatch:latchMW.port39
execResultMW[20] <= pipelineLatch:latchMW.port39
execResultMW[21] <= pipelineLatch:latchMW.port39
execResultMW[22] <= pipelineLatch:latchMW.port39
execResultMW[23] <= pipelineLatch:latchMW.port39
execResultMW[24] <= pipelineLatch:latchMW.port39
execResultMW[25] <= pipelineLatch:latchMW.port39
execResultMW[26] <= pipelineLatch:latchMW.port39
execResultMW[27] <= pipelineLatch:latchMW.port39
execResultMW[28] <= pipelineLatch:latchMW.port39
execResultMW[29] <= pipelineLatch:latchMW.port39
execResultMW[30] <= pipelineLatch:latchMW.port39
execResultMW[31] <= pipelineLatch:latchMW.port39
dMemOutMW[0] <= pipelineLatch:latchMW.port40
dMemOutMW[1] <= pipelineLatch:latchMW.port40
dMemOutMW[2] <= pipelineLatch:latchMW.port40
dMemOutMW[3] <= pipelineLatch:latchMW.port40
dMemOutMW[4] <= pipelineLatch:latchMW.port40
dMemOutMW[5] <= pipelineLatch:latchMW.port40
dMemOutMW[6] <= pipelineLatch:latchMW.port40
dMemOutMW[7] <= pipelineLatch:latchMW.port40
dMemOutMW[8] <= pipelineLatch:latchMW.port40
dMemOutMW[9] <= pipelineLatch:latchMW.port40
dMemOutMW[10] <= pipelineLatch:latchMW.port40
dMemOutMW[11] <= pipelineLatch:latchMW.port40
dMemOutMW[12] <= pipelineLatch:latchMW.port40
dMemOutMW[13] <= pipelineLatch:latchMW.port40
dMemOutMW[14] <= pipelineLatch:latchMW.port40
dMemOutMW[15] <= pipelineLatch:latchMW.port40
dMemOutMW[16] <= pipelineLatch:latchMW.port40
dMemOutMW[17] <= pipelineLatch:latchMW.port40
dMemOutMW[18] <= pipelineLatch:latchMW.port40
dMemOutMW[19] <= pipelineLatch:latchMW.port40
dMemOutMW[20] <= pipelineLatch:latchMW.port40
dMemOutMW[21] <= pipelineLatch:latchMW.port40
dMemOutMW[22] <= pipelineLatch:latchMW.port40
dMemOutMW[23] <= pipelineLatch:latchMW.port40
dMemOutMW[24] <= pipelineLatch:latchMW.port40
dMemOutMW[25] <= pipelineLatch:latchMW.port40
dMemOutMW[26] <= pipelineLatch:latchMW.port40
dMemOutMW[27] <= pipelineLatch:latchMW.port40
dMemOutMW[28] <= pipelineLatch:latchMW.port40
dMemOutMW[29] <= pipelineLatch:latchMW.port40
dMemOutMW[30] <= pipelineLatch:latchMW.port40
dMemOutMW[31] <= pipelineLatch:latchMW.port40
regWriteValW[0] <= regWriteValW[0].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[1] <= regWriteValW[1].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[2] <= regWriteValW[2].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[3] <= regWriteValW[3].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[4] <= regWriteValW[4].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[5] <= regWriteValW[5].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[6] <= regWriteValW[6].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[7] <= regWriteValW[7].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[8] <= regWriteValW[8].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[9] <= regWriteValW[9].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[10] <= regWriteValW[10].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[11] <= regWriteValW[11].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[12] <= regWriteValW[12].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[13] <= regWriteValW[13].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[14] <= regWriteValW[14].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[15] <= regWriteValW[15].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[16] <= regWriteValW[16].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[17] <= regWriteValW[17].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[18] <= regWriteValW[18].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[19] <= regWriteValW[19].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[20] <= regWriteValW[20].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[21] <= regWriteValW[21].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[22] <= regWriteValW[22].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[23] <= regWriteValW[23].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[24] <= regWriteValW[24].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[25] <= regWriteValW[25].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[26] <= regWriteValW[26].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[27] <= regWriteValW[27].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[28] <= regWriteValW[28].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[29] <= regWriteValW[29].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[30] <= regWriteValW[30].DB_MAX_OUTPUT_PORT_TYPE
regWriteValW[31] <= regWriteValW[31].DB_MAX_OUTPUT_PORT_TYPE
writeRegW[0] <= writeRegW[0].DB_MAX_OUTPUT_PORT_TYPE
writeRegW[1] <= writeRegW[1].DB_MAX_OUTPUT_PORT_TYPE
writeRegW[2] <= writeRegW[2].DB_MAX_OUTPUT_PORT_TYPE
writeRegW[3] <= writeRegW[3].DB_MAX_OUTPUT_PORT_TYPE
writeRegW[4] <= writeRegW[4].DB_MAX_OUTPUT_PORT_TYPE
writeSelectW[0] <= writeSelectW[0].DB_MAX_OUTPUT_PORT_TYPE
writeSelectW[1] <= writeSelectW[1].DB_MAX_OUTPUT_PORT_TYPE
aluASel[0] <= aluASel[0].DB_MAX_OUTPUT_PORT_TYPE
aluASel[1] <= aluASel[1].DB_MAX_OUTPUT_PORT_TYPE
aluBSel[0] <= aluBSel[0].DB_MAX_OUTPUT_PORT_TYPE
aluBSel[1] <= aluBSel[1].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[0] <= regAValByp[0].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[1] <= regAValByp[1].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[2] <= regAValByp[2].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[3] <= regAValByp[3].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[4] <= regAValByp[4].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[5] <= regAValByp[5].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[6] <= regAValByp[6].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[7] <= regAValByp[7].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[8] <= regAValByp[8].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[9] <= regAValByp[9].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[10] <= regAValByp[10].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[11] <= regAValByp[11].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[12] <= regAValByp[12].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[13] <= regAValByp[13].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[14] <= regAValByp[14].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[15] <= regAValByp[15].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[16] <= regAValByp[16].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[17] <= regAValByp[17].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[18] <= regAValByp[18].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[19] <= regAValByp[19].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[20] <= regAValByp[20].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[21] <= regAValByp[21].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[22] <= regAValByp[22].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[23] <= regAValByp[23].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[24] <= regAValByp[24].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[25] <= regAValByp[25].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[26] <= regAValByp[26].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[27] <= regAValByp[27].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[28] <= regAValByp[28].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[29] <= regAValByp[29].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[30] <= regAValByp[30].DB_MAX_OUTPUT_PORT_TYPE
regAValByp[31] <= regAValByp[31].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[0] <= regBValByp[0].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[1] <= regBValByp[1].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[2] <= regBValByp[2].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[3] <= regBValByp[3].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[4] <= regBValByp[4].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[5] <= regBValByp[5].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[6] <= regBValByp[6].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[7] <= regBValByp[7].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[8] <= regBValByp[8].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[9] <= regBValByp[9].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[10] <= regBValByp[10].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[11] <= regBValByp[11].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[12] <= regBValByp[12].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[13] <= regBValByp[13].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[14] <= regBValByp[14].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[15] <= regBValByp[15].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[16] <= regBValByp[16].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[17] <= regBValByp[17].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[18] <= regBValByp[18].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[19] <= regBValByp[19].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[20] <= regBValByp[20].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[21] <= regBValByp[21].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[22] <= regBValByp[22].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[23] <= regBValByp[23].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[24] <= regBValByp[24].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[25] <= regBValByp[25].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[26] <= regBValByp[26].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[27] <= regBValByp[27].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[28] <= regBValByp[28].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[29] <= regBValByp[29].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[30] <= regBValByp[30].DB_MAX_OUTPUT_PORT_TYPE
regBValByp[31] <= regBValByp[31].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[0] <= dMemInM[0].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[1] <= dMemInM[1].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[2] <= dMemInM[2].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[3] <= dMemInM[3].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[4] <= dMemInM[4].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[5] <= dMemInM[5].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[6] <= dMemInM[6].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[7] <= dMemInM[7].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[8] <= dMemInM[8].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[9] <= dMemInM[9].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[10] <= dMemInM[10].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[11] <= dMemInM[11].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[12] <= dMemInM[12].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[13] <= dMemInM[13].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[14] <= dMemInM[14].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[15] <= dMemInM[15].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[16] <= dMemInM[16].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[17] <= dMemInM[17].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[18] <= dMemInM[18].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[19] <= dMemInM[19].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[20] <= dMemInM[20].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[21] <= dMemInM[21].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[22] <= dMemInM[22].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[23] <= dMemInM[23].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[24] <= dMemInM[24].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[25] <= dMemInM[25].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[26] <= dMemInM[26].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[27] <= dMemInM[27].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[28] <= dMemInM[28].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[29] <= dMemInM[29].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[30] <= dMemInM[30].DB_MAX_OUTPUT_PORT_TYPE
dMemInM[31] <= dMemInM[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage
nextPC[0] => Add0.IN64
nextPC[0] => Add1.IN64
nextPC[0] => Add2.IN64
nextPC[0] => imemRead[0].DATAIN
nextPC[1] => Add0.IN63
nextPC[1] => Add1.IN63
nextPC[1] => Add2.IN63
nextPC[1] => Add3.IN62
nextPC[2] => Add0.IN62
nextPC[2] => Add1.IN62
nextPC[2] => Add2.IN62
nextPC[2] => Add3.IN61
nextPC[3] => Add0.IN61
nextPC[3] => Add1.IN61
nextPC[3] => Add2.IN61
nextPC[3] => Add3.IN60
nextPC[4] => Add0.IN60
nextPC[4] => Add1.IN60
nextPC[4] => Add2.IN60
nextPC[4] => Add3.IN59
nextPC[5] => Add0.IN59
nextPC[5] => Add1.IN59
nextPC[5] => Add2.IN59
nextPC[5] => Add3.IN58
nextPC[6] => Add0.IN58
nextPC[6] => Add1.IN58
nextPC[6] => Add2.IN58
nextPC[6] => Add3.IN57
nextPC[7] => Add0.IN57
nextPC[7] => Add1.IN57
nextPC[7] => Add2.IN57
nextPC[7] => Add3.IN56
nextPC[8] => Add0.IN56
nextPC[8] => Add1.IN56
nextPC[8] => Add2.IN56
nextPC[8] => Add3.IN55
nextPC[9] => Add0.IN55
nextPC[9] => Add1.IN55
nextPC[9] => Add2.IN55
nextPC[9] => Add3.IN54
nextPC[10] => Add0.IN54
nextPC[10] => Add1.IN54
nextPC[10] => Add2.IN54
nextPC[10] => Add3.IN53
nextPC[11] => Add0.IN53
nextPC[11] => Add1.IN53
nextPC[11] => Add2.IN53
nextPC[11] => Add3.IN52
nextPC[12] => Add0.IN52
nextPC[12] => Add1.IN52
nextPC[12] => Add2.IN52
nextPC[12] => Add3.IN51
nextPC[13] => Add0.IN51
nextPC[13] => Add1.IN51
nextPC[13] => Add2.IN51
nextPC[13] => Add3.IN50
nextPC[14] => Add0.IN50
nextPC[14] => Add1.IN50
nextPC[14] => Add2.IN50
nextPC[14] => Add3.IN49
nextPC[15] => Add0.IN49
nextPC[15] => Add1.IN49
nextPC[15] => Add2.IN49
nextPC[15] => Add3.IN48
nextPC[16] => Add0.IN48
nextPC[16] => Add1.IN48
nextPC[16] => Add2.IN48
nextPC[16] => Add3.IN47
nextPC[17] => Add0.IN47
nextPC[17] => Add1.IN47
nextPC[17] => Add2.IN47
nextPC[17] => Add3.IN46
nextPC[18] => Add0.IN46
nextPC[18] => Add1.IN46
nextPC[18] => Add2.IN46
nextPC[18] => Add3.IN45
nextPC[19] => Add0.IN45
nextPC[19] => Add1.IN45
nextPC[19] => Add2.IN45
nextPC[19] => Add3.IN44
nextPC[20] => Add0.IN44
nextPC[20] => Add1.IN44
nextPC[20] => Add2.IN44
nextPC[20] => Add3.IN43
nextPC[21] => Add0.IN43
nextPC[21] => Add1.IN43
nextPC[21] => Add2.IN43
nextPC[21] => Add3.IN42
nextPC[22] => Add0.IN42
nextPC[22] => Add1.IN42
nextPC[22] => Add2.IN42
nextPC[22] => Add3.IN41
nextPC[23] => Add0.IN41
nextPC[23] => Add1.IN41
nextPC[23] => Add2.IN41
nextPC[23] => Add3.IN40
nextPC[24] => Add0.IN40
nextPC[24] => Add1.IN40
nextPC[24] => Add2.IN40
nextPC[24] => Add3.IN39
nextPC[25] => Add0.IN39
nextPC[25] => Add1.IN39
nextPC[25] => Add2.IN39
nextPC[25] => Add3.IN38
nextPC[26] => Add0.IN38
nextPC[26] => Add1.IN38
nextPC[26] => Add2.IN38
nextPC[26] => Add3.IN37
nextPC[27] => Add0.IN37
nextPC[27] => Add1.IN37
nextPC[27] => Add2.IN37
nextPC[27] => Add3.IN36
nextPC[28] => Add0.IN36
nextPC[28] => Add1.IN36
nextPC[28] => Add2.IN36
nextPC[28] => Add3.IN35
nextPC[29] => Add0.IN35
nextPC[29] => Add1.IN35
nextPC[29] => Add2.IN35
nextPC[29] => Add3.IN34
nextPC[30] => Add0.IN34
nextPC[30] => Add1.IN34
nextPC[30] => Add2.IN34
nextPC[30] => Add3.IN33
nextPC[31] => Add0.IN33
nextPC[31] => Add1.IN33
nextPC[31] => Add2.IN33
nextPC[31] => Add3.IN32
advancePC => advancePC.IN1
pcOverride => updatedPC.IN1
pcOverride => updatedPC.IN1
pcOverride => imemRead.IN1
pcOverride => imemRead.IN1
pcOverride => updatedPC[0].OE
pcOverride => updatedPC[1].OE
pcOverride => updatedPC[2].OE
pcOverride => updatedPC[3].OE
pcOverride => updatedPC[4].OE
pcOverride => updatedPC[5].OE
pcOverride => updatedPC[6].OE
pcOverride => updatedPC[7].OE
pcOverride => updatedPC[8].OE
pcOverride => updatedPC[9].OE
pcOverride => updatedPC[10].OE
pcOverride => updatedPC[11].OE
pcOverride => updatedPC[12].OE
pcOverride => updatedPC[13].OE
pcOverride => updatedPC[14].OE
pcOverride => updatedPC[15].OE
pcOverride => updatedPC[16].OE
pcOverride => updatedPC[17].OE
pcOverride => updatedPC[18].OE
pcOverride => updatedPC[19].OE
pcOverride => updatedPC[20].OE
pcOverride => updatedPC[21].OE
pcOverride => updatedPC[22].OE
pcOverride => updatedPC[23].OE
pcOverride => updatedPC[24].OE
pcOverride => updatedPC[25].OE
pcOverride => updatedPC[26].OE
pcOverride => updatedPC[27].OE
pcOverride => updatedPC[28].OE
pcOverride => updatedPC[29].OE
pcOverride => updatedPC[30].OE
pcOverride => updatedPC[31].OE
pcOverride => imemRead[0].OE
pcOverride => imemRead[1].OE
pcOverride => imemRead[2].OE
pcOverride => imemRead[3].OE
pcOverride => imemRead[4].OE
pcOverride => imemRead[5].OE
pcOverride => imemRead[6].OE
pcOverride => imemRead[7].OE
pcOverride => imemRead[8].OE
pcOverride => imemRead[9].OE
pcOverride => imemRead[10].OE
pcOverride => imemRead[11].OE
jumpCtrl[0] => updatedPC.IN0
jumpCtrl[0] => imemRead.IN0
jumpCtrl[1] => updatedPC.IN1
jumpCtrl[1] => imemRead.IN1
branchCtrl[0] => updatedPC.IN0
branchCtrl[0] => imemRead.IN0
branchCtrl[1] => updatedPC.IN1
branchCtrl[1] => imemRead.IN1
clock => clock.IN1
reset => reset.IN1
incrPC[0] <= cla:addOne.sum
incrPC[1] <= cla:addOne.sum
incrPC[2] <= cla:addOne.sum
incrPC[3] <= cla:addOne.sum
incrPC[4] <= cla:addOne.sum
incrPC[5] <= cla:addOne.sum
incrPC[6] <= cla:addOne.sum
incrPC[7] <= cla:addOne.sum
incrPC[8] <= cla:addOne.sum
incrPC[9] <= cla:addOne.sum
incrPC[10] <= cla:addOne.sum
incrPC[11] <= cla:addOne.sum
incrPC[12] <= cla:addOne.sum
incrPC[13] <= cla:addOne.sum
incrPC[14] <= cla:addOne.sum
incrPC[15] <= cla:addOne.sum
incrPC[16] <= cla:addOne.sum
incrPC[17] <= cla:addOne.sum
incrPC[18] <= cla:addOne.sum
incrPC[19] <= cla:addOne.sum
incrPC[20] <= cla:addOne.sum
incrPC[21] <= cla:addOne.sum
incrPC[22] <= cla:addOne.sum
incrPC[23] <= cla:addOne.sum
incrPC[24] <= cla:addOne.sum
incrPC[25] <= cla:addOne.sum
incrPC[26] <= cla:addOne.sum
incrPC[27] <= cla:addOne.sum
incrPC[28] <= cla:addOne.sum
incrPC[29] <= cla:addOne.sum
incrPC[30] <= cla:addOne.sum
incrPC[31] <= cla:addOne.sum
insn[0] <= imem:myimem.q
insn[1] <= imem:myimem.q
insn[2] <= imem:myimem.q
insn[3] <= imem:myimem.q
insn[4] <= imem:myimem.q
insn[5] <= imem:myimem.q
insn[6] <= imem:myimem.q
insn[7] <= imem:myimem.q
insn[8] <= imem:myimem.q
insn[9] <= imem:myimem.q
insn[10] <= imem:myimem.q
insn[11] <= imem:myimem.q
insn[12] <= imem:myimem.q
insn[13] <= imem:myimem.q
insn[14] <= imem:myimem.q
insn[15] <= imem:myimem.q
insn[16] <= imem:myimem.q
insn[17] <= imem:myimem.q
insn[18] <= imem:myimem.q
insn[19] <= imem:myimem.q
insn[20] <= imem:myimem.q
insn[21] <= imem:myimem.q
insn[22] <= imem:myimem.q
insn[23] <= imem:myimem.q
insn[24] <= imem:myimem.q
insn[25] <= imem:myimem.q
insn[26] <= imem:myimem.q
insn[27] <= imem:myimem.q
insn[28] <= imem:myimem.q
insn[29] <= imem:myimem.q
insn[30] <= imem:myimem.q
insn[31] <= imem:myimem.q


|processor|fetch:fetchStage|register:pc
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|register:pc|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|cla:addOne|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|fetch:fetchStage|imem:myimem
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a
q[16] <= altsyncram:altsyncram_component.q_a
q[17] <= altsyncram:altsyncram_component.q_a
q[18] <= altsyncram:altsyncram_component.q_a
q[19] <= altsyncram:altsyncram_component.q_a
q[20] <= altsyncram:altsyncram_component.q_a
q[21] <= altsyncram:altsyncram_component.q_a
q[22] <= altsyncram:altsyncram_component.q_a
q[23] <= altsyncram:altsyncram_component.q_a
q[24] <= altsyncram:altsyncram_component.q_a
q[25] <= altsyncram:altsyncram_component.q_a
q[26] <= altsyncram:altsyncram_component.q_a
q[27] <= altsyncram:altsyncram_component.q_a
q[28] <= altsyncram:altsyncram_component.q_a
q[29] <= altsyncram:altsyncram_component.q_a
q[30] <= altsyncram:altsyncram_component.q_a
q[31] <= altsyncram:altsyncram_component.q_a


|processor|fetch:fetchStage|imem:myimem|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_a[16] => ~NO_FANOUT~
data_a[17] => ~NO_FANOUT~
data_a[18] => ~NO_FANOUT~
data_a[19] => ~NO_FANOUT~
data_a[20] => ~NO_FANOUT~
data_a[21] => ~NO_FANOUT~
data_a[22] => ~NO_FANOUT~
data_a[23] => ~NO_FANOUT~
data_a[24] => ~NO_FANOUT~
data_a[25] => ~NO_FANOUT~
data_a[26] => ~NO_FANOUT~
data_a[27] => ~NO_FANOUT~
data_a[28] => ~NO_FANOUT~
data_a[29] => ~NO_FANOUT~
data_a[30] => ~NO_FANOUT~
data_a[31] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_m591:auto_generated.address_a[0]
address_a[1] => altsyncram_m591:auto_generated.address_a[1]
address_a[2] => altsyncram_m591:auto_generated.address_a[2]
address_a[3] => altsyncram_m591:auto_generated.address_a[3]
address_a[4] => altsyncram_m591:auto_generated.address_a[4]
address_a[5] => altsyncram_m591:auto_generated.address_a[5]
address_a[6] => altsyncram_m591:auto_generated.address_a[6]
address_a[7] => altsyncram_m591:auto_generated.address_a[7]
address_a[8] => altsyncram_m591:auto_generated.address_a[8]
address_a[9] => altsyncram_m591:auto_generated.address_a[9]
address_a[10] => altsyncram_m591:auto_generated.address_a[10]
address_a[11] => altsyncram_m591:auto_generated.address_a[11]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m591:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_m591:auto_generated.q_a[0]
q_a[1] <= altsyncram_m591:auto_generated.q_a[1]
q_a[2] <= altsyncram_m591:auto_generated.q_a[2]
q_a[3] <= altsyncram_m591:auto_generated.q_a[3]
q_a[4] <= altsyncram_m591:auto_generated.q_a[4]
q_a[5] <= altsyncram_m591:auto_generated.q_a[5]
q_a[6] <= altsyncram_m591:auto_generated.q_a[6]
q_a[7] <= altsyncram_m591:auto_generated.q_a[7]
q_a[8] <= altsyncram_m591:auto_generated.q_a[8]
q_a[9] <= altsyncram_m591:auto_generated.q_a[9]
q_a[10] <= altsyncram_m591:auto_generated.q_a[10]
q_a[11] <= altsyncram_m591:auto_generated.q_a[11]
q_a[12] <= altsyncram_m591:auto_generated.q_a[12]
q_a[13] <= altsyncram_m591:auto_generated.q_a[13]
q_a[14] <= altsyncram_m591:auto_generated.q_a[14]
q_a[15] <= altsyncram_m591:auto_generated.q_a[15]
q_a[16] <= altsyncram_m591:auto_generated.q_a[16]
q_a[17] <= altsyncram_m591:auto_generated.q_a[17]
q_a[18] <= altsyncram_m591:auto_generated.q_a[18]
q_a[19] <= altsyncram_m591:auto_generated.q_a[19]
q_a[20] <= altsyncram_m591:auto_generated.q_a[20]
q_a[21] <= altsyncram_m591:auto_generated.q_a[21]
q_a[22] <= altsyncram_m591:auto_generated.q_a[22]
q_a[23] <= altsyncram_m591:auto_generated.q_a[23]
q_a[24] <= altsyncram_m591:auto_generated.q_a[24]
q_a[25] <= altsyncram_m591:auto_generated.q_a[25]
q_a[26] <= altsyncram_m591:auto_generated.q_a[26]
q_a[27] <= altsyncram_m591:auto_generated.q_a[27]
q_a[28] <= altsyncram_m591:auto_generated.q_a[28]
q_a[29] <= altsyncram_m591:auto_generated.q_a[29]
q_a[30] <= altsyncram_m591:auto_generated.q_a[30]
q_a[31] <= altsyncram_m591:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|processor|fetch:fetchStage|imem:myimem|altsyncram:altsyncram_component|altsyncram_m591:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[8] => ram_block1a12.PORTAADDR8
address_a[8] => ram_block1a13.PORTAADDR8
address_a[8] => ram_block1a14.PORTAADDR8
address_a[8] => ram_block1a15.PORTAADDR8
address_a[8] => ram_block1a16.PORTAADDR8
address_a[8] => ram_block1a17.PORTAADDR8
address_a[8] => ram_block1a18.PORTAADDR8
address_a[8] => ram_block1a19.PORTAADDR8
address_a[8] => ram_block1a20.PORTAADDR8
address_a[8] => ram_block1a21.PORTAADDR8
address_a[8] => ram_block1a22.PORTAADDR8
address_a[8] => ram_block1a23.PORTAADDR8
address_a[8] => ram_block1a24.PORTAADDR8
address_a[8] => ram_block1a25.PORTAADDR8
address_a[8] => ram_block1a26.PORTAADDR8
address_a[8] => ram_block1a27.PORTAADDR8
address_a[8] => ram_block1a28.PORTAADDR8
address_a[8] => ram_block1a29.PORTAADDR8
address_a[8] => ram_block1a30.PORTAADDR8
address_a[8] => ram_block1a31.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[9] => ram_block1a12.PORTAADDR9
address_a[9] => ram_block1a13.PORTAADDR9
address_a[9] => ram_block1a14.PORTAADDR9
address_a[9] => ram_block1a15.PORTAADDR9
address_a[9] => ram_block1a16.PORTAADDR9
address_a[9] => ram_block1a17.PORTAADDR9
address_a[9] => ram_block1a18.PORTAADDR9
address_a[9] => ram_block1a19.PORTAADDR9
address_a[9] => ram_block1a20.PORTAADDR9
address_a[9] => ram_block1a21.PORTAADDR9
address_a[9] => ram_block1a22.PORTAADDR9
address_a[9] => ram_block1a23.PORTAADDR9
address_a[9] => ram_block1a24.PORTAADDR9
address_a[9] => ram_block1a25.PORTAADDR9
address_a[9] => ram_block1a26.PORTAADDR9
address_a[9] => ram_block1a27.PORTAADDR9
address_a[9] => ram_block1a28.PORTAADDR9
address_a[9] => ram_block1a29.PORTAADDR9
address_a[9] => ram_block1a30.PORTAADDR9
address_a[9] => ram_block1a31.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[10] => ram_block1a12.PORTAADDR10
address_a[10] => ram_block1a13.PORTAADDR10
address_a[10] => ram_block1a14.PORTAADDR10
address_a[10] => ram_block1a15.PORTAADDR10
address_a[10] => ram_block1a16.PORTAADDR10
address_a[10] => ram_block1a17.PORTAADDR10
address_a[10] => ram_block1a18.PORTAADDR10
address_a[10] => ram_block1a19.PORTAADDR10
address_a[10] => ram_block1a20.PORTAADDR10
address_a[10] => ram_block1a21.PORTAADDR10
address_a[10] => ram_block1a22.PORTAADDR10
address_a[10] => ram_block1a23.PORTAADDR10
address_a[10] => ram_block1a24.PORTAADDR10
address_a[10] => ram_block1a25.PORTAADDR10
address_a[10] => ram_block1a26.PORTAADDR10
address_a[10] => ram_block1a27.PORTAADDR10
address_a[10] => ram_block1a28.PORTAADDR10
address_a[10] => ram_block1a29.PORTAADDR10
address_a[10] => ram_block1a30.PORTAADDR10
address_a[10] => ram_block1a31.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[11] => ram_block1a12.PORTAADDR11
address_a[11] => ram_block1a13.PORTAADDR11
address_a[11] => ram_block1a14.PORTAADDR11
address_a[11] => ram_block1a15.PORTAADDR11
address_a[11] => ram_block1a16.PORTAADDR11
address_a[11] => ram_block1a17.PORTAADDR11
address_a[11] => ram_block1a18.PORTAADDR11
address_a[11] => ram_block1a19.PORTAADDR11
address_a[11] => ram_block1a20.PORTAADDR11
address_a[11] => ram_block1a21.PORTAADDR11
address_a[11] => ram_block1a22.PORTAADDR11
address_a[11] => ram_block1a23.PORTAADDR11
address_a[11] => ram_block1a24.PORTAADDR11
address_a[11] => ram_block1a25.PORTAADDR11
address_a[11] => ram_block1a26.PORTAADDR11
address_a[11] => ram_block1a27.PORTAADDR11
address_a[11] => ram_block1a28.PORTAADDR11
address_a[11] => ram_block1a29.PORTAADDR11
address_a[11] => ram_block1a30.PORTAADDR11
address_a[11] => ram_block1a31.PORTAADDR11
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT


|processor|decode:decodeInsn
insn[0] => insn[0].IN1
insn[1] => insn[1].IN1
insn[2] => insn[2].IN1
insn[3] => insn[3].IN1
insn[4] => insn[4].IN1
insn[5] => insn[5].IN1
insn[6] => insn[6].IN1
insn[7] => insn[7].IN1
insn[8] => insn[8].IN1
insn[9] => insn[9].IN1
insn[10] => insn[10].IN1
insn[11] => insn[11].IN1
insn[12] => insn[12].IN1
insn[13] => insn[13].IN1
insn[14] => insn[14].IN1
insn[15] => insn[15].IN1
insn[16] => insn[16].IN1
insn[17] => target[17].DATAIN
insn[17] => rs[0].DATAIN
insn[18] => target[18].DATAIN
insn[18] => rs[1].DATAIN
insn[19] => target[19].DATAIN
insn[19] => rs[2].DATAIN
insn[20] => target[20].DATAIN
insn[20] => rs[3].DATAIN
insn[21] => target[21].DATAIN
insn[21] => rs[4].DATAIN
insn[22] => target[22].DATAIN
insn[22] => rd[0].DATAIN
insn[23] => target[23].DATAIN
insn[23] => rd[1].DATAIN
insn[24] => target[24].DATAIN
insn[24] => rd[2].DATAIN
insn[25] => target[25].DATAIN
insn[25] => rd[3].DATAIN
insn[26] => target[26].DATAIN
insn[26] => rd[4].DATAIN
insn[27] => opcode[0].DATAIN
insn[27] => aluOp.IN1
insn[28] => opcode[1].DATAIN
insn[28] => aluOp.IN1
insn[29] => opcode[2].DATAIN
insn[29] => aluOp.IN1
insn[30] => opcode[3].DATAIN
insn[30] => aluOp.IN0
insn[31] => opcode[4].DATAIN
insn[31] => aluOp.IN1
opcode[0] <= insn[27].DB_MAX_OUTPUT_PORT_TYPE
opcode[1] <= insn[28].DB_MAX_OUTPUT_PORT_TYPE
opcode[2] <= insn[29].DB_MAX_OUTPUT_PORT_TYPE
opcode[3] <= insn[30].DB_MAX_OUTPUT_PORT_TYPE
opcode[4] <= insn[31].DB_MAX_OUTPUT_PORT_TYPE
rd[0] <= insn[22].DB_MAX_OUTPUT_PORT_TYPE
rd[1] <= insn[23].DB_MAX_OUTPUT_PORT_TYPE
rd[2] <= insn[24].DB_MAX_OUTPUT_PORT_TYPE
rd[3] <= insn[25].DB_MAX_OUTPUT_PORT_TYPE
rd[4] <= insn[26].DB_MAX_OUTPUT_PORT_TYPE
rs[0] <= insn[17].DB_MAX_OUTPUT_PORT_TYPE
rs[1] <= insn[18].DB_MAX_OUTPUT_PORT_TYPE
rs[2] <= insn[19].DB_MAX_OUTPUT_PORT_TYPE
rs[3] <= insn[20].DB_MAX_OUTPUT_PORT_TYPE
rs[4] <= insn[21].DB_MAX_OUTPUT_PORT_TYPE
rt[0] <= insn[12].DB_MAX_OUTPUT_PORT_TYPE
rt[1] <= insn[13].DB_MAX_OUTPUT_PORT_TYPE
rt[2] <= insn[14].DB_MAX_OUTPUT_PORT_TYPE
rt[3] <= insn[15].DB_MAX_OUTPUT_PORT_TYPE
rt[4] <= insn[16].DB_MAX_OUTPUT_PORT_TYPE
imm[0] <= signExtender:extend.port1
imm[1] <= signExtender:extend.port1
imm[2] <= signExtender:extend.port1
imm[3] <= signExtender:extend.port1
imm[4] <= signExtender:extend.port1
imm[5] <= signExtender:extend.port1
imm[6] <= signExtender:extend.port1
imm[7] <= signExtender:extend.port1
imm[8] <= signExtender:extend.port1
imm[9] <= signExtender:extend.port1
imm[10] <= signExtender:extend.port1
imm[11] <= signExtender:extend.port1
imm[12] <= signExtender:extend.port1
imm[13] <= signExtender:extend.port1
imm[14] <= signExtender:extend.port1
imm[15] <= signExtender:extend.port1
imm[16] <= signExtender:extend.port1
imm[17] <= signExtender:extend.port1
imm[18] <= signExtender:extend.port1
imm[19] <= signExtender:extend.port1
imm[20] <= signExtender:extend.port1
imm[21] <= signExtender:extend.port1
imm[22] <= signExtender:extend.port1
imm[23] <= signExtender:extend.port1
imm[24] <= signExtender:extend.port1
imm[25] <= signExtender:extend.port1
imm[26] <= signExtender:extend.port1
imm[27] <= signExtender:extend.port1
imm[28] <= signExtender:extend.port1
imm[29] <= signExtender:extend.port1
imm[30] <= signExtender:extend.port1
imm[31] <= signExtender:extend.port1
shamt[0] <= insn[7].DB_MAX_OUTPUT_PORT_TYPE
shamt[1] <= insn[8].DB_MAX_OUTPUT_PORT_TYPE
shamt[2] <= insn[9].DB_MAX_OUTPUT_PORT_TYPE
shamt[3] <= insn[10].DB_MAX_OUTPUT_PORT_TYPE
shamt[4] <= insn[11].DB_MAX_OUTPUT_PORT_TYPE
aluOp[0] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[1] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[2] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[3] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
aluOp[4] <= aluOp.DB_MAX_OUTPUT_PORT_TYPE
target[0] <= insn[0].DB_MAX_OUTPUT_PORT_TYPE
target[1] <= insn[1].DB_MAX_OUTPUT_PORT_TYPE
target[2] <= insn[2].DB_MAX_OUTPUT_PORT_TYPE
target[3] <= insn[3].DB_MAX_OUTPUT_PORT_TYPE
target[4] <= insn[4].DB_MAX_OUTPUT_PORT_TYPE
target[5] <= insn[5].DB_MAX_OUTPUT_PORT_TYPE
target[6] <= insn[6].DB_MAX_OUTPUT_PORT_TYPE
target[7] <= insn[7].DB_MAX_OUTPUT_PORT_TYPE
target[8] <= insn[8].DB_MAX_OUTPUT_PORT_TYPE
target[9] <= insn[9].DB_MAX_OUTPUT_PORT_TYPE
target[10] <= insn[10].DB_MAX_OUTPUT_PORT_TYPE
target[11] <= insn[11].DB_MAX_OUTPUT_PORT_TYPE
target[12] <= insn[12].DB_MAX_OUTPUT_PORT_TYPE
target[13] <= insn[13].DB_MAX_OUTPUT_PORT_TYPE
target[14] <= insn[14].DB_MAX_OUTPUT_PORT_TYPE
target[15] <= insn[15].DB_MAX_OUTPUT_PORT_TYPE
target[16] <= insn[16].DB_MAX_OUTPUT_PORT_TYPE
target[17] <= insn[17].DB_MAX_OUTPUT_PORT_TYPE
target[18] <= insn[18].DB_MAX_OUTPUT_PORT_TYPE
target[19] <= insn[19].DB_MAX_OUTPUT_PORT_TYPE
target[20] <= insn[20].DB_MAX_OUTPUT_PORT_TYPE
target[21] <= insn[21].DB_MAX_OUTPUT_PORT_TYPE
target[22] <= insn[22].DB_MAX_OUTPUT_PORT_TYPE
target[23] <= insn[23].DB_MAX_OUTPUT_PORT_TYPE
target[24] <= insn[24].DB_MAX_OUTPUT_PORT_TYPE
target[25] <= insn[25].DB_MAX_OUTPUT_PORT_TYPE
target[26] <= insn[26].DB_MAX_OUTPUT_PORT_TYPE
target[27] <= <GND>
target[28] <= <GND>
target[29] <= <GND>
target[30] <= <GND>
target[31] <= <GND>


|processor|decode:decodeInsn|signExtender:extend
a[0] => sxa[0].DATAIN
a[1] => sxa[1].DATAIN
a[2] => sxa[2].DATAIN
a[3] => sxa[3].DATAIN
a[4] => sxa[4].DATAIN
a[5] => sxa[5].DATAIN
a[6] => sxa[6].DATAIN
a[7] => sxa[7].DATAIN
a[8] => sxa[8].DATAIN
a[9] => sxa[9].DATAIN
a[10] => sxa[10].DATAIN
a[11] => sxa[11].DATAIN
a[12] => sxa[12].DATAIN
a[13] => sxa[13].DATAIN
a[14] => sxa[14].DATAIN
a[15] => sxa[15].DATAIN
a[16] => sxa[17].DATAIN
a[16] => sxa[16].DATAIN
sxa[0] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
sxa[1] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
sxa[2] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
sxa[3] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
sxa[4] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
sxa[5] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
sxa[6] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
sxa[7] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
sxa[8] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
sxa[9] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
sxa[10] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
sxa[11] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
sxa[12] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
sxa[13] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
sxa[14] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
sxa[15] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
sxa[16] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
sxa[17] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
sxa[18] <= <GND>
sxa[19] <= <GND>
sxa[20] <= <GND>
sxa[21] <= <GND>
sxa[22] <= <GND>
sxa[23] <= <GND>
sxa[24] <= <GND>
sxa[25] <= <GND>
sxa[26] <= <GND>
sxa[27] <= <GND>
sxa[28] <= <GND>
sxa[29] <= <GND>
sxa[30] <= <GND>
sxa[31] <= <GND>


|processor|control:ctrlSignals
opcode[0] => regWriteEn.IN0
opcode[0] => setxCtrl.IN1
opcode[0] => storeData.IN1
opcode[0] => jumpCtrl.IN1
opcode[0] => jumpCtrl.IN1
opcode[0] => aluInB.IN1
opcode[0] => jumpCtrl.IN1
opcode[0] => regWriteEn.IN1
opcode[0] => loadData.IN1
opcode[0] => branchCtrl.IN1
opcode[0] => branchCtrl.IN1
opcode[0] => branchCtrl.IN1
opcode[1] => regWriteEn.IN0
opcode[1] => regWriteEn.IN0
opcode[1] => storeData.IN1
opcode[1] => branchCtrl.IN1
opcode[1] => branchCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => setxCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => jumpCtrl.IN1
opcode[1] => regWriteEn.IN1
opcode[1] => loadData.IN1
opcode[2] => regWriteEn.IN1
opcode[2] => regWriteEn.IN1
opcode[2] => setxCtrl.IN1
opcode[2] => branchCtrl.IN0
opcode[2] => jumpCtrl.IN1
opcode[2] => jumpCtrl.IN1
opcode[2] => loadData.IN1
opcode[3] => loadData.IN0
opcode[3] => setxCtrl.IN0
opcode[3] => jumpCtrl.IN0
opcode[3] => branchCtrl.IN1
opcode[4] => setxCtrl.IN1
opcode[4] => jumpCtrl.IN1
opcode[4] => regWriteEn.IN1
opcode[4] => loadData.IN1
aluOp[0] => ~NO_FANOUT~
aluOp[1] => ~NO_FANOUT~
aluOp[2] => ~NO_FANOUT~
aluOp[3] => ~NO_FANOUT~
aluOp[4] => ~NO_FANOUT~
regWriteEn <= regWriteEn.DB_MAX_OUTPUT_PORT_TYPE
aluInB <= aluInB.DB_MAX_OUTPUT_PORT_TYPE
jumpCtrl[0] <= jumpCtrl.DB_MAX_OUTPUT_PORT_TYPE
jumpCtrl[1] <= jumpCtrl.DB_MAX_OUTPUT_PORT_TYPE
branchCtrl[0] <= branchCtrl.DB_MAX_OUTPUT_PORT_TYPE
branchCtrl[1] <= branchCtrl.DB_MAX_OUTPUT_PORT_TYPE
loadData <= loadData.DB_MAX_OUTPUT_PORT_TYPE
storeData <= storeData.DB_MAX_OUTPUT_PORT_TYPE
setxCtrl <= setxCtrl.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchFD|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchFD|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:dxLoad
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:rsConflict
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:rdConflict
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:fdStore
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile
rd[0] => rd[0].IN2
rd[1] => rd[1].IN2
rd[2] => rd[2].IN2
rd[3] => rd[3].IN2
rd[4] => rd[4].IN2
rs[0] => rs[0].IN3
rs[1] => rs[1].IN3
rs[2] => rs[2].IN3
rs[3] => rs[3].IN3
rs[4] => rs[4].IN3
rt[0] => rt[0].IN1
rt[1] => rt[1].IN1
rt[2] => rt[2].IN1
rt[3] => rt[3].IN1
rt[4] => rt[4].IN1
writeReg[0] => writeReg[0].IN1
writeReg[1] => writeReg[1].IN1
writeReg[2] => writeReg[2].IN1
writeReg[3] => writeReg[3].IN1
writeReg[4] => writeReg[4].IN1
regWriteVal[0] => regWriteVal[0].IN1
regWriteVal[1] => regWriteVal[1].IN1
regWriteVal[2] => regWriteVal[2].IN1
regWriteVal[3] => regWriteVal[3].IN1
regWriteVal[4] => regWriteVal[4].IN1
regWriteVal[5] => regWriteVal[5].IN1
regWriteVal[6] => regWriteVal[6].IN1
regWriteVal[7] => regWriteVal[7].IN1
regWriteVal[8] => regWriteVal[8].IN1
regWriteVal[9] => regWriteVal[9].IN1
regWriteVal[10] => regWriteVal[10].IN1
regWriteVal[11] => regWriteVal[11].IN1
regWriteVal[12] => regWriteVal[12].IN1
regWriteVal[13] => regWriteVal[13].IN1
regWriteVal[14] => regWriteVal[14].IN1
regWriteVal[15] => regWriteVal[15].IN1
regWriteVal[16] => regWriteVal[16].IN1
regWriteVal[17] => regWriteVal[17].IN1
regWriteVal[18] => regWriteVal[18].IN1
regWriteVal[19] => regWriteVal[19].IN1
regWriteVal[20] => regWriteVal[20].IN1
regWriteVal[21] => regWriteVal[21].IN1
regWriteVal[22] => regWriteVal[22].IN1
regWriteVal[23] => regWriteVal[23].IN1
regWriteVal[24] => regWriteVal[24].IN1
regWriteVal[25] => regWriteVal[25].IN1
regWriteVal[26] => regWriteVal[26].IN1
regWriteVal[27] => regWriteVal[27].IN1
regWriteVal[28] => regWriteVal[28].IN1
regWriteVal[29] => regWriteVal[29].IN1
regWriteVal[30] => regWriteVal[30].IN1
regWriteVal[31] => regWriteVal[31].IN1
pc[0] => ~NO_FANOUT~
pc[1] => ~NO_FANOUT~
pc[2] => ~NO_FANOUT~
pc[3] => ~NO_FANOUT~
pc[4] => ~NO_FANOUT~
pc[5] => ~NO_FANOUT~
pc[6] => ~NO_FANOUT~
pc[7] => ~NO_FANOUT~
pc[8] => ~NO_FANOUT~
pc[9] => ~NO_FANOUT~
pc[10] => ~NO_FANOUT~
pc[11] => ~NO_FANOUT~
pc[12] => ~NO_FANOUT~
pc[13] => ~NO_FANOUT~
pc[14] => ~NO_FANOUT~
pc[15] => ~NO_FANOUT~
pc[16] => ~NO_FANOUT~
pc[17] => ~NO_FANOUT~
pc[18] => ~NO_FANOUT~
pc[19] => ~NO_FANOUT~
pc[20] => ~NO_FANOUT~
pc[21] => ~NO_FANOUT~
pc[22] => ~NO_FANOUT~
pc[23] => ~NO_FANOUT~
pc[24] => ~NO_FANOUT~
pc[25] => ~NO_FANOUT~
pc[26] => ~NO_FANOUT~
pc[27] => ~NO_FANOUT~
pc[28] => ~NO_FANOUT~
pc[29] => ~NO_FANOUT~
pc[30] => ~NO_FANOUT~
pc[31] => ~NO_FANOUT~
regWriteEn => regWriteEn.IN1
branchCtrl[0] => branchCtrl[0].IN2
branchCtrl[1] => branchCtrl[1].IN2
jumpCtrl[0] => readRegB.IN0
jumpCtrl[0] => readRegB.IN0
jumpCtrl[1] => readRegB.IN1
jumpCtrl[1] => readRegB.IN1
storeData => readRegB[0].OE
storeData => readRegB[1].OE
storeData => readRegB[2].OE
storeData => readRegB[3].OE
storeData => readRegB[4].OE
storeData => readRegB.IN1
clock => clock.IN1
reset => reset.IN1
regAVal[0] <= regfile:registerfile.data_readRegA
regAVal[1] <= regfile:registerfile.data_readRegA
regAVal[2] <= regfile:registerfile.data_readRegA
regAVal[3] <= regfile:registerfile.data_readRegA
regAVal[4] <= regfile:registerfile.data_readRegA
regAVal[5] <= regfile:registerfile.data_readRegA
regAVal[6] <= regfile:registerfile.data_readRegA
regAVal[7] <= regfile:registerfile.data_readRegA
regAVal[8] <= regfile:registerfile.data_readRegA
regAVal[9] <= regfile:registerfile.data_readRegA
regAVal[10] <= regfile:registerfile.data_readRegA
regAVal[11] <= regfile:registerfile.data_readRegA
regAVal[12] <= regfile:registerfile.data_readRegA
regAVal[13] <= regfile:registerfile.data_readRegA
regAVal[14] <= regfile:registerfile.data_readRegA
regAVal[15] <= regfile:registerfile.data_readRegA
regAVal[16] <= regfile:registerfile.data_readRegA
regAVal[17] <= regfile:registerfile.data_readRegA
regAVal[18] <= regfile:registerfile.data_readRegA
regAVal[19] <= regfile:registerfile.data_readRegA
regAVal[20] <= regfile:registerfile.data_readRegA
regAVal[21] <= regfile:registerfile.data_readRegA
regAVal[22] <= regfile:registerfile.data_readRegA
regAVal[23] <= regfile:registerfile.data_readRegA
regAVal[24] <= regfile:registerfile.data_readRegA
regAVal[25] <= regfile:registerfile.data_readRegA
regAVal[26] <= regfile:registerfile.data_readRegA
regAVal[27] <= regfile:registerfile.data_readRegA
regAVal[28] <= regfile:registerfile.data_readRegA
regAVal[29] <= regfile:registerfile.data_readRegA
regAVal[30] <= regfile:registerfile.data_readRegA
regAVal[31] <= regfile:registerfile.data_readRegA
regBVal[0] <= regfile:registerfile.data_readRegB
regBVal[1] <= regfile:registerfile.data_readRegB
regBVal[2] <= regfile:registerfile.data_readRegB
regBVal[3] <= regfile:registerfile.data_readRegB
regBVal[4] <= regfile:registerfile.data_readRegB
regBVal[5] <= regfile:registerfile.data_readRegB
regBVal[6] <= regfile:registerfile.data_readRegB
regBVal[7] <= regfile:registerfile.data_readRegB
regBVal[8] <= regfile:registerfile.data_readRegB
regBVal[9] <= regfile:registerfile.data_readRegB
regBVal[10] <= regfile:registerfile.data_readRegB
regBVal[11] <= regfile:registerfile.data_readRegB
regBVal[12] <= regfile:registerfile.data_readRegB
regBVal[13] <= regfile:registerfile.data_readRegB
regBVal[14] <= regfile:registerfile.data_readRegB
regBVal[15] <= regfile:registerfile.data_readRegB
regBVal[16] <= regfile:registerfile.data_readRegB
regBVal[17] <= regfile:registerfile.data_readRegB
regBVal[18] <= regfile:registerfile.data_readRegB
regBVal[19] <= regfile:registerfile.data_readRegB
regBVal[20] <= regfile:registerfile.data_readRegB
regBVal[21] <= regfile:registerfile.data_readRegB
regBVal[22] <= regfile:registerfile.data_readRegB
regBVal[23] <= regfile:registerfile.data_readRegB
regBVal[24] <= regfile:registerfile.data_readRegB
regBVal[25] <= regfile:registerfile.data_readRegB
regBVal[26] <= regfile:registerfile.data_readRegB
regBVal[27] <= regfile:registerfile.data_readRegB
regBVal[28] <= regfile:registerfile.data_readRegB
regBVal[29] <= regfile:registerfile.data_readRegB
regBVal[30] <= regfile:registerfile.data_readRegB
regBVal[31] <= regfile:registerfile.data_readRegB


|processor|regFileLogic:myRegFile|fiveBitmux4to1:regA
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|fiveBitmux4to1:regB
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile
clock => clock.IN31
ctrl_writeEnable => regLoop[1].writeSelect.IN1
ctrl_writeEnable => regLoop[2].writeSelect.IN1
ctrl_writeEnable => regLoop[3].writeSelect.IN1
ctrl_writeEnable => regLoop[4].writeSelect.IN1
ctrl_writeEnable => regLoop[5].writeSelect.IN1
ctrl_writeEnable => regLoop[6].writeSelect.IN1
ctrl_writeEnable => regLoop[7].writeSelect.IN1
ctrl_writeEnable => regLoop[8].writeSelect.IN1
ctrl_writeEnable => regLoop[9].writeSelect.IN1
ctrl_writeEnable => regLoop[10].writeSelect.IN1
ctrl_writeEnable => regLoop[11].writeSelect.IN1
ctrl_writeEnable => regLoop[12].writeSelect.IN1
ctrl_writeEnable => regLoop[13].writeSelect.IN1
ctrl_writeEnable => regLoop[14].writeSelect.IN1
ctrl_writeEnable => regLoop[15].writeSelect.IN1
ctrl_writeEnable => regLoop[16].writeSelect.IN1
ctrl_writeEnable => regLoop[17].writeSelect.IN1
ctrl_writeEnable => regLoop[18].writeSelect.IN1
ctrl_writeEnable => regLoop[19].writeSelect.IN1
ctrl_writeEnable => regLoop[20].writeSelect.IN1
ctrl_writeEnable => regLoop[21].writeSelect.IN1
ctrl_writeEnable => regLoop[22].writeSelect.IN1
ctrl_writeEnable => regLoop[23].writeSelect.IN1
ctrl_writeEnable => regLoop[24].writeSelect.IN1
ctrl_writeEnable => regLoop[25].writeSelect.IN1
ctrl_writeEnable => regLoop[26].writeSelect.IN1
ctrl_writeEnable => regLoop[27].writeSelect.IN1
ctrl_writeEnable => regLoop[28].writeSelect.IN1
ctrl_writeEnable => regLoop[29].writeSelect.IN1
ctrl_writeEnable => regLoop[30].writeSelect.IN1
ctrl_writeEnable => regLoop[31].writeSelect.IN1
ctrl_reset => ctrl_reset.IN31
ctrl_writeReg[0] => ctrl_writeReg[0].IN1
ctrl_writeReg[1] => ctrl_writeReg[1].IN1
ctrl_writeReg[2] => ctrl_writeReg[2].IN1
ctrl_writeReg[3] => ctrl_writeReg[3].IN1
ctrl_writeReg[4] => ctrl_writeReg[4].IN1
ctrl_readRegA[0] => ctrl_readRegA[0].IN1
ctrl_readRegA[1] => ctrl_readRegA[1].IN1
ctrl_readRegA[2] => ctrl_readRegA[2].IN1
ctrl_readRegA[3] => ctrl_readRegA[3].IN1
ctrl_readRegA[4] => ctrl_readRegA[4].IN1
ctrl_readRegB[0] => ctrl_readRegB[0].IN1
ctrl_readRegB[1] => ctrl_readRegB[1].IN1
ctrl_readRegB[2] => ctrl_readRegB[2].IN1
ctrl_readRegB[3] => ctrl_readRegB[3].IN1
ctrl_readRegB[4] => ctrl_readRegB[4].IN1
data_writeReg[0] => data_writeReg[0].IN31
data_writeReg[1] => data_writeReg[1].IN31
data_writeReg[2] => data_writeReg[2].IN31
data_writeReg[3] => data_writeReg[3].IN31
data_writeReg[4] => data_writeReg[4].IN31
data_writeReg[5] => data_writeReg[5].IN31
data_writeReg[6] => data_writeReg[6].IN31
data_writeReg[7] => data_writeReg[7].IN31
data_writeReg[8] => data_writeReg[8].IN31
data_writeReg[9] => data_writeReg[9].IN31
data_writeReg[10] => data_writeReg[10].IN31
data_writeReg[11] => data_writeReg[11].IN31
data_writeReg[12] => data_writeReg[12].IN31
data_writeReg[13] => data_writeReg[13].IN31
data_writeReg[14] => data_writeReg[14].IN31
data_writeReg[15] => data_writeReg[15].IN31
data_writeReg[16] => data_writeReg[16].IN31
data_writeReg[17] => data_writeReg[17].IN31
data_writeReg[18] => data_writeReg[18].IN31
data_writeReg[19] => data_writeReg[19].IN31
data_writeReg[20] => data_writeReg[20].IN31
data_writeReg[21] => data_writeReg[21].IN31
data_writeReg[22] => data_writeReg[22].IN31
data_writeReg[23] => data_writeReg[23].IN31
data_writeReg[24] => data_writeReg[24].IN31
data_writeReg[25] => data_writeReg[25].IN31
data_writeReg[26] => data_writeReg[26].IN31
data_writeReg[27] => data_writeReg[27].IN31
data_writeReg[28] => data_writeReg[28].IN31
data_writeReg[29] => data_writeReg[29].IN31
data_writeReg[30] => data_writeReg[30].IN31
data_writeReg[31] => data_writeReg[31].IN31
data_readRegA[0] <= data_readRegA[0].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[1] <= data_readRegA[1].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[2] <= data_readRegA[2].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[3] <= data_readRegA[3].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[4] <= data_readRegA[4].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[5] <= data_readRegA[5].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[6] <= data_readRegA[6].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[7] <= data_readRegA[7].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[8] <= data_readRegA[8].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[9] <= data_readRegA[9].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[10] <= data_readRegA[10].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[11] <= data_readRegA[11].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[12] <= data_readRegA[12].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[13] <= data_readRegA[13].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[14] <= data_readRegA[14].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[15] <= data_readRegA[15].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[16] <= data_readRegA[16].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[17] <= data_readRegA[17].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[18] <= data_readRegA[18].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[19] <= data_readRegA[19].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[20] <= data_readRegA[20].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[21] <= data_readRegA[21].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[22] <= data_readRegA[22].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[23] <= data_readRegA[23].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[24] <= data_readRegA[24].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[25] <= data_readRegA[25].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[26] <= data_readRegA[26].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[27] <= data_readRegA[27].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[28] <= data_readRegA[28].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[29] <= data_readRegA[29].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[30] <= data_readRegA[30].DB_MAX_OUTPUT_PORT_TYPE
data_readRegA[31] <= data_readRegA[31].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[0] <= data_readRegB[0].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[1] <= data_readRegB[1].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[2] <= data_readRegB[2].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[3] <= data_readRegB[3].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[4] <= data_readRegB[4].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[5] <= data_readRegB[5].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[6] <= data_readRegB[6].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[7] <= data_readRegB[7].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[8] <= data_readRegB[8].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[9] <= data_readRegB[9].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[10] <= data_readRegB[10].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[11] <= data_readRegB[11].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[12] <= data_readRegB[12].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[13] <= data_readRegB[13].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[14] <= data_readRegB[14].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[15] <= data_readRegB[15].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[16] <= data_readRegB[16].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[17] <= data_readRegB[17].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[18] <= data_readRegB[18].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[19] <= data_readRegB[19].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[20] <= data_readRegB[20].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[21] <= data_readRegB[21].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[22] <= data_readRegB[22].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[23] <= data_readRegB[23].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[24] <= data_readRegB[24].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[25] <= data_readRegB[25].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[26] <= data_readRegB[26].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[27] <= data_readRegB[27].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[28] <= data_readRegB[28].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[29] <= data_readRegB[29].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[30] <= data_readRegB[30].DB_MAX_OUTPUT_PORT_TYPE
data_readRegB[31] <= data_readRegB[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderA
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderB
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|decoder:decoderW
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[1].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[2].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[3].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[4].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[5].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[6].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[7].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[8].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[9].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[10].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[11].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[12].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[13].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[14].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[15].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[16].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[17].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[18].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[19].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[20].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[21].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[22].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[23].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[24].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[25].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[26].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[27].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[28].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[29].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[30].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|regFileLogic:myRegFile|regfile:registerfile|register:regLoop[31].myReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchDX|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchDX|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassAn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassAs
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassAn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassAs
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|mux4to1:bypALUa
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:mxBypassB
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wxBypassBn
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|mux4to1:bypALUb
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn
regAVal[0] => regAVal[0].IN1
regAVal[1] => regAVal[1].IN1
regAVal[2] => regAVal[2].IN1
regAVal[3] => regAVal[3].IN1
regAVal[4] => regAVal[4].IN1
regAVal[5] => regAVal[5].IN1
regAVal[6] => regAVal[6].IN1
regAVal[7] => regAVal[7].IN1
regAVal[8] => regAVal[8].IN1
regAVal[9] => regAVal[9].IN1
regAVal[10] => regAVal[10].IN1
regAVal[11] => regAVal[11].IN1
regAVal[12] => regAVal[12].IN1
regAVal[13] => regAVal[13].IN1
regAVal[14] => regAVal[14].IN1
regAVal[15] => regAVal[15].IN1
regAVal[16] => regAVal[16].IN1
regAVal[17] => regAVal[17].IN1
regAVal[18] => regAVal[18].IN1
regAVal[19] => regAVal[19].IN1
regAVal[20] => regAVal[20].IN1
regAVal[21] => regAVal[21].IN1
regAVal[22] => regAVal[22].IN1
regAVal[23] => regAVal[23].IN1
regAVal[24] => regAVal[24].IN1
regAVal[25] => regAVal[25].IN1
regAVal[26] => regAVal[26].IN1
regAVal[27] => regAVal[27].IN1
regAVal[28] => regAVal[28].IN1
regAVal[29] => regAVal[29].IN1
regAVal[30] => regAVal[30].IN1
regAVal[31] => regAVal[31].IN1
regBVal[0] => regBVal[0].IN1
regBVal[1] => regBVal[1].IN1
regBVal[2] => regBVal[2].IN1
regBVal[3] => regBVal[3].IN1
regBVal[4] => regBVal[4].IN1
regBVal[5] => regBVal[5].IN1
regBVal[6] => regBVal[6].IN1
regBVal[7] => regBVal[7].IN1
regBVal[8] => regBVal[8].IN1
regBVal[9] => regBVal[9].IN1
regBVal[10] => regBVal[10].IN1
regBVal[11] => regBVal[11].IN1
regBVal[12] => regBVal[12].IN1
regBVal[13] => regBVal[13].IN1
regBVal[14] => regBVal[14].IN1
regBVal[15] => regBVal[15].IN1
regBVal[16] => regBVal[16].IN1
regBVal[17] => regBVal[17].IN1
regBVal[18] => regBVal[18].IN1
regBVal[19] => regBVal[19].IN1
regBVal[20] => regBVal[20].IN1
regBVal[21] => regBVal[21].IN1
regBVal[22] => regBVal[22].IN1
regBVal[23] => regBVal[23].IN1
regBVal[24] => regBVal[24].IN1
regBVal[25] => regBVal[25].IN1
regBVal[26] => regBVal[26].IN1
regBVal[27] => regBVal[27].IN1
regBVal[28] => regBVal[28].IN1
regBVal[29] => regBVal[29].IN1
regBVal[30] => regBVal[30].IN1
regBVal[31] => regBVal[31].IN1
imm[0] => operandB[0].DATAIN
imm[1] => operandB[1].DATAIN
imm[2] => operandB[2].DATAIN
imm[3] => operandB[3].DATAIN
imm[4] => operandB[4].DATAIN
imm[5] => operandB[5].DATAIN
imm[6] => operandB[6].DATAIN
imm[7] => operandB[7].DATAIN
imm[8] => operandB[8].DATAIN
imm[9] => operandB[9].DATAIN
imm[10] => operandB[10].DATAIN
imm[11] => operandB[11].DATAIN
imm[12] => operandB[12].DATAIN
imm[13] => operandB[13].DATAIN
imm[14] => operandB[14].DATAIN
imm[15] => operandB[15].DATAIN
imm[16] => operandB[16].DATAIN
imm[17] => operandB[17].DATAIN
imm[18] => operandB[18].DATAIN
imm[19] => operandB[19].DATAIN
imm[20] => operandB[20].DATAIN
imm[21] => operandB[21].DATAIN
imm[22] => operandB[22].DATAIN
imm[23] => operandB[23].DATAIN
imm[24] => operandB[24].DATAIN
imm[25] => operandB[25].DATAIN
imm[26] => operandB[26].DATAIN
imm[27] => operandB[27].DATAIN
imm[28] => operandB[28].DATAIN
imm[29] => operandB[29].DATAIN
imm[30] => operandB[30].DATAIN
imm[31] => operandB[31].DATAIN
pc[0] => operandA.DATAB
pc[1] => operandA.DATAB
pc[2] => operandA.DATAB
pc[3] => operandA.DATAB
pc[4] => operandA.DATAB
pc[5] => operandA.DATAB
pc[6] => operandA.DATAB
pc[7] => operandA.DATAB
pc[8] => operandA.DATAB
pc[9] => operandA.DATAB
pc[10] => operandA.DATAB
pc[11] => operandA.DATAB
pc[12] => operandA.DATAB
pc[13] => operandA.DATAB
pc[14] => operandA.DATAB
pc[15] => operandA.DATAB
pc[16] => operandA.DATAB
pc[17] => operandA.DATAB
pc[18] => operandA.DATAB
pc[19] => operandA.DATAB
pc[20] => operandA.DATAB
pc[21] => operandA.DATAB
pc[22] => operandA.DATAB
pc[23] => operandA.DATAB
pc[24] => operandA.DATAB
pc[25] => operandA.DATAB
pc[26] => operandA.DATAB
pc[27] => operandA.DATAB
pc[28] => operandA.DATAB
pc[29] => operandA.DATAB
pc[30] => operandA.DATAB
pc[31] => operandA.DATAB
aluOp[0] => aluOp[0].IN2
aluOp[1] => aluOp[1].IN2
aluOp[2] => aluOp[2].IN2
aluOp[3] => aluOp[3].IN2
aluOp[4] => aluOp[4].IN2
shamt[0] => shamt[0].IN1
shamt[1] => shamt[1].IN1
shamt[2] => shamt[2].IN1
shamt[3] => shamt[3].IN1
shamt[4] => shamt[4].IN1
opcode[0] => opcode[0].IN1
opcode[1] => opcode[1].IN1
opcode[2] => opcode[2].IN1
opcode[3] => opcode[3].IN1
opcode[4] => opcode[4].IN1
aluInB => operandB.IN1
aluInB => operandB.IN1
aluInB => operandB.IN1
jumpCtrl[0] => operandA.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[0] => operandB.IN0
jumpCtrl[1] => operandB.IN1
jumpCtrl[1] => operandB.IN1
jumpCtrl[1] => operandA.IN1
jumpCtrl[1] => operandB.IN1
setxCtrl => outputSel[1].IN1
target[0] => target[0].IN1
target[1] => target[1].IN1
target[2] => target[2].IN1
target[3] => target[3].IN1
target[4] => target[4].IN1
target[5] => target[5].IN1
target[6] => target[6].IN1
target[7] => target[7].IN1
target[8] => target[8].IN1
target[9] => target[9].IN1
target[10] => target[10].IN1
target[11] => target[11].IN1
target[12] => target[12].IN1
target[13] => target[13].IN1
target[14] => target[14].IN1
target[15] => target[15].IN1
target[16] => target[16].IN1
target[17] => target[17].IN1
target[18] => target[18].IN1
target[19] => target[19].IN1
target[20] => target[20].IN1
target[21] => target[21].IN1
target[22] => target[22].IN1
target[23] => target[23].IN1
target[24] => target[24].IN1
target[25] => target[25].IN1
target[26] => target[26].IN1
target[27] => target[27].IN1
target[28] => target[28].IN1
target[29] => target[29].IN1
target[30] => target[30].IN1
target[31] => target[31].IN1
clock => clock.IN2
reset => comb.IN1
result[0] <= mux4to1:execOut.out
result[1] <= mux4to1:execOut.out
result[2] <= mux4to1:execOut.out
result[3] <= mux4to1:execOut.out
result[4] <= mux4to1:execOut.out
result[5] <= mux4to1:execOut.out
result[6] <= mux4to1:execOut.out
result[7] <= mux4to1:execOut.out
result[8] <= mux4to1:execOut.out
result[9] <= mux4to1:execOut.out
result[10] <= mux4to1:execOut.out
result[11] <= mux4to1:execOut.out
result[12] <= mux4to1:execOut.out
result[13] <= mux4to1:execOut.out
result[14] <= mux4to1:execOut.out
result[15] <= mux4to1:execOut.out
result[16] <= mux4to1:execOut.out
result[17] <= mux4to1:execOut.out
result[18] <= mux4to1:execOut.out
result[19] <= mux4to1:execOut.out
result[20] <= mux4to1:execOut.out
result[21] <= mux4to1:execOut.out
result[22] <= mux4to1:execOut.out
result[23] <= mux4to1:execOut.out
result[24] <= mux4to1:execOut.out
result[25] <= mux4to1:execOut.out
result[26] <= mux4to1:execOut.out
result[27] <= mux4to1:execOut.out
result[28] <= mux4to1:execOut.out
result[29] <= mux4to1:execOut.out
result[30] <= mux4to1:execOut.out
result[31] <= mux4to1:execOut.out
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
error <= outputSel[0].DB_MAX_OUTPUT_PORT_TYPE
argsLessThan <= alu:myALU.isLessThan
argsNotEqual <= alu:myALU.isNotEqual


|processor|execute:executeInsn|errorCodeFinder:errFinder
aluOp[0] => add.IN0
aluOp[0] => mul.IN0
aluOp[0] => div.IN0
aluOp[0] => sub.IN0
aluOp[1] => add.IN1
aluOp[1] => sub.IN1
aluOp[1] => div.IN1
aluOp[1] => mul.IN1
aluOp[2] => add.IN2
aluOp[2] => sub.IN2
aluOp[2] => div.IN2
aluOp[2] => mul.IN2
aluOp[3] => add.IN3
aluOp[3] => sub.IN3
aluOp[3] => mul.IN3
aluOp[3] => div.IN3
aluOp[4] => add.IN4
aluOp[4] => sub.IN4
aluOp[4] => mul.IN4
aluOp[4] => div.IN4
opcode[0] => addi.IN0
opcode[1] => addi.IN1
opcode[2] => addi.IN2
opcode[3] => addi.IN3
opcode[4] => addi.IN4
code[0] <= code[0].DB_MAX_OUTPUT_PORT_TYPE
code[1] <= code[1].DB_MAX_OUTPUT_PORT_TYPE
code[2] <= code[2].DB_MAX_OUTPUT_PORT_TYPE
code[3] <= code[3].DB_MAX_OUTPUT_PORT_TYPE
code[4] <= code[4].DB_MAX_OUTPUT_PORT_TYPE
code[5] <= code[5].DB_MAX_OUTPUT_PORT_TYPE
code[6] <= code[6].DB_MAX_OUTPUT_PORT_TYPE
code[7] <= code[7].DB_MAX_OUTPUT_PORT_TYPE
code[8] <= code[8].DB_MAX_OUTPUT_PORT_TYPE
code[9] <= code[9].DB_MAX_OUTPUT_PORT_TYPE
code[10] <= code[10].DB_MAX_OUTPUT_PORT_TYPE
code[11] <= code[11].DB_MAX_OUTPUT_PORT_TYPE
code[12] <= code[12].DB_MAX_OUTPUT_PORT_TYPE
code[13] <= code[13].DB_MAX_OUTPUT_PORT_TYPE
code[14] <= code[14].DB_MAX_OUTPUT_PORT_TYPE
code[15] <= code[15].DB_MAX_OUTPUT_PORT_TYPE
code[16] <= code[16].DB_MAX_OUTPUT_PORT_TYPE
code[17] <= code[17].DB_MAX_OUTPUT_PORT_TYPE
code[18] <= code[18].DB_MAX_OUTPUT_PORT_TYPE
code[19] <= code[19].DB_MAX_OUTPUT_PORT_TYPE
code[20] <= code[20].DB_MAX_OUTPUT_PORT_TYPE
code[21] <= code[21].DB_MAX_OUTPUT_PORT_TYPE
code[22] <= code[22].DB_MAX_OUTPUT_PORT_TYPE
code[23] <= code[23].DB_MAX_OUTPUT_PORT_TYPE
code[24] <= code[24].DB_MAX_OUTPUT_PORT_TYPE
code[25] <= code[25].DB_MAX_OUTPUT_PORT_TYPE
code[26] <= code[26].DB_MAX_OUTPUT_PORT_TYPE
code[27] <= code[27].DB_MAX_OUTPUT_PORT_TYPE
code[28] <= code[28].DB_MAX_OUTPUT_PORT_TYPE
code[29] <= code[29].DB_MAX_OUTPUT_PORT_TYPE
code[30] <= code[30].DB_MAX_OUTPUT_PORT_TYPE
code[31] <= code[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|ecedffe:multdivcount
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU
data_operandA[0] => data_operandA[0].IN6
data_operandA[1] => data_operandA[1].IN6
data_operandA[2] => data_operandA[2].IN6
data_operandA[3] => data_operandA[3].IN6
data_operandA[4] => data_operandA[4].IN6
data_operandA[5] => data_operandA[5].IN6
data_operandA[6] => data_operandA[6].IN6
data_operandA[7] => data_operandA[7].IN6
data_operandA[8] => data_operandA[8].IN6
data_operandA[9] => data_operandA[9].IN6
data_operandA[10] => data_operandA[10].IN6
data_operandA[11] => data_operandA[11].IN6
data_operandA[12] => data_operandA[12].IN6
data_operandA[13] => data_operandA[13].IN6
data_operandA[14] => data_operandA[14].IN6
data_operandA[15] => data_operandA[15].IN6
data_operandA[16] => data_operandA[16].IN6
data_operandA[17] => data_operandA[17].IN6
data_operandA[18] => data_operandA[18].IN6
data_operandA[19] => data_operandA[19].IN6
data_operandA[20] => data_operandA[20].IN6
data_operandA[21] => data_operandA[21].IN6
data_operandA[22] => data_operandA[22].IN6
data_operandA[23] => data_operandA[23].IN6
data_operandA[24] => data_operandA[24].IN6
data_operandA[25] => data_operandA[25].IN6
data_operandA[26] => data_operandA[26].IN6
data_operandA[27] => data_operandA[27].IN6
data_operandA[28] => data_operandA[28].IN6
data_operandA[29] => data_operandA[29].IN6
data_operandA[30] => data_operandA[30].IN6
data_operandA[31] => data_operandA[31].IN6
data_operandB[0] => data_operandB[0].IN4
data_operandB[1] => data_operandB[1].IN4
data_operandB[2] => data_operandB[2].IN4
data_operandB[3] => data_operandB[3].IN4
data_operandB[4] => data_operandB[4].IN4
data_operandB[5] => data_operandB[5].IN4
data_operandB[6] => data_operandB[6].IN4
data_operandB[7] => data_operandB[7].IN4
data_operandB[8] => data_operandB[8].IN4
data_operandB[9] => data_operandB[9].IN4
data_operandB[10] => data_operandB[10].IN4
data_operandB[11] => data_operandB[11].IN4
data_operandB[12] => data_operandB[12].IN4
data_operandB[13] => data_operandB[13].IN4
data_operandB[14] => data_operandB[14].IN4
data_operandB[15] => data_operandB[15].IN4
data_operandB[16] => data_operandB[16].IN4
data_operandB[17] => data_operandB[17].IN4
data_operandB[18] => data_operandB[18].IN4
data_operandB[19] => data_operandB[19].IN4
data_operandB[20] => data_operandB[20].IN4
data_operandB[21] => data_operandB[21].IN4
data_operandB[22] => data_operandB[22].IN4
data_operandB[23] => data_operandB[23].IN4
data_operandB[24] => data_operandB[24].IN4
data_operandB[25] => data_operandB[25].IN4
data_operandB[26] => data_operandB[26].IN4
data_operandB[27] => data_operandB[27].IN4
data_operandB[28] => data_operandB[28].IN4
data_operandB[29] => data_operandB[29].IN4
data_operandB[30] => data_operandB[30].IN4
data_operandB[31] => data_operandB[31].IN4
ctrl_ALUopcode[0] => ctrl_ALUopcode[0].IN1
ctrl_ALUopcode[1] => ctrl_ALUopcode[1].IN1
ctrl_ALUopcode[2] => ctrl_ALUopcode[2].IN1
ctrl_ALUopcode[3] => ctrl_ALUopcode[3].IN1
ctrl_ALUopcode[4] => ctrl_ALUopcode[4].IN1
ctrl_shiftamt[0] => ctrl_shiftamt[0].IN2
ctrl_shiftamt[1] => ctrl_shiftamt[1].IN2
ctrl_shiftamt[2] => ctrl_shiftamt[2].IN2
ctrl_shiftamt[3] => ctrl_shiftamt[3].IN2
ctrl_shiftamt[4] => ctrl_shiftamt[4].IN2
data_result[0] <= data_result[0].DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result[1].DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result[2].DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result[3].DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result[4].DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result[5].DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result[6].DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result[7].DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result[8].DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result[9].DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result[10].DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result[11].DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result[12].DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result[13].DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result[14].DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result[15].DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result[16].DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result[17].DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result[18].DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result[19].DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result[20].DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result[21].DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result[22].DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result[23].DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result[24].DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result[25].DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result[26].DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result[27].DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result[28].DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result[29].DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result[30].DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result[31].DB_MAX_OUTPUT_PORT_TYPE
isNotEqual <= nequalityChecker:neq.notEqual
isLessThan <= cla:adder.lessThan
overflow <= cla:adder.ovf


|processor|execute:executeInsn|alu:myALU|decoder:outPicker
regNum[0] => and1.IN0
regNum[0] => and3.IN0
regNum[0] => and5.IN0
regNum[0] => and7.IN0
regNum[0] => and9.IN0
regNum[0] => and11.IN0
regNum[0] => and13.IN0
regNum[0] => and15.IN0
regNum[0] => and17.IN0
regNum[0] => and19.IN0
regNum[0] => and21.IN0
regNum[0] => and23.IN0
regNum[0] => and25.IN0
regNum[0] => and27.IN0
regNum[0] => and29.IN0
regNum[0] => and31.IN0
regNum[0] => and30.IN0
regNum[0] => and28.IN0
regNum[0] => and26.IN0
regNum[0] => and24.IN0
regNum[0] => and22.IN0
regNum[0] => and20.IN0
regNum[0] => and18.IN0
regNum[0] => and16.IN0
regNum[0] => and14.IN0
regNum[0] => and12.IN0
regNum[0] => and10.IN0
regNum[0] => and8.IN0
regNum[0] => and6.IN0
regNum[0] => and4.IN0
regNum[0] => and2.IN0
regNum[0] => and0.IN0
regNum[1] => and2.IN1
regNum[1] => and3.IN1
regNum[1] => and6.IN1
regNum[1] => and7.IN1
regNum[1] => and10.IN1
regNum[1] => and11.IN1
regNum[1] => and14.IN1
regNum[1] => and15.IN1
regNum[1] => and18.IN1
regNum[1] => and19.IN1
regNum[1] => and22.IN1
regNum[1] => and23.IN1
regNum[1] => and26.IN1
regNum[1] => and27.IN1
regNum[1] => and30.IN1
regNum[1] => and31.IN1
regNum[1] => and29.IN1
regNum[1] => and28.IN1
regNum[1] => and25.IN1
regNum[1] => and24.IN1
regNum[1] => and21.IN1
regNum[1] => and20.IN1
regNum[1] => and17.IN1
regNum[1] => and16.IN1
regNum[1] => and13.IN1
regNum[1] => and12.IN1
regNum[1] => and9.IN1
regNum[1] => and8.IN1
regNum[1] => and5.IN1
regNum[1] => and4.IN1
regNum[1] => and1.IN1
regNum[1] => and0.IN1
regNum[2] => and4.IN2
regNum[2] => and5.IN2
regNum[2] => and6.IN2
regNum[2] => and7.IN2
regNum[2] => and12.IN2
regNum[2] => and13.IN2
regNum[2] => and14.IN2
regNum[2] => and15.IN2
regNum[2] => and20.IN2
regNum[2] => and21.IN2
regNum[2] => and22.IN2
regNum[2] => and23.IN2
regNum[2] => and28.IN2
regNum[2] => and29.IN2
regNum[2] => and30.IN2
regNum[2] => and31.IN2
regNum[2] => and27.IN2
regNum[2] => and26.IN2
regNum[2] => and25.IN2
regNum[2] => and24.IN2
regNum[2] => and19.IN2
regNum[2] => and18.IN2
regNum[2] => and17.IN2
regNum[2] => and16.IN2
regNum[2] => and11.IN2
regNum[2] => and10.IN2
regNum[2] => and9.IN2
regNum[2] => and8.IN2
regNum[2] => and3.IN2
regNum[2] => and2.IN2
regNum[2] => and1.IN2
regNum[2] => and0.IN2
regNum[3] => and8.IN3
regNum[3] => and9.IN3
regNum[3] => and10.IN3
regNum[3] => and11.IN3
regNum[3] => and12.IN3
regNum[3] => and13.IN3
regNum[3] => and14.IN3
regNum[3] => and15.IN3
regNum[3] => and24.IN3
regNum[3] => and25.IN3
regNum[3] => and26.IN3
regNum[3] => and27.IN3
regNum[3] => and28.IN3
regNum[3] => and29.IN3
regNum[3] => and30.IN3
regNum[3] => and31.IN3
regNum[3] => and23.IN3
regNum[3] => and22.IN3
regNum[3] => and21.IN3
regNum[3] => and20.IN3
regNum[3] => and19.IN3
regNum[3] => and18.IN3
regNum[3] => and17.IN3
regNum[3] => and16.IN3
regNum[3] => and7.IN3
regNum[3] => and6.IN3
regNum[3] => and5.IN3
regNum[3] => and4.IN3
regNum[3] => and3.IN3
regNum[3] => and2.IN3
regNum[3] => and1.IN3
regNum[3] => and0.IN3
regNum[4] => and16.IN4
regNum[4] => and17.IN4
regNum[4] => and18.IN4
regNum[4] => and19.IN4
regNum[4] => and20.IN4
regNum[4] => and21.IN4
regNum[4] => and22.IN4
regNum[4] => and23.IN4
regNum[4] => and24.IN4
regNum[4] => and25.IN4
regNum[4] => and26.IN4
regNum[4] => and27.IN4
regNum[4] => and28.IN4
regNum[4] => and29.IN4
regNum[4] => and30.IN4
regNum[4] => and31.IN4
regNum[4] => and15.IN4
regNum[4] => and14.IN4
regNum[4] => and13.IN4
regNum[4] => and12.IN4
regNum[4] => and11.IN4
regNum[4] => and10.IN4
regNum[4] => and9.IN4
regNum[4] => and8.IN4
regNum[4] => and7.IN4
regNum[4] => and6.IN4
regNum[4] => and5.IN4
regNum[4] => and4.IN4
regNum[4] => and3.IN4
regNum[4] => and2.IN4
regNum[4] => and1.IN4
regNum[4] => and0.IN4
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|bitwiseAnd:andMod
a[0] => and0.IN0
a[1] => and1.IN0
a[2] => and2.IN0
a[3] => and3.IN0
a[4] => and4.IN0
a[5] => and5.IN0
a[6] => and6.IN0
a[7] => and7.IN0
a[8] => and8.IN0
a[9] => and9.IN0
a[10] => and10.IN0
a[11] => and11.IN0
a[12] => and12.IN0
a[13] => and13.IN0
a[14] => and14.IN0
a[15] => and15.IN0
a[16] => and16.IN0
a[17] => and17.IN0
a[18] => and18.IN0
a[19] => and19.IN0
a[20] => and20.IN0
a[21] => and21.IN0
a[22] => and22.IN0
a[23] => and23.IN0
a[24] => and24.IN0
a[25] => and25.IN0
a[26] => and26.IN0
a[27] => and27.IN0
a[28] => and28.IN0
a[29] => and29.IN0
a[30] => and30.IN0
a[31] => and31.IN0
b[0] => and0.IN1
b[1] => and1.IN1
b[2] => and2.IN1
b[3] => and3.IN1
b[4] => and4.IN1
b[5] => and5.IN1
b[6] => and6.IN1
b[7] => and7.IN1
b[8] => and8.IN1
b[9] => and9.IN1
b[10] => and10.IN1
b[11] => and11.IN1
b[12] => and12.IN1
b[13] => and13.IN1
b[14] => and14.IN1
b[15] => and15.IN1
b[16] => and16.IN1
b[17] => and17.IN1
b[18] => and18.IN1
b[19] => and19.IN1
b[20] => and20.IN1
b[21] => and21.IN1
b[22] => and22.IN1
b[23] => and23.IN1
b[24] => and24.IN1
b[25] => and25.IN1
b[26] => and26.IN1
b[27] => and27.IN1
b[28] => and28.IN1
b[29] => and29.IN1
b[30] => and30.IN1
b[31] => and31.IN1
out[0] <= and0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|bitwiseOr:orMod
a[0] => or0.IN0
a[1] => or1.IN0
a[2] => or2.IN0
a[3] => or3.IN0
a[4] => or4.IN0
a[5] => or5.IN0
a[6] => or6.IN0
a[7] => or7.IN0
a[8] => or8.IN0
a[9] => or9.IN0
a[10] => or10.IN0
a[11] => or11.IN0
a[12] => or12.IN0
a[13] => or13.IN0
a[14] => or14.IN0
a[15] => or15.IN0
a[16] => or16.IN0
a[17] => or17.IN0
a[18] => or18.IN0
a[19] => or19.IN0
a[20] => or20.IN0
a[21] => or21.IN0
a[22] => or22.IN0
a[23] => or23.IN0
a[24] => or24.IN0
a[25] => or25.IN0
a[26] => or26.IN0
a[27] => or27.IN0
a[28] => or28.IN0
a[29] => or29.IN0
a[30] => or30.IN0
a[31] => or31.IN0
b[0] => or0.IN1
b[1] => or1.IN1
b[2] => or2.IN1
b[3] => or3.IN1
b[4] => or4.IN1
b[5] => or5.IN1
b[6] => or6.IN1
b[7] => or7.IN1
b[8] => or8.IN1
b[9] => or9.IN1
b[10] => or10.IN1
b[11] => or11.IN1
b[12] => or12.IN1
b[13] => or13.IN1
b[14] => or14.IN1
b[15] => or15.IN1
b[16] => or16.IN1
b[17] => or17.IN1
b[18] => or18.IN1
b[19] => or19.IN1
b[20] => or20.IN1
b[21] => or21.IN1
b[22] => or22.IN1
b[23] => or23.IN1
b[24] => or24.IN1
b[25] => or25.IN1
b[26] => or26.IN1
b[27] => or27.IN1
b[28] => or28.IN1
b[29] => or29.IN1
b[30] => or30.IN1
b[31] => or31.IN1
out[0] <= or0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or31.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift16:sixteen
a[0] => out[16].DATAIN
a[1] => out[17].DATAIN
a[2] => out[18].DATAIN
a[3] => out[19].DATAIN
a[4] => out[20].DATAIN
a[5] => out[21].DATAIN
a[6] => out[22].DATAIN
a[7] => out[23].DATAIN
a[8] => out[24].DATAIN
a[9] => out[25].DATAIN
a[10] => out[26].DATAIN
a[11] => out[27].DATAIN
a[12] => out[28].DATAIN
a[13] => out[29].DATAIN
a[14] => out[30].DATAIN
a[15] => out[31].DATAIN
a[16] => ~NO_FANOUT~
a[17] => ~NO_FANOUT~
a[18] => ~NO_FANOUT~
a[19] => ~NO_FANOUT~
a[20] => ~NO_FANOUT~
a[21] => ~NO_FANOUT~
a[22] => ~NO_FANOUT~
a[23] => ~NO_FANOUT~
a[24] => ~NO_FANOUT~
a[25] => ~NO_FANOUT~
a[26] => ~NO_FANOUT~
a[27] => ~NO_FANOUT~
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= <GND>
out[5] <= <GND>
out[6] <= <GND>
out[7] <= <GND>
out[8] <= <GND>
out[9] <= <GND>
out[10] <= <GND>
out[11] <= <GND>
out[12] <= <GND>
out[13] <= <GND>
out[14] <= <GND>
out[15] <= <GND>
out[16] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[15].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift8:eight
a[0] => out[8].DATAIN
a[1] => out[9].DATAIN
a[2] => out[10].DATAIN
a[3] => out[11].DATAIN
a[4] => out[12].DATAIN
a[5] => out[13].DATAIN
a[6] => out[14].DATAIN
a[7] => out[15].DATAIN
a[8] => out[16].DATAIN
a[9] => out[17].DATAIN
a[10] => out[18].DATAIN
a[11] => out[19].DATAIN
a[12] => out[20].DATAIN
a[13] => out[21].DATAIN
a[14] => out[22].DATAIN
a[15] => out[23].DATAIN
a[16] => out[24].DATAIN
a[17] => out[25].DATAIN
a[18] => out[26].DATAIN
a[19] => out[27].DATAIN
a[20] => out[28].DATAIN
a[21] => out[29].DATAIN
a[22] => out[30].DATAIN
a[23] => out[31].DATAIN
a[24] => ~NO_FANOUT~
a[25] => ~NO_FANOUT~
a[26] => ~NO_FANOUT~
a[27] => ~NO_FANOUT~
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= <GND>
out[5] <= <GND>
out[6] <= <GND>
out[7] <= <GND>
out[8] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[23].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift4:four
a[0] => out[4].DATAIN
a[1] => out[5].DATAIN
a[2] => out[6].DATAIN
a[3] => out[7].DATAIN
a[4] => out[8].DATAIN
a[5] => out[9].DATAIN
a[6] => out[10].DATAIN
a[7] => out[11].DATAIN
a[8] => out[12].DATAIN
a[9] => out[13].DATAIN
a[10] => out[14].DATAIN
a[11] => out[15].DATAIN
a[12] => out[16].DATAIN
a[13] => out[17].DATAIN
a[14] => out[18].DATAIN
a[15] => out[19].DATAIN
a[16] => out[20].DATAIN
a[17] => out[21].DATAIN
a[18] => out[22].DATAIN
a[19] => out[23].DATAIN
a[20] => out[24].DATAIN
a[21] => out[25].DATAIN
a[22] => out[26].DATAIN
a[23] => out[27].DATAIN
a[24] => out[28].DATAIN
a[25] => out[29].DATAIN
a[26] => out[30].DATAIN
a[27] => out[31].DATAIN
a[28] => ~NO_FANOUT~
a[29] => ~NO_FANOUT~
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[27].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift2:two
a[0] => out[2].DATAIN
a[1] => out[3].DATAIN
a[2] => out[4].DATAIN
a[3] => out[5].DATAIN
a[4] => out[6].DATAIN
a[5] => out[7].DATAIN
a[6] => out[8].DATAIN
a[7] => out[9].DATAIN
a[8] => out[10].DATAIN
a[9] => out[11].DATAIN
a[10] => out[12].DATAIN
a[11] => out[13].DATAIN
a[12] => out[14].DATAIN
a[13] => out[15].DATAIN
a[14] => out[16].DATAIN
a[15] => out[17].DATAIN
a[16] => out[18].DATAIN
a[17] => out[19].DATAIN
a[18] => out[20].DATAIN
a[19] => out[21].DATAIN
a[20] => out[22].DATAIN
a[21] => out[23].DATAIN
a[22] => out[24].DATAIN
a[23] => out[25].DATAIN
a[24] => out[26].DATAIN
a[25] => out[27].DATAIN
a[26] => out[28].DATAIN
a[27] => out[29].DATAIN
a[28] => out[30].DATAIN
a[29] => out[31].DATAIN
a[30] => ~NO_FANOUT~
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= <GND>
out[2] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[29].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|leftshifter:left|shift1:one
a[0] => out[1].DATAIN
a[1] => out[2].DATAIN
a[2] => out[3].DATAIN
a[3] => out[4].DATAIN
a[4] => out[5].DATAIN
a[5] => out[6].DATAIN
a[6] => out[7].DATAIN
a[7] => out[8].DATAIN
a[8] => out[9].DATAIN
a[9] => out[10].DATAIN
a[10] => out[11].DATAIN
a[11] => out[12].DATAIN
a[12] => out[13].DATAIN
a[13] => out[14].DATAIN
a[14] => out[15].DATAIN
a[15] => out[16].DATAIN
a[16] => out[17].DATAIN
a[17] => out[18].DATAIN
a[18] => out[19].DATAIN
a[19] => out[20].DATAIN
a[20] => out[21].DATAIN
a[21] => out[22].DATAIN
a[22] => out[23].DATAIN
a[23] => out[24].DATAIN
a[24] => out[25].DATAIN
a[25] => out[26].DATAIN
a[26] => out[27].DATAIN
a[27] => out[28].DATAIN
a[28] => out[29].DATAIN
a[29] => out[30].DATAIN
a[30] => out[31].DATAIN
a[31] => ~NO_FANOUT~
out[0] <= <GND>
out[1] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[30].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|rightshifter:right
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[0] => out.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[1] => in1.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[2] => in2.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[3] => in4.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
shamt[4] => in8.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift16r:sixteen
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => ~NO_FANOUT~
a[5] => ~NO_FANOUT~
a[6] => ~NO_FANOUT~
a[7] => ~NO_FANOUT~
a[8] => ~NO_FANOUT~
a[9] => ~NO_FANOUT~
a[10] => ~NO_FANOUT~
a[11] => ~NO_FANOUT~
a[12] => ~NO_FANOUT~
a[13] => ~NO_FANOUT~
a[14] => ~NO_FANOUT~
a[15] => ~NO_FANOUT~
a[16] => out[0].DATAIN
a[17] => out[1].DATAIN
a[18] => out[2].DATAIN
a[19] => out[3].DATAIN
a[20] => out[4].DATAIN
a[21] => out[5].DATAIN
a[22] => out[6].DATAIN
a[23] => out[7].DATAIN
a[24] => out[8].DATAIN
a[25] => out[9].DATAIN
a[26] => out[10].DATAIN
a[27] => out[11].DATAIN
a[28] => out[12].DATAIN
a[29] => out[13].DATAIN
a[30] => out[14].DATAIN
a[31] => out[16].DATAIN
a[31] => out[15].DATAIN
out[0] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= <GND>
out[18] <= <GND>
out[19] <= <GND>
out[20] <= <GND>
out[21] <= <GND>
out[22] <= <GND>
out[23] <= <GND>
out[24] <= <GND>
out[25] <= <GND>
out[26] <= <GND>
out[27] <= <GND>
out[28] <= <GND>
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift8r:eight
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => ~NO_FANOUT~
a[5] => ~NO_FANOUT~
a[6] => ~NO_FANOUT~
a[7] => ~NO_FANOUT~
a[8] => out[0].DATAIN
a[9] => out[1].DATAIN
a[10] => out[2].DATAIN
a[11] => out[3].DATAIN
a[12] => out[4].DATAIN
a[13] => out[5].DATAIN
a[14] => out[6].DATAIN
a[15] => out[7].DATAIN
a[16] => out[8].DATAIN
a[17] => out[9].DATAIN
a[18] => out[10].DATAIN
a[19] => out[11].DATAIN
a[20] => out[12].DATAIN
a[21] => out[13].DATAIN
a[22] => out[14].DATAIN
a[23] => out[15].DATAIN
a[24] => out[16].DATAIN
a[25] => out[17].DATAIN
a[26] => out[18].DATAIN
a[27] => out[19].DATAIN
a[28] => out[20].DATAIN
a[29] => out[21].DATAIN
a[30] => out[22].DATAIN
a[31] => out[24].DATAIN
a[31] => out[23].DATAIN
out[0] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= <GND>
out[26] <= <GND>
out[27] <= <GND>
out[28] <= <GND>
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift4r:four
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => ~NO_FANOUT~
a[3] => ~NO_FANOUT~
a[4] => out[0].DATAIN
a[5] => out[1].DATAIN
a[6] => out[2].DATAIN
a[7] => out[3].DATAIN
a[8] => out[4].DATAIN
a[9] => out[5].DATAIN
a[10] => out[6].DATAIN
a[11] => out[7].DATAIN
a[12] => out[8].DATAIN
a[13] => out[9].DATAIN
a[14] => out[10].DATAIN
a[15] => out[11].DATAIN
a[16] => out[12].DATAIN
a[17] => out[13].DATAIN
a[18] => out[14].DATAIN
a[19] => out[15].DATAIN
a[20] => out[16].DATAIN
a[21] => out[17].DATAIN
a[22] => out[18].DATAIN
a[23] => out[19].DATAIN
a[24] => out[20].DATAIN
a[25] => out[21].DATAIN
a[26] => out[22].DATAIN
a[27] => out[23].DATAIN
a[28] => out[24].DATAIN
a[29] => out[25].DATAIN
a[30] => out[26].DATAIN
a[31] => out[28].DATAIN
a[31] => out[27].DATAIN
out[0] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift2r:two
a[0] => ~NO_FANOUT~
a[1] => ~NO_FANOUT~
a[2] => out[0].DATAIN
a[3] => out[1].DATAIN
a[4] => out[2].DATAIN
a[5] => out[3].DATAIN
a[6] => out[4].DATAIN
a[7] => out[5].DATAIN
a[8] => out[6].DATAIN
a[9] => out[7].DATAIN
a[10] => out[8].DATAIN
a[11] => out[9].DATAIN
a[12] => out[10].DATAIN
a[13] => out[11].DATAIN
a[14] => out[12].DATAIN
a[15] => out[13].DATAIN
a[16] => out[14].DATAIN
a[17] => out[15].DATAIN
a[18] => out[16].DATAIN
a[19] => out[17].DATAIN
a[20] => out[18].DATAIN
a[21] => out[19].DATAIN
a[22] => out[20].DATAIN
a[23] => out[21].DATAIN
a[24] => out[22].DATAIN
a[25] => out[23].DATAIN
a[26] => out[24].DATAIN
a[27] => out[25].DATAIN
a[28] => out[26].DATAIN
a[29] => out[27].DATAIN
a[30] => out[28].DATAIN
a[31] => out[30].DATAIN
a[31] => out[29].DATAIN
out[0] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= <GND>


|processor|execute:executeInsn|alu:myALU|rightshifter:right|shift1r:one
a[0] => ~NO_FANOUT~
a[1] => out[0].DATAIN
a[2] => out[1].DATAIN
a[3] => out[2].DATAIN
a[4] => out[3].DATAIN
a[5] => out[4].DATAIN
a[6] => out[5].DATAIN
a[7] => out[6].DATAIN
a[8] => out[7].DATAIN
a[9] => out[8].DATAIN
a[10] => out[9].DATAIN
a[11] => out[10].DATAIN
a[12] => out[11].DATAIN
a[13] => out[12].DATAIN
a[14] => out[13].DATAIN
a[15] => out[14].DATAIN
a[16] => out[15].DATAIN
a[17] => out[16].DATAIN
a[18] => out[17].DATAIN
a[19] => out[18].DATAIN
a[20] => out[19].DATAIN
a[21] => out[20].DATAIN
a[22] => out[21].DATAIN
a[23] => out[22].DATAIN
a[24] => out[23].DATAIN
a[25] => out[24].DATAIN
a[26] => out[25].DATAIN
a[27] => out[26].DATAIN
a[28] => out[27].DATAIN
a[29] => out[28].DATAIN
a[30] => out[29].DATAIN
a[31] => out[31].DATAIN
a[31] => out[30].DATAIN
out[0] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= a[8].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= a[9].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= a[10].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= a[11].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= a[12].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= a[13].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= a[14].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= a[15].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= a[16].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= a[17].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= a[18].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= a[19].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= a[20].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= a[21].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= a[22].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= a[23].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= a[24].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= a[25].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= a[26].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= a[27].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= a[28].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= a[29].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= a[30].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= a[31].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= a[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|alu:myALU|nequalityChecker:neq
a[0] => equalCheck[0].checker.IN0
a[1] => equalCheck[1].checker.IN0
a[2] => equalCheck[2].checker.IN0
a[3] => equalCheck[3].checker.IN0
a[4] => equalCheck[4].checker.IN0
a[5] => equalCheck[5].checker.IN0
a[6] => equalCheck[6].checker.IN0
a[7] => equalCheck[7].checker.IN0
a[8] => equalCheck[8].checker.IN0
a[9] => equalCheck[9].checker.IN0
a[10] => equalCheck[10].checker.IN0
a[11] => equalCheck[11].checker.IN0
a[12] => equalCheck[12].checker.IN0
a[13] => equalCheck[13].checker.IN0
a[14] => equalCheck[14].checker.IN0
a[15] => equalCheck[15].checker.IN0
a[16] => equalCheck[16].checker.IN0
a[17] => equalCheck[17].checker.IN0
a[18] => equalCheck[18].checker.IN0
a[19] => equalCheck[19].checker.IN0
a[20] => equalCheck[20].checker.IN0
a[21] => equalCheck[21].checker.IN0
a[22] => equalCheck[22].checker.IN0
a[23] => equalCheck[23].checker.IN0
a[24] => equalCheck[24].checker.IN0
a[25] => equalCheck[25].checker.IN0
a[26] => equalCheck[26].checker.IN0
a[27] => equalCheck[27].checker.IN0
a[28] => equalCheck[28].checker.IN0
a[29] => equalCheck[29].checker.IN0
a[30] => equalCheck[30].checker.IN0
a[31] => equalCheck[31].checker.IN0
b[0] => equalCheck[0].checker.IN1
b[1] => equalCheck[1].checker.IN1
b[2] => equalCheck[2].checker.IN1
b[3] => equalCheck[3].checker.IN1
b[4] => equalCheck[4].checker.IN1
b[5] => equalCheck[5].checker.IN1
b[6] => equalCheck[6].checker.IN1
b[7] => equalCheck[7].checker.IN1
b[8] => equalCheck[8].checker.IN1
b[9] => equalCheck[9].checker.IN1
b[10] => equalCheck[10].checker.IN1
b[11] => equalCheck[11].checker.IN1
b[12] => equalCheck[12].checker.IN1
b[13] => equalCheck[13].checker.IN1
b[14] => equalCheck[14].checker.IN1
b[15] => equalCheck[15].checker.IN1
b[16] => equalCheck[16].checker.IN1
b[17] => equalCheck[17].checker.IN1
b[18] => equalCheck[18].checker.IN1
b[19] => equalCheck[19].checker.IN1
b[20] => equalCheck[20].checker.IN1
b[21] => equalCheck[21].checker.IN1
b[22] => equalCheck[22].checker.IN1
b[23] => equalCheck[23].checker.IN1
b[24] => equalCheck[24].checker.IN1
b[25] => equalCheck[25].checker.IN1
b[26] => equalCheck[26].checker.IN1
b[27] => equalCheck[27].checker.IN1
b[28] => equalCheck[28].checker.IN1
b[29] => equalCheck[29].checker.IN1
b[30] => equalCheck[30].checker.IN1
b[31] => equalCheck[31].checker.IN1
notEqual <= equality10.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv
data_operandA[0] => data_operandA[0].IN2
data_operandA[1] => data_operandA[1].IN2
data_operandA[2] => data_operandA[2].IN2
data_operandA[3] => data_operandA[3].IN2
data_operandA[4] => data_operandA[4].IN2
data_operandA[5] => data_operandA[5].IN2
data_operandA[6] => data_operandA[6].IN2
data_operandA[7] => data_operandA[7].IN2
data_operandA[8] => data_operandA[8].IN2
data_operandA[9] => data_operandA[9].IN2
data_operandA[10] => data_operandA[10].IN2
data_operandA[11] => data_operandA[11].IN2
data_operandA[12] => data_operandA[12].IN2
data_operandA[13] => data_operandA[13].IN2
data_operandA[14] => data_operandA[14].IN2
data_operandA[15] => data_operandA[15].IN2
data_operandA[16] => data_operandA[16].IN2
data_operandA[17] => data_operandA[17].IN2
data_operandA[18] => data_operandA[18].IN2
data_operandA[19] => data_operandA[19].IN2
data_operandA[20] => data_operandA[20].IN2
data_operandA[21] => data_operandA[21].IN2
data_operandA[22] => data_operandA[22].IN2
data_operandA[23] => data_operandA[23].IN2
data_operandA[24] => data_operandA[24].IN2
data_operandA[25] => data_operandA[25].IN2
data_operandA[26] => data_operandA[26].IN2
data_operandA[27] => data_operandA[27].IN2
data_operandA[28] => data_operandA[28].IN2
data_operandA[29] => data_operandA[29].IN2
data_operandA[30] => data_operandA[30].IN2
data_operandA[31] => data_operandA[31].IN2
data_operandB[0] => data_operandB[0].IN2
data_operandB[1] => data_operandB[1].IN2
data_operandB[2] => data_operandB[2].IN2
data_operandB[3] => data_operandB[3].IN2
data_operandB[4] => data_operandB[4].IN2
data_operandB[5] => data_operandB[5].IN2
data_operandB[6] => data_operandB[6].IN2
data_operandB[7] => data_operandB[7].IN2
data_operandB[8] => data_operandB[8].IN2
data_operandB[9] => data_operandB[9].IN2
data_operandB[10] => data_operandB[10].IN2
data_operandB[11] => data_operandB[11].IN2
data_operandB[12] => data_operandB[12].IN2
data_operandB[13] => data_operandB[13].IN2
data_operandB[14] => data_operandB[14].IN2
data_operandB[15] => data_operandB[15].IN2
data_operandB[16] => data_operandB[16].IN2
data_operandB[17] => data_operandB[17].IN2
data_operandB[18] => data_operandB[18].IN2
data_operandB[19] => data_operandB[19].IN2
data_operandB[20] => data_operandB[20].IN2
data_operandB[21] => data_operandB[21].IN2
data_operandB[22] => data_operandB[22].IN2
data_operandB[23] => data_operandB[23].IN2
data_operandB[24] => data_operandB[24].IN2
data_operandB[25] => data_operandB[25].IN2
data_operandB[26] => data_operandB[26].IN2
data_operandB[27] => data_operandB[27].IN2
data_operandB[28] => data_operandB[28].IN2
data_operandB[29] => data_operandB[29].IN2
data_operandB[30] => data_operandB[30].IN2
data_operandB[31] => data_operandB[31].IN2
ctrl_MULT => ctrl_MULT.IN1
ctrl_DIV => resetCondition.IN0
clock => clock.IN3
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= data_exception.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= data_resultRDY.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|ecedffe:whichOp
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth
data_operandA[0] => data_operandA[0].IN3
data_operandA[1] => data_operandA[1].IN3
data_operandA[2] => data_operandA[2].IN3
data_operandA[3] => data_operandA[3].IN3
data_operandA[4] => data_operandA[4].IN3
data_operandA[5] => data_operandA[5].IN3
data_operandA[6] => data_operandA[6].IN3
data_operandA[7] => data_operandA[7].IN3
data_operandA[8] => data_operandA[8].IN3
data_operandA[9] => data_operandA[9].IN3
data_operandA[10] => data_operandA[10].IN3
data_operandA[11] => data_operandA[11].IN3
data_operandA[12] => data_operandA[12].IN3
data_operandA[13] => data_operandA[13].IN3
data_operandA[14] => data_operandA[14].IN3
data_operandA[15] => data_operandA[15].IN3
data_operandA[16] => data_operandA[16].IN3
data_operandA[17] => data_operandA[17].IN3
data_operandA[18] => data_operandA[18].IN3
data_operandA[19] => data_operandA[19].IN3
data_operandA[20] => data_operandA[20].IN3
data_operandA[21] => data_operandA[21].IN3
data_operandA[22] => data_operandA[22].IN3
data_operandA[23] => data_operandA[23].IN3
data_operandA[24] => data_operandA[24].IN3
data_operandA[25] => data_operandA[25].IN3
data_operandA[26] => data_operandA[26].IN3
data_operandA[27] => data_operandA[27].IN3
data_operandA[28] => data_operandA[28].IN3
data_operandA[29] => data_operandA[29].IN3
data_operandA[30] => data_operandA[30].IN3
data_operandA[31] => data_operandA[31].IN3
data_operandB[0] => data_operandB[0].IN3
data_operandB[1] => data_operandB[1].IN3
data_operandB[2] => data_operandB[2].IN3
data_operandB[3] => data_operandB[3].IN3
data_operandB[4] => data_operandB[4].IN3
data_operandB[5] => data_operandB[5].IN3
data_operandB[6] => data_operandB[6].IN3
data_operandB[7] => data_operandB[7].IN3
data_operandB[8] => data_operandB[8].IN3
data_operandB[9] => data_operandB[9].IN3
data_operandB[10] => data_operandB[10].IN3
data_operandB[11] => data_operandB[11].IN3
data_operandB[12] => data_operandB[12].IN3
data_operandB[13] => data_operandB[13].IN3
data_operandB[14] => data_operandB[14].IN3
data_operandB[15] => data_operandB[15].IN3
data_operandB[16] => data_operandB[16].IN3
data_operandB[17] => data_operandB[17].IN3
data_operandB[18] => data_operandB[18].IN3
data_operandB[19] => data_operandB[19].IN3
data_operandB[20] => data_operandB[20].IN3
data_operandB[21] => data_operandB[21].IN3
data_operandB[22] => data_operandB[22].IN3
data_operandB[23] => data_operandB[23].IN3
data_operandB[24] => data_operandB[24].IN3
data_operandB[25] => data_operandB[25].IN3
data_operandB[26] => data_operandB[26].IN3
data_operandB[27] => data_operandB[27].IN3
data_operandB[28] => data_operandB[28].IN3
data_operandB[29] => data_operandB[29].IN3
data_operandB[30] => data_operandB[30].IN3
data_operandB[31] => data_operandB[31].IN3
clock => clock.IN1
res => res.IN2
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= finalException.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= highCount.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter
clock => clock.IN5
reset => Decoder0.IN0
reset => Decoder1.IN0
reset => Decoder2.IN0
reset => Decoder3.IN0
reset => Decoder4.IN0
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:dff0.q
out[1] <= ecedffe:dff1.q
out[2] <= ecedffe:dff2.q
out[3] <= ecedffe:dff3.q
out[4] <= ecedffe:dff4.q


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff0
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff1
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff2
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff3
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|counter32:counter|ecedffe:dff4
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|register:productReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|cla:adder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalZero:aZero
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalZero:bZero
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalOne:aOne
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isOne <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalOne:bOne
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isOne <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalMaxPositive:aHigh
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isMax <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|multiplier:booth|equalMaxPositive:bHigh
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isMax <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr
data_operandA[0] => data_operandA[0].IN1
data_operandA[1] => data_operandA[1].IN1
data_operandA[2] => data_operandA[2].IN1
data_operandA[3] => data_operandA[3].IN1
data_operandA[4] => data_operandA[4].IN1
data_operandA[5] => data_operandA[5].IN1
data_operandA[6] => data_operandA[6].IN1
data_operandA[7] => data_operandA[7].IN1
data_operandA[8] => data_operandA[8].IN1
data_operandA[9] => data_operandA[9].IN1
data_operandA[10] => data_operandA[10].IN1
data_operandA[11] => data_operandA[11].IN1
data_operandA[12] => data_operandA[12].IN1
data_operandA[13] => data_operandA[13].IN1
data_operandA[14] => data_operandA[14].IN1
data_operandA[15] => data_operandA[15].IN1
data_operandA[16] => data_operandA[16].IN1
data_operandA[17] => data_operandA[17].IN1
data_operandA[18] => data_operandA[18].IN1
data_operandA[19] => data_operandA[19].IN1
data_operandA[20] => data_operandA[20].IN1
data_operandA[21] => data_operandA[21].IN1
data_operandA[22] => data_operandA[22].IN1
data_operandA[23] => data_operandA[23].IN1
data_operandA[24] => data_operandA[24].IN1
data_operandA[25] => data_operandA[25].IN1
data_operandA[26] => data_operandA[26].IN1
data_operandA[27] => data_operandA[27].IN1
data_operandA[28] => data_operandA[28].IN1
data_operandA[29] => data_operandA[29].IN1
data_operandA[30] => data_operandA[30].IN1
data_operandA[31] => data_operandA[31].IN1
data_operandB[0] => data_operandB[0].IN2
data_operandB[1] => data_operandB[1].IN2
data_operandB[2] => data_operandB[2].IN2
data_operandB[3] => data_operandB[3].IN2
data_operandB[4] => data_operandB[4].IN2
data_operandB[5] => data_operandB[5].IN2
data_operandB[6] => data_operandB[6].IN2
data_operandB[7] => data_operandB[7].IN2
data_operandB[8] => data_operandB[8].IN2
data_operandB[9] => data_operandB[9].IN2
data_operandB[10] => data_operandB[10].IN2
data_operandB[11] => data_operandB[11].IN2
data_operandB[12] => data_operandB[12].IN2
data_operandB[13] => data_operandB[13].IN2
data_operandB[14] => data_operandB[14].IN2
data_operandB[15] => data_operandB[15].IN2
data_operandB[16] => data_operandB[16].IN2
data_operandB[17] => data_operandB[17].IN2
data_operandB[18] => data_operandB[18].IN2
data_operandB[19] => data_operandB[19].IN2
data_operandB[20] => data_operandB[20].IN2
data_operandB[21] => data_operandB[21].IN2
data_operandB[22] => data_operandB[22].IN2
data_operandB[23] => data_operandB[23].IN2
data_operandB[24] => data_operandB[24].IN2
data_operandB[25] => data_operandB[25].IN2
data_operandB[26] => data_operandB[26].IN2
data_operandB[27] => data_operandB[27].IN2
data_operandB[28] => data_operandB[28].IN2
data_operandB[29] => data_operandB[29].IN2
data_operandB[30] => data_operandB[30].IN2
data_operandB[31] => data_operandB[31].IN2
clock => clock.IN6
res => res.IN4
data_result[0] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[4] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[5] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[6] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[7] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[8] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[9] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[10] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[11] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[12] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[13] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[14] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[15] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[16] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[17] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[18] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[19] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[20] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[21] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[22] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[23] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[24] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[25] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[26] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[27] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[28] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[29] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[30] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_result[31] <= data_result.DB_MAX_OUTPUT_PORT_TYPE
data_exception <= overflow.DB_MAX_OUTPUT_PORT_TYPE
data_resultRDY <= countHigh.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:m|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:a|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|register:q|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter
clock => clock.IN6
reset => Decoder0.IN0
reset => Decoder1.IN0
reset => Decoder2.IN0
reset => Decoder3.IN0
reset => Decoder4.IN0
reset => Decoder5.IN0
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:dff0.q
out[1] <= ecedffe:dff1.q
out[2] <= ecedffe:dff2.q
out[3] <= ecedffe:dff3.q
out[4] <= ecedffe:dff4.q
out[5] <= ecedffe:dff5.q


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff0
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff1
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff2
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff3
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff4
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|counter34:counter|ecedffe:dff5
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1
a[0] => filledA[1].IN1
a[1] => filledA[2].IN1
a[2] => filledA[3].IN1
a[3] => filledA[4].IN1
a[4] => filledA[5].IN1
a[5] => filledA[6].IN1
a[6] => filledA[7].IN1
a[7] => filledA[8].IN1
a[8] => filledA[9].IN1
a[9] => filledA[10].IN1
a[10] => filledA[11].IN1
a[11] => filledA[12].IN1
a[12] => filledA[13].IN1
a[13] => filledA[14].IN1
a[14] => filledA[15].IN1
a[15] => filledA[16].IN1
a[16] => filledA[17].IN1
a[17] => filledA[18].IN1
a[18] => filledA[19].IN1
a[19] => filledA[20].IN1
a[20] => filledA[21].IN1
a[21] => filledA[22].IN1
a[22] => filledA[23].IN1
a[23] => filledA[24].IN1
a[24] => filledA[25].IN1
a[25] => filledA[26].IN1
a[26] => filledA[27].IN1
a[27] => filledA[28].IN1
a[28] => filledA[29].IN1
a[29] => filledA[30].IN1
a[30] => filledA[31].IN1
a[31] => ~NO_FANOUT~
m[0] => m[0].IN1
m[1] => m[1].IN1
m[2] => m[2].IN1
m[3] => m[3].IN1
m[4] => m[4].IN1
m[5] => m[5].IN1
m[6] => m[6].IN1
m[7] => m[7].IN1
m[8] => m[8].IN1
m[9] => m[9].IN1
m[10] => m[10].IN1
m[11] => m[11].IN1
m[12] => m[12].IN1
m[13] => m[13].IN1
m[14] => m[14].IN1
m[15] => m[15].IN1
m[16] => m[16].IN1
m[17] => m[17].IN1
m[18] => m[18].IN1
m[19] => m[19].IN1
m[20] => m[20].IN1
m[21] => m[21].IN1
m[22] => m[22].IN1
m[23] => m[23].IN1
m[24] => m[24].IN1
m[25] => m[25].IN1
m[26] => m[26].IN1
m[27] => m[27].IN1
m[28] => m[28].IN1
m[29] => m[29].IN1
m[30] => m[30].IN1
m[31] => m[31].IN1
q[0] => newQ[1].DATAIN
q[1] => newQ[2].DATAIN
q[2] => newQ[3].DATAIN
q[3] => newQ[4].DATAIN
q[4] => newQ[5].DATAIN
q[5] => newQ[6].DATAIN
q[6] => newQ[7].DATAIN
q[7] => newQ[8].DATAIN
q[8] => newQ[9].DATAIN
q[9] => newQ[10].DATAIN
q[10] => newQ[11].DATAIN
q[11] => newQ[12].DATAIN
q[12] => newQ[13].DATAIN
q[13] => newQ[14].DATAIN
q[14] => newQ[15].DATAIN
q[15] => newQ[16].DATAIN
q[16] => newQ[17].DATAIN
q[17] => newQ[18].DATAIN
q[18] => newQ[19].DATAIN
q[19] => newQ[20].DATAIN
q[20] => newQ[21].DATAIN
q[21] => newQ[22].DATAIN
q[22] => newQ[23].DATAIN
q[23] => newQ[24].DATAIN
q[24] => newQ[25].DATAIN
q[25] => newQ[26].DATAIN
q[26] => newQ[27].DATAIN
q[27] => newQ[28].DATAIN
q[28] => newQ[29].DATAIN
q[29] => newQ[30].DATAIN
q[30] => newQ[31].DATAIN
q[31] => filledA[0].IN1
newA[0] <= cla:opAdder.sum
newA[1] <= cla:opAdder.sum
newA[2] <= cla:opAdder.sum
newA[3] <= cla:opAdder.sum
newA[4] <= cla:opAdder.sum
newA[5] <= cla:opAdder.sum
newA[6] <= cla:opAdder.sum
newA[7] <= cla:opAdder.sum
newA[8] <= cla:opAdder.sum
newA[9] <= cla:opAdder.sum
newA[10] <= cla:opAdder.sum
newA[11] <= cla:opAdder.sum
newA[12] <= cla:opAdder.sum
newA[13] <= cla:opAdder.sum
newA[14] <= cla:opAdder.sum
newA[15] <= cla:opAdder.sum
newA[16] <= cla:opAdder.sum
newA[17] <= cla:opAdder.sum
newA[18] <= cla:opAdder.sum
newA[19] <= cla:opAdder.sum
newA[20] <= cla:opAdder.sum
newA[21] <= cla:opAdder.sum
newA[22] <= cla:opAdder.sum
newA[23] <= cla:opAdder.sum
newA[24] <= cla:opAdder.sum
newA[25] <= cla:opAdder.sum
newA[26] <= cla:opAdder.sum
newA[27] <= cla:opAdder.sum
newA[28] <= cla:opAdder.sum
newA[29] <= cla:opAdder.sum
newA[30] <= cla:opAdder.sum
newA[31] <= cla:opAdder.sum
newQ[0] <= cla:opAdder.sum
newQ[1] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
newQ[2] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
newQ[3] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
newQ[4] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
newQ[5] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
newQ[6] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
newQ[7] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
newQ[8] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
newQ[9] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
newQ[10] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
newQ[11] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
newQ[12] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
newQ[13] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
newQ[14] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
newQ[15] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
newQ[16] <= q[15].DB_MAX_OUTPUT_PORT_TYPE
newQ[17] <= q[16].DB_MAX_OUTPUT_PORT_TYPE
newQ[18] <= q[17].DB_MAX_OUTPUT_PORT_TYPE
newQ[19] <= q[18].DB_MAX_OUTPUT_PORT_TYPE
newQ[20] <= q[19].DB_MAX_OUTPUT_PORT_TYPE
newQ[21] <= q[20].DB_MAX_OUTPUT_PORT_TYPE
newQ[22] <= q[21].DB_MAX_OUTPUT_PORT_TYPE
newQ[23] <= q[22].DB_MAX_OUTPUT_PORT_TYPE
newQ[24] <= q[23].DB_MAX_OUTPUT_PORT_TYPE
newQ[25] <= q[24].DB_MAX_OUTPUT_PORT_TYPE
newQ[26] <= q[25].DB_MAX_OUTPUT_PORT_TYPE
newQ[27] <= q[26].DB_MAX_OUTPUT_PORT_TYPE
newQ[28] <= q[27].DB_MAX_OUTPUT_PORT_TYPE
newQ[29] <= q[28].DB_MAX_OUTPUT_PORT_TYPE
newQ[30] <= q[29].DB_MAX_OUTPUT_PORT_TYPE
newQ[31] <= q[30].DB_MAX_OUTPUT_PORT_TYPE
error <= cla:opAdder.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|divisionOp:stage1|cla:opAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
m[0] => m[0].IN1
m[1] => m[1].IN1
m[2] => m[2].IN1
m[3] => m[3].IN1
m[4] => m[4].IN1
m[5] => m[5].IN1
m[6] => m[6].IN1
m[7] => m[7].IN1
m[8] => m[8].IN1
m[9] => m[9].IN1
m[10] => m[10].IN1
m[11] => m[11].IN1
m[12] => m[12].IN1
m[13] => m[13].IN1
m[14] => m[14].IN1
m[15] => m[15].IN1
m[16] => m[16].IN1
m[17] => m[17].IN1
m[18] => m[18].IN1
m[19] => m[19].IN1
m[20] => m[20].IN1
m[21] => m[21].IN1
m[22] => m[22].IN1
m[23] => m[23].IN1
m[24] => m[24].IN1
m[25] => m[25].IN1
m[26] => m[26].IN1
m[27] => m[27].IN1
m[28] => m[28].IN1
m[29] => m[29].IN1
m[30] => m[30].IN1
m[31] => m[31].IN1
newA[0] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[1] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[2] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[3] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[4] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[5] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[6] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[7] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[8] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[9] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[10] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[11] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[12] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[13] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[14] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[15] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[16] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[17] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[18] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[19] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[20] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[21] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[22] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[23] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[24] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[25] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[26] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[27] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[28] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[29] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[30] <= newA.DB_MAX_OUTPUT_PORT_TYPE
newA[31] <= newA.DB_MAX_OUTPUT_PORT_TYPE
error <= cla:restoreAdd.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|exitOp:onExit|cla:restoreAdd|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:bNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:aNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
aBar[0] <= cla:negateAdder.sum
aBar[1] <= cla:negateAdder.sum
aBar[2] <= cla:negateAdder.sum
aBar[3] <= cla:negateAdder.sum
aBar[4] <= cla:negateAdder.sum
aBar[5] <= cla:negateAdder.sum
aBar[6] <= cla:negateAdder.sum
aBar[7] <= cla:negateAdder.sum
aBar[8] <= cla:negateAdder.sum
aBar[9] <= cla:negateAdder.sum
aBar[10] <= cla:negateAdder.sum
aBar[11] <= cla:negateAdder.sum
aBar[12] <= cla:negateAdder.sum
aBar[13] <= cla:negateAdder.sum
aBar[14] <= cla:negateAdder.sum
aBar[15] <= cla:negateAdder.sum
aBar[16] <= cla:negateAdder.sum
aBar[17] <= cla:negateAdder.sum
aBar[18] <= cla:negateAdder.sum
aBar[19] <= cla:negateAdder.sum
aBar[20] <= cla:negateAdder.sum
aBar[21] <= cla:negateAdder.sum
aBar[22] <= cla:negateAdder.sum
aBar[23] <= cla:negateAdder.sum
aBar[24] <= cla:negateAdder.sum
aBar[25] <= cla:negateAdder.sum
aBar[26] <= cla:negateAdder.sum
aBar[27] <= cla:negateAdder.sum
aBar[28] <= cla:negateAdder.sum
aBar[29] <= cla:negateAdder.sum
aBar[30] <= cla:negateAdder.sum
aBar[31] <= cla:negateAdder.sum


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|negater:resultNegater|cla:negateAdder|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|ecedffe:negateResult
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|equalZero:zeroCheck
a[0] => set0.IN0
a[1] => set0.IN1
a[2] => set0.IN2
a[3] => set0.IN3
a[4] => set1.IN0
a[5] => set1.IN1
a[6] => set1.IN2
a[7] => set1.IN3
a[8] => set2.IN0
a[9] => set2.IN1
a[10] => set2.IN2
a[11] => set2.IN3
a[12] => set3.IN0
a[13] => set3.IN1
a[14] => set3.IN2
a[15] => set3.IN3
a[16] => set4.IN0
a[17] => set4.IN1
a[18] => set4.IN2
a[19] => set4.IN3
a[20] => set5.IN0
a[21] => set5.IN1
a[22] => set5.IN2
a[23] => set5.IN3
a[24] => set6.IN0
a[25] => set6.IN1
a[26] => set6.IN2
a[27] => set6.IN3
a[28] => set7.IN0
a[29] => set7.IN1
a[30] => set7.IN2
a[31] => set7.IN3
isZero <= check.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|multdiv:myMultDiv|divider:nonRestr|ecedffe:divZero
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|execute:executeInsn|mux4to1:execOut
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken[0].DATAIN
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[0] => branchTaken.IN0
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken[1].DATAIN
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
branchCtrl[1] => branchTaken.IN1
jumpCtrl[0] => jumpCtrl[0].IN1
jumpCtrl[1] => jumpCtrl[1].IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsNotEqual => branchTaken.IN1
argsLessThan => branchTaken.IN1
argsLessThan => branchTaken.IN1
pc[0] => pc[0].IN2
pc[1] => pc[1].IN2
pc[2] => pc[2].IN2
pc[3] => pc[3].IN2
pc[4] => pc[4].IN2
pc[5] => pc[5].IN2
pc[6] => pc[6].IN2
pc[7] => pc[7].IN2
pc[8] => pc[8].IN2
pc[9] => pc[9].IN2
pc[10] => pc[10].IN2
pc[11] => pc[11].IN2
pc[12] => pc[12].IN2
pc[13] => pc[13].IN2
pc[14] => pc[14].IN2
pc[15] => pc[15].IN2
pc[16] => pc[16].IN2
pc[17] => pc[17].IN2
pc[18] => pc[18].IN2
pc[19] => pc[19].IN2
pc[20] => pc[20].IN2
pc[21] => pc[21].IN2
pc[22] => pc[22].IN2
pc[23] => pc[23].IN2
pc[24] => pc[24].IN2
pc[25] => pc[25].IN2
pc[26] => pc[26].IN2
pc[27] => pc[27].IN2
pc[28] => pc[28].IN2
pc[29] => pc[29].IN2
pc[30] => pc[30].IN2
pc[31] => pc[31].IN2
imm[0] => imm[0].IN1
imm[1] => imm[1].IN1
imm[2] => imm[2].IN1
imm[3] => imm[3].IN1
imm[4] => imm[4].IN1
imm[5] => imm[5].IN1
imm[6] => imm[6].IN1
imm[7] => imm[7].IN1
imm[8] => imm[8].IN1
imm[9] => imm[9].IN1
imm[10] => imm[10].IN1
imm[11] => imm[11].IN1
imm[12] => imm[12].IN1
imm[13] => imm[13].IN1
imm[14] => imm[14].IN1
imm[15] => imm[15].IN1
imm[16] => imm[16].IN1
imm[17] => imm[17].IN1
imm[18] => imm[18].IN1
imm[19] => imm[19].IN1
imm[20] => imm[20].IN1
imm[21] => imm[21].IN1
imm[22] => imm[22].IN1
imm[23] => imm[23].IN1
imm[24] => imm[24].IN1
imm[25] => imm[25].IN1
imm[26] => imm[26].IN1
imm[27] => imm[27].IN1
imm[28] => imm[28].IN1
imm[29] => imm[29].IN1
imm[30] => imm[30].IN1
imm[31] => imm[31].IN1
target[0] => target[0].IN3
target[1] => target[1].IN3
target[2] => target[2].IN3
target[3] => target[3].IN3
target[4] => target[4].IN3
target[5] => target[5].IN3
target[6] => target[6].IN3
target[7] => target[7].IN3
target[8] => target[8].IN3
target[9] => target[9].IN3
target[10] => target[10].IN3
target[11] => target[11].IN3
target[12] => target[12].IN3
target[13] => target[13].IN3
target[14] => target[14].IN3
target[15] => target[15].IN3
target[16] => target[16].IN3
target[17] => target[17].IN3
target[18] => target[18].IN3
target[19] => target[19].IN3
target[20] => target[20].IN3
target[21] => target[21].IN3
target[22] => target[22].IN3
target[23] => target[23].IN3
target[24] => target[24].IN3
target[25] => target[25].IN3
target[26] => target[26].IN3
target[27] => target[27].IN3
target[28] => target[28].IN3
target[29] => target[29].IN3
target[30] => target[30].IN3
target[31] => target[31].IN3
regBVal[0] => regBVal[0].IN1
regBVal[1] => regBVal[1].IN1
regBVal[2] => regBVal[2].IN1
regBVal[3] => regBVal[3].IN1
regBVal[4] => regBVal[4].IN1
regBVal[5] => regBVal[5].IN1
regBVal[6] => regBVal[6].IN1
regBVal[7] => regBVal[7].IN1
regBVal[8] => regBVal[8].IN1
regBVal[9] => regBVal[9].IN1
regBVal[10] => regBVal[10].IN1
regBVal[11] => regBVal[11].IN1
regBVal[12] => regBVal[12].IN1
regBVal[13] => regBVal[13].IN1
regBVal[14] => regBVal[14].IN1
regBVal[15] => regBVal[15].IN1
regBVal[16] => regBVal[16].IN1
regBVal[17] => regBVal[17].IN1
regBVal[18] => regBVal[18].IN1
regBVal[19] => regBVal[19].IN1
regBVal[20] => regBVal[20].IN1
regBVal[21] => regBVal[21].IN1
regBVal[22] => regBVal[22].IN1
regBVal[23] => regBVal[23].IN1
regBVal[24] => regBVal[24].IN1
regBVal[25] => regBVal[25].IN1
regBVal[26] => regBVal[26].IN1
regBVal[27] => regBVal[27].IN1
regBVal[28] => regBVal[28].IN1
regBVal[29] => regBVal[29].IN1
regBVal[30] => regBVal[30].IN1
regBVal[31] => regBVal[31].IN1
nextPC[0] <= mux4to1:jumpMux.out
nextPC[1] <= mux4to1:jumpMux.out
nextPC[2] <= mux4to1:jumpMux.out
nextPC[3] <= mux4to1:jumpMux.out
nextPC[4] <= mux4to1:jumpMux.out
nextPC[5] <= mux4to1:jumpMux.out
nextPC[6] <= mux4to1:jumpMux.out
nextPC[7] <= mux4to1:jumpMux.out
nextPC[8] <= mux4to1:jumpMux.out
nextPC[9] <= mux4to1:jumpMux.out
nextPC[10] <= mux4to1:jumpMux.out
nextPC[11] <= mux4to1:jumpMux.out
nextPC[12] <= mux4to1:jumpMux.out
nextPC[13] <= mux4to1:jumpMux.out
nextPC[14] <= mux4to1:jumpMux.out
nextPC[15] <= mux4to1:jumpMux.out
nextPC[16] <= mux4to1:jumpMux.out
nextPC[17] <= mux4to1:jumpMux.out
nextPC[18] <= mux4to1:jumpMux.out
nextPC[19] <= mux4to1:jumpMux.out
nextPC[20] <= mux4to1:jumpMux.out
nextPC[21] <= mux4to1:jumpMux.out
nextPC[22] <= mux4to1:jumpMux.out
nextPC[23] <= mux4to1:jumpMux.out
nextPC[24] <= mux4to1:jumpMux.out
nextPC[25] <= mux4to1:jumpMux.out
nextPC[26] <= mux4to1:jumpMux.out
nextPC[27] <= mux4to1:jumpMux.out
nextPC[28] <= mux4to1:jumpMux.out
nextPC[29] <= mux4to1:jumpMux.out
nextPC[30] <= mux4to1:jumpMux.out
nextPC[31] <= mux4to1:jumpMux.out
pcOverride <= pcOverride.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => bArg.DATAA
b[0] => bArg.DATAB
b[1] => bArg.DATAA
b[1] => bArg.DATAB
b[2] => bArg.DATAA
b[2] => bArg.DATAB
b[3] => bArg.DATAA
b[3] => bArg.DATAB
b[4] => bArg.DATAA
b[4] => bArg.DATAB
b[5] => bArg.DATAA
b[5] => bArg.DATAB
b[6] => bArg.DATAA
b[6] => bArg.DATAB
b[7] => bArg.DATAA
b[7] => bArg.DATAB
b[8] => bArg.DATAA
b[8] => bArg.DATAB
b[9] => bArg.DATAA
b[9] => bArg.DATAB
b[10] => bArg.DATAA
b[10] => bArg.DATAB
b[11] => bArg.DATAA
b[11] => bArg.DATAB
b[12] => bArg.DATAA
b[12] => bArg.DATAB
b[13] => bArg.DATAA
b[13] => bArg.DATAB
b[14] => bArg.DATAA
b[14] => bArg.DATAB
b[15] => bArg.DATAA
b[15] => bArg.DATAB
b[16] => bArg.DATAA
b[16] => bArg.DATAB
b[17] => bArg.DATAA
b[17] => bArg.DATAB
b[18] => bArg.DATAA
b[18] => bArg.DATAB
b[19] => bArg.DATAA
b[19] => bArg.DATAB
b[20] => bArg.DATAA
b[20] => bArg.DATAB
b[21] => bArg.DATAA
b[21] => bArg.DATAB
b[22] => bArg.DATAA
b[22] => bArg.DATAB
b[23] => bArg.DATAA
b[23] => bArg.DATAB
b[24] => bArg.DATAA
b[24] => bArg.DATAB
b[25] => bArg.DATAA
b[25] => bArg.DATAB
b[26] => bArg.DATAA
b[26] => bArg.DATAB
b[27] => bArg.DATAA
b[27] => bArg.DATAB
b[28] => bArg.DATAA
b[28] => bArg.DATAB
b[29] => bArg.DATAA
b[29] => bArg.DATAB
b[30] => bArg.DATAA
b[30] => bArg.DATAB
b[31] => bArg.DATAA
b[31] => bArg.DATAB
sub => sub.IN2
sum[0] <= blockL1:block0.s
sum[1] <= blockL1:block0.s
sum[2] <= blockL1:block0.s
sum[3] <= blockL1:block0.s
sum[4] <= blockL1:block0.s
sum[5] <= blockL1:block0.s
sum[6] <= blockL1:block0.s
sum[7] <= blockL1:block0.s
sum[8] <= blockL1:block0.s
sum[9] <= blockL1:block0.s
sum[10] <= blockL1:block0.s
sum[11] <= blockL1:block0.s
sum[12] <= blockL1:block0.s
sum[13] <= blockL1:block0.s
sum[14] <= blockL1:block0.s
sum[15] <= blockL1:block0.s
sum[16] <= blockL1:block1.s
sum[17] <= blockL1:block1.s
sum[18] <= blockL1:block1.s
sum[19] <= blockL1:block1.s
sum[20] <= blockL1:block1.s
sum[21] <= blockL1:block1.s
sum[22] <= blockL1:block1.s
sum[23] <= blockL1:block1.s
sum[24] <= blockL1:block1.s
sum[25] <= blockL1:block1.s
sum[26] <= blockL1:block1.s
sum[27] <= blockL1:block1.s
sum[28] <= blockL1:block1.s
sum[29] <= blockL1:block1.s
sum[30] <= blockL1:block1.s
sum[31] <= blockL1:block1.s
ovf <= blockL1:block1.ovf
lessThan <= lessThan.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block0|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
cin => cin.IN4
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= blockL0:claLoop[0].block.s
s[1] <= blockL0:claLoop[0].block.s
s[2] <= blockL0:claLoop[0].block.s
s[3] <= blockL0:claLoop[0].block.s
s[4] <= blockL0:claLoop[1].block.s
s[5] <= blockL0:claLoop[1].block.s
s[6] <= blockL0:claLoop[1].block.s
s[7] <= blockL0:claLoop[1].block.s
s[8] <= blockL0:claLoop[2].block.s
s[9] <= blockL0:claLoop[2].block.s
s[10] <= blockL0:claLoop[2].block.s
s[11] <= blockL0:claLoop[2].block.s
s[12] <= blockL0:claLoop[3].block.s
s[13] <= blockL0:claLoop[3].block.s
s[14] <= blockL0:claLoop[3].block.s
s[15] <= blockL0:claLoop[3].block.s
ovf <= blockL0:claLoop[3].block.ovf


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[0].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[1].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[2].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN5
g <= gOut3.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE
s[0] <= oneBit:oneCLALoop[0].oneCLA.s
s[1] <= oneBit:oneCLALoop[1].oneCLA.s
s[2] <= oneBit:oneCLALoop[2].oneCLA.s
s[3] <= oneBit:oneCLALoop[3].oneCLA.s
ovf <= comb.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic1:carry1
gVals => predOr1.IN1
pVals => predAnd1.IN0
cin => predAnd1.IN1
cout <= predOr1.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic2:carry2
gVals[0] => predAnd2_0.IN0
gVals[1] => predOr2.IN2
pVals[0] => predAnd2_1.IN0
pVals[1] => predAnd2_0.IN1
pVals[1] => predAnd2_1.IN1
cin => predAnd2_1.IN2
cout <= predOr2.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic3:carry3
gVals[0] => predAnd3_1.IN0
gVals[1] => predAnd3_0.IN0
gVals[2] => predOr3.IN3
pVals[0] => predAnd3_2.IN0
pVals[1] => predAnd3_1.IN1
pVals[1] => predAnd3_2.IN1
pVals[2] => predAnd3_0.IN1
pVals[2] => predAnd3_1.IN2
pVals[2] => predAnd3_2.IN2
cin => predAnd3_2.IN3
cout <= predOr3.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|logic4:carry4
gVals[0] => predAnd4_2.IN0
gVals[1] => predAnd4_1.IN0
gVals[2] => predAnd4_0.IN0
gVals[3] => predOr4.IN4
pVals[0] => predAnd4_3.IN0
pVals[1] => predAnd4_2.IN1
pVals[1] => predAnd4_3.IN1
pVals[2] => predAnd4_1.IN1
pVals[2] => predAnd4_2.IN2
pVals[2] => predAnd4_3.IN2
pVals[3] => predAnd4_0.IN1
pVals[3] => predAnd4_1.IN2
pVals[3] => predAnd4_2.IN3
pVals[3] => predAnd4_3.IN3
cin => predAnd4_3.IN4
cout <= predOr4.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[0].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[1].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[2].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|cla:addBranch|blockL1:block1|blockL0:claLoop[3].block|oneBit:oneCLALoop[3].oneCLA
a => WideXor0.IN0
a => gOut.IN0
a => pIn.IN0
b => WideXor0.IN1
b => gOut.IN1
b => pIn.IN1
cin => WideXor0.IN2
cin => pOut.IN1
s <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
g <= gOut.DB_MAX_OUTPUT_PORT_TYPE
p <= pOut.DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|mux4to1:branchMux
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|branchLogic:branchHandler|mux4to1:jumpMux
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in0[5] => out[5].DATAIN
in0[6] => out[6].DATAIN
in0[7] => out[7].DATAIN
in0[8] => out[8].DATAIN
in0[9] => out[9].DATAIN
in0[10] => out[10].DATAIN
in0[11] => out[11].DATAIN
in0[12] => out[12].DATAIN
in0[13] => out[13].DATAIN
in0[14] => out[14].DATAIN
in0[15] => out[15].DATAIN
in0[16] => out[16].DATAIN
in0[17] => out[17].DATAIN
in0[18] => out[18].DATAIN
in0[19] => out[19].DATAIN
in0[20] => out[20].DATAIN
in0[21] => out[21].DATAIN
in0[22] => out[22].DATAIN
in0[23] => out[23].DATAIN
in0[24] => out[24].DATAIN
in0[25] => out[25].DATAIN
in0[26] => out[26].DATAIN
in0[27] => out[27].DATAIN
in0[28] => out[28].DATAIN
in0[29] => out[29].DATAIN
in0[30] => out[30].DATAIN
in0[31] => out[31].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in1[5] => out[5].DATAIN
in1[6] => out[6].DATAIN
in1[7] => out[7].DATAIN
in1[8] => out[8].DATAIN
in1[9] => out[9].DATAIN
in1[10] => out[10].DATAIN
in1[11] => out[11].DATAIN
in1[12] => out[12].DATAIN
in1[13] => out[13].DATAIN
in1[14] => out[14].DATAIN
in1[15] => out[15].DATAIN
in1[16] => out[16].DATAIN
in1[17] => out[17].DATAIN
in1[18] => out[18].DATAIN
in1[19] => out[19].DATAIN
in1[20] => out[20].DATAIN
in1[21] => out[21].DATAIN
in1[22] => out[22].DATAIN
in1[23] => out[23].DATAIN
in1[24] => out[24].DATAIN
in1[25] => out[25].DATAIN
in1[26] => out[26].DATAIN
in1[27] => out[27].DATAIN
in1[28] => out[28].DATAIN
in1[29] => out[29].DATAIN
in1[30] => out[30].DATAIN
in1[31] => out[31].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in2[5] => out[5].DATAIN
in2[6] => out[6].DATAIN
in2[7] => out[7].DATAIN
in2[8] => out[8].DATAIN
in2[9] => out[9].DATAIN
in2[10] => out[10].DATAIN
in2[11] => out[11].DATAIN
in2[12] => out[12].DATAIN
in2[13] => out[13].DATAIN
in2[14] => out[14].DATAIN
in2[15] => out[15].DATAIN
in2[16] => out[16].DATAIN
in2[17] => out[17].DATAIN
in2[18] => out[18].DATAIN
in2[19] => out[19].DATAIN
in2[20] => out[20].DATAIN
in2[21] => out[21].DATAIN
in2[22] => out[22].DATAIN
in2[23] => out[23].DATAIN
in2[24] => out[24].DATAIN
in2[25] => out[25].DATAIN
in2[26] => out[26].DATAIN
in2[27] => out[27].DATAIN
in2[28] => out[28].DATAIN
in2[29] => out[29].DATAIN
in2[30] => out[30].DATAIN
in2[31] => out[31].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
in3[5] => out[5].DATAIN
in3[6] => out[6].DATAIN
in3[7] => out[7].DATAIN
in3[8] => out[8].DATAIN
in3[9] => out[9].DATAIN
in3[10] => out[10].DATAIN
in3[11] => out[11].DATAIN
in3[12] => out[12].DATAIN
in3[13] => out[13].DATAIN
in3[14] => out[14].DATAIN
in3[15] => out[15].DATAIN
in3[16] => out[16].DATAIN
in3[17] => out[17].DATAIN
in3[18] => out[18].DATAIN
in3[19] => out[19].DATAIN
in3[20] => out[20].DATAIN
in3[21] => out[21].DATAIN
in3[22] => out[22].DATAIN
in3[23] => out[23].DATAIN
in3[24] => out[24].DATAIN
in3[25] => out[25].DATAIN
in3[26] => out[26].DATAIN
in3[27] => out[27].DATAIN
in3[28] => out[28].DATAIN
in3[29] => out[29].DATAIN
in3[30] => out[30].DATAIN
in3[31] => out[31].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12].DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13].DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14].DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15].DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16].DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17].DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18].DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19].DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20].DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21].DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22].DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23].DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24].DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25].DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26].DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27].DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28].DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29].DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30].DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31].DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchXM|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchXM|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|equalityChecker:wmBypass0
a[0] => bits[0].IN0
a[1] => bits[1].IN0
a[2] => bits[2].IN0
a[3] => bits[3].IN0
a[4] => bits[4].IN0
b[0] => bits[0].IN1
b[1] => bits[1].IN1
b[2] => bits[2].IN1
b[3] => bits[3].IN1
b[4] => bits[4].IN1
out <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE


|processor|dmem:mydmem
aclr => aclr.IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a
q[16] <= altsyncram:altsyncram_component.q_a
q[17] <= altsyncram:altsyncram_component.q_a
q[18] <= altsyncram:altsyncram_component.q_a
q[19] <= altsyncram:altsyncram_component.q_a
q[20] <= altsyncram:altsyncram_component.q_a
q[21] <= altsyncram:altsyncram_component.q_a
q[22] <= altsyncram:altsyncram_component.q_a
q[23] <= altsyncram:altsyncram_component.q_a
q[24] <= altsyncram:altsyncram_component.q_a
q[25] <= altsyncram:altsyncram_component.q_a
q[26] <= altsyncram:altsyncram_component.q_a
q[27] <= altsyncram:altsyncram_component.q_a
q[28] <= altsyncram:altsyncram_component.q_a
q[29] <= altsyncram:altsyncram_component.q_a
q[30] <= altsyncram:altsyncram_component.q_a
q[31] <= altsyncram:altsyncram_component.q_a


|processor|dmem:mydmem|altsyncram:altsyncram_component
wren_a => altsyncram_p6g1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_p6g1:auto_generated.data_a[0]
data_a[1] => altsyncram_p6g1:auto_generated.data_a[1]
data_a[2] => altsyncram_p6g1:auto_generated.data_a[2]
data_a[3] => altsyncram_p6g1:auto_generated.data_a[3]
data_a[4] => altsyncram_p6g1:auto_generated.data_a[4]
data_a[5] => altsyncram_p6g1:auto_generated.data_a[5]
data_a[6] => altsyncram_p6g1:auto_generated.data_a[6]
data_a[7] => altsyncram_p6g1:auto_generated.data_a[7]
data_a[8] => altsyncram_p6g1:auto_generated.data_a[8]
data_a[9] => altsyncram_p6g1:auto_generated.data_a[9]
data_a[10] => altsyncram_p6g1:auto_generated.data_a[10]
data_a[11] => altsyncram_p6g1:auto_generated.data_a[11]
data_a[12] => altsyncram_p6g1:auto_generated.data_a[12]
data_a[13] => altsyncram_p6g1:auto_generated.data_a[13]
data_a[14] => altsyncram_p6g1:auto_generated.data_a[14]
data_a[15] => altsyncram_p6g1:auto_generated.data_a[15]
data_a[16] => altsyncram_p6g1:auto_generated.data_a[16]
data_a[17] => altsyncram_p6g1:auto_generated.data_a[17]
data_a[18] => altsyncram_p6g1:auto_generated.data_a[18]
data_a[19] => altsyncram_p6g1:auto_generated.data_a[19]
data_a[20] => altsyncram_p6g1:auto_generated.data_a[20]
data_a[21] => altsyncram_p6g1:auto_generated.data_a[21]
data_a[22] => altsyncram_p6g1:auto_generated.data_a[22]
data_a[23] => altsyncram_p6g1:auto_generated.data_a[23]
data_a[24] => altsyncram_p6g1:auto_generated.data_a[24]
data_a[25] => altsyncram_p6g1:auto_generated.data_a[25]
data_a[26] => altsyncram_p6g1:auto_generated.data_a[26]
data_a[27] => altsyncram_p6g1:auto_generated.data_a[27]
data_a[28] => altsyncram_p6g1:auto_generated.data_a[28]
data_a[29] => altsyncram_p6g1:auto_generated.data_a[29]
data_a[30] => altsyncram_p6g1:auto_generated.data_a[30]
data_a[31] => altsyncram_p6g1:auto_generated.data_a[31]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_p6g1:auto_generated.address_a[0]
address_a[1] => altsyncram_p6g1:auto_generated.address_a[1]
address_a[2] => altsyncram_p6g1:auto_generated.address_a[2]
address_a[3] => altsyncram_p6g1:auto_generated.address_a[3]
address_a[4] => altsyncram_p6g1:auto_generated.address_a[4]
address_a[5] => altsyncram_p6g1:auto_generated.address_a[5]
address_a[6] => altsyncram_p6g1:auto_generated.address_a[6]
address_a[7] => altsyncram_p6g1:auto_generated.address_a[7]
address_a[8] => altsyncram_p6g1:auto_generated.address_a[8]
address_a[9] => altsyncram_p6g1:auto_generated.address_a[9]
address_a[10] => altsyncram_p6g1:auto_generated.address_a[10]
address_a[11] => altsyncram_p6g1:auto_generated.address_a[11]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_p6g1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => altsyncram_p6g1:auto_generated.aclr0
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_p6g1:auto_generated.q_a[0]
q_a[1] <= altsyncram_p6g1:auto_generated.q_a[1]
q_a[2] <= altsyncram_p6g1:auto_generated.q_a[2]
q_a[3] <= altsyncram_p6g1:auto_generated.q_a[3]
q_a[4] <= altsyncram_p6g1:auto_generated.q_a[4]
q_a[5] <= altsyncram_p6g1:auto_generated.q_a[5]
q_a[6] <= altsyncram_p6g1:auto_generated.q_a[6]
q_a[7] <= altsyncram_p6g1:auto_generated.q_a[7]
q_a[8] <= altsyncram_p6g1:auto_generated.q_a[8]
q_a[9] <= altsyncram_p6g1:auto_generated.q_a[9]
q_a[10] <= altsyncram_p6g1:auto_generated.q_a[10]
q_a[11] <= altsyncram_p6g1:auto_generated.q_a[11]
q_a[12] <= altsyncram_p6g1:auto_generated.q_a[12]
q_a[13] <= altsyncram_p6g1:auto_generated.q_a[13]
q_a[14] <= altsyncram_p6g1:auto_generated.q_a[14]
q_a[15] <= altsyncram_p6g1:auto_generated.q_a[15]
q_a[16] <= altsyncram_p6g1:auto_generated.q_a[16]
q_a[17] <= altsyncram_p6g1:auto_generated.q_a[17]
q_a[18] <= altsyncram_p6g1:auto_generated.q_a[18]
q_a[19] <= altsyncram_p6g1:auto_generated.q_a[19]
q_a[20] <= altsyncram_p6g1:auto_generated.q_a[20]
q_a[21] <= altsyncram_p6g1:auto_generated.q_a[21]
q_a[22] <= altsyncram_p6g1:auto_generated.q_a[22]
q_a[23] <= altsyncram_p6g1:auto_generated.q_a[23]
q_a[24] <= altsyncram_p6g1:auto_generated.q_a[24]
q_a[25] <= altsyncram_p6g1:auto_generated.q_a[25]
q_a[26] <= altsyncram_p6g1:auto_generated.q_a[26]
q_a[27] <= altsyncram_p6g1:auto_generated.q_a[27]
q_a[28] <= altsyncram_p6g1:auto_generated.q_a[28]
q_a[29] <= altsyncram_p6g1:auto_generated.q_a[29]
q_a[30] <= altsyncram_p6g1:auto_generated.q_a[30]
q_a[31] <= altsyncram_p6g1:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|processor|dmem:mydmem|altsyncram:altsyncram_component|altsyncram_p6g1:auto_generated
aclr0 => ram_block1a0.CLR0
aclr0 => ram_block1a1.CLR0
aclr0 => ram_block1a2.CLR0
aclr0 => ram_block1a3.CLR0
aclr0 => ram_block1a4.CLR0
aclr0 => ram_block1a5.CLR0
aclr0 => ram_block1a6.CLR0
aclr0 => ram_block1a7.CLR0
aclr0 => ram_block1a8.CLR0
aclr0 => ram_block1a9.CLR0
aclr0 => ram_block1a10.CLR0
aclr0 => ram_block1a11.CLR0
aclr0 => ram_block1a12.CLR0
aclr0 => ram_block1a13.CLR0
aclr0 => ram_block1a14.CLR0
aclr0 => ram_block1a15.CLR0
aclr0 => ram_block1a16.CLR0
aclr0 => ram_block1a17.CLR0
aclr0 => ram_block1a18.CLR0
aclr0 => ram_block1a19.CLR0
aclr0 => ram_block1a20.CLR0
aclr0 => ram_block1a21.CLR0
aclr0 => ram_block1a22.CLR0
aclr0 => ram_block1a23.CLR0
aclr0 => ram_block1a24.CLR0
aclr0 => ram_block1a25.CLR0
aclr0 => ram_block1a26.CLR0
aclr0 => ram_block1a27.CLR0
aclr0 => ram_block1a28.CLR0
aclr0 => ram_block1a29.CLR0
aclr0 => ram_block1a30.CLR0
aclr0 => ram_block1a31.CLR0
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[8] => ram_block1a12.PORTAADDR8
address_a[8] => ram_block1a13.PORTAADDR8
address_a[8] => ram_block1a14.PORTAADDR8
address_a[8] => ram_block1a15.PORTAADDR8
address_a[8] => ram_block1a16.PORTAADDR8
address_a[8] => ram_block1a17.PORTAADDR8
address_a[8] => ram_block1a18.PORTAADDR8
address_a[8] => ram_block1a19.PORTAADDR8
address_a[8] => ram_block1a20.PORTAADDR8
address_a[8] => ram_block1a21.PORTAADDR8
address_a[8] => ram_block1a22.PORTAADDR8
address_a[8] => ram_block1a23.PORTAADDR8
address_a[8] => ram_block1a24.PORTAADDR8
address_a[8] => ram_block1a25.PORTAADDR8
address_a[8] => ram_block1a26.PORTAADDR8
address_a[8] => ram_block1a27.PORTAADDR8
address_a[8] => ram_block1a28.PORTAADDR8
address_a[8] => ram_block1a29.PORTAADDR8
address_a[8] => ram_block1a30.PORTAADDR8
address_a[8] => ram_block1a31.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[9] => ram_block1a12.PORTAADDR9
address_a[9] => ram_block1a13.PORTAADDR9
address_a[9] => ram_block1a14.PORTAADDR9
address_a[9] => ram_block1a15.PORTAADDR9
address_a[9] => ram_block1a16.PORTAADDR9
address_a[9] => ram_block1a17.PORTAADDR9
address_a[9] => ram_block1a18.PORTAADDR9
address_a[9] => ram_block1a19.PORTAADDR9
address_a[9] => ram_block1a20.PORTAADDR9
address_a[9] => ram_block1a21.PORTAADDR9
address_a[9] => ram_block1a22.PORTAADDR9
address_a[9] => ram_block1a23.PORTAADDR9
address_a[9] => ram_block1a24.PORTAADDR9
address_a[9] => ram_block1a25.PORTAADDR9
address_a[9] => ram_block1a26.PORTAADDR9
address_a[9] => ram_block1a27.PORTAADDR9
address_a[9] => ram_block1a28.PORTAADDR9
address_a[9] => ram_block1a29.PORTAADDR9
address_a[9] => ram_block1a30.PORTAADDR9
address_a[9] => ram_block1a31.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[10] => ram_block1a12.PORTAADDR10
address_a[10] => ram_block1a13.PORTAADDR10
address_a[10] => ram_block1a14.PORTAADDR10
address_a[10] => ram_block1a15.PORTAADDR10
address_a[10] => ram_block1a16.PORTAADDR10
address_a[10] => ram_block1a17.PORTAADDR10
address_a[10] => ram_block1a18.PORTAADDR10
address_a[10] => ram_block1a19.PORTAADDR10
address_a[10] => ram_block1a20.PORTAADDR10
address_a[10] => ram_block1a21.PORTAADDR10
address_a[10] => ram_block1a22.PORTAADDR10
address_a[10] => ram_block1a23.PORTAADDR10
address_a[10] => ram_block1a24.PORTAADDR10
address_a[10] => ram_block1a25.PORTAADDR10
address_a[10] => ram_block1a26.PORTAADDR10
address_a[10] => ram_block1a27.PORTAADDR10
address_a[10] => ram_block1a28.PORTAADDR10
address_a[10] => ram_block1a29.PORTAADDR10
address_a[10] => ram_block1a30.PORTAADDR10
address_a[10] => ram_block1a31.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[11] => ram_block1a12.PORTAADDR11
address_a[11] => ram_block1a13.PORTAADDR11
address_a[11] => ram_block1a14.PORTAADDR11
address_a[11] => ram_block1a15.PORTAADDR11
address_a[11] => ram_block1a16.PORTAADDR11
address_a[11] => ram_block1a17.PORTAADDR11
address_a[11] => ram_block1a18.PORTAADDR11
address_a[11] => ram_block1a19.PORTAADDR11
address_a[11] => ram_block1a20.PORTAADDR11
address_a[11] => ram_block1a21.PORTAADDR11
address_a[11] => ram_block1a22.PORTAADDR11
address_a[11] => ram_block1a23.PORTAADDR11
address_a[11] => ram_block1a24.PORTAADDR11
address_a[11] => ram_block1a25.PORTAADDR11
address_a[11] => ram_block1a26.PORTAADDR11
address_a[11] => ram_block1a27.PORTAADDR11
address_a[11] => ram_block1a28.PORTAADDR11
address_a[11] => ram_block1a29.PORTAADDR11
address_a[11] => ram_block1a30.PORTAADDR11
address_a[11] => ram_block1a31.PORTAADDR11
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
data_a[8] => ram_block1a8.PORTADATAIN
data_a[9] => ram_block1a9.PORTADATAIN
data_a[10] => ram_block1a10.PORTADATAIN
data_a[11] => ram_block1a11.PORTADATAIN
data_a[12] => ram_block1a12.PORTADATAIN
data_a[13] => ram_block1a13.PORTADATAIN
data_a[14] => ram_block1a14.PORTADATAIN
data_a[15] => ram_block1a15.PORTADATAIN
data_a[16] => ram_block1a16.PORTADATAIN
data_a[17] => ram_block1a17.PORTADATAIN
data_a[18] => ram_block1a18.PORTADATAIN
data_a[19] => ram_block1a19.PORTADATAIN
data_a[20] => ram_block1a20.PORTADATAIN
data_a[21] => ram_block1a21.PORTADATAIN
data_a[22] => ram_block1a22.PORTADATAIN
data_a[23] => ram_block1a23.PORTADATAIN
data_a[24] => ram_block1a24.PORTADATAIN
data_a[25] => ram_block1a25.PORTADATAIN
data_a[26] => ram_block1a26.PORTADATAIN
data_a[27] => ram_block1a27.PORTADATAIN
data_a[28] => ram_block1a28.PORTADATAIN
data_a[29] => ram_block1a29.PORTADATAIN
data_a[30] => ram_block1a30.PORTADATAIN
data_a[31] => ram_block1a31.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a8.PORTAWE
wren_a => ram_block1a9.PORTAWE
wren_a => ram_block1a10.PORTAWE
wren_a => ram_block1a11.PORTAWE
wren_a => ram_block1a12.PORTAWE
wren_a => ram_block1a13.PORTAWE
wren_a => ram_block1a14.PORTAWE
wren_a => ram_block1a15.PORTAWE
wren_a => ram_block1a16.PORTAWE
wren_a => ram_block1a17.PORTAWE
wren_a => ram_block1a18.PORTAWE
wren_a => ram_block1a19.PORTAWE
wren_a => ram_block1a20.PORTAWE
wren_a => ram_block1a21.PORTAWE
wren_a => ram_block1a22.PORTAWE
wren_a => ram_block1a23.PORTAWE
wren_a => ram_block1a24.PORTAWE
wren_a => ram_block1a25.PORTAWE
wren_a => ram_block1a26.PORTAWE
wren_a => ram_block1a27.PORTAWE
wren_a => ram_block1a28.PORTAWE
wren_a => ram_block1a29.PORTAWE
wren_a => ram_block1a30.PORTAWE
wren_a => ram_block1a31.PORTAWE


|processor|pipelineLatch:latchMW
clock => clock.IN7
enable => enable.IN7
reset => reset.IN6
pc0[0] => pc0[0].IN1
pc0[1] => pc0[1].IN1
pc0[2] => pc0[2].IN1
pc0[3] => pc0[3].IN1
pc0[4] => pc0[4].IN1
pc0[5] => pc0[5].IN1
pc0[6] => pc0[6].IN1
pc0[7] => pc0[7].IN1
pc0[8] => pc0[8].IN1
pc0[9] => pc0[9].IN1
pc0[10] => pc0[10].IN1
pc0[11] => pc0[11].IN1
pc0[12] => pc0[12].IN1
pc0[13] => pc0[13].IN1
pc0[14] => pc0[14].IN1
pc0[15] => pc0[15].IN1
pc0[16] => pc0[16].IN1
pc0[17] => pc0[17].IN1
pc0[18] => pc0[18].IN1
pc0[19] => pc0[19].IN1
pc0[20] => pc0[20].IN1
pc0[21] => pc0[21].IN1
pc0[22] => pc0[22].IN1
pc0[23] => pc0[23].IN1
pc0[24] => pc0[24].IN1
pc0[25] => pc0[25].IN1
pc0[26] => pc0[26].IN1
pc0[27] => pc0[27].IN1
pc0[28] => pc0[28].IN1
pc0[29] => pc0[29].IN1
pc0[30] => pc0[30].IN1
pc0[31] => pc0[31].IN1
opcode0[0] => opTarget0[27].IN1
opcode0[1] => opTarget0[28].IN1
opcode0[2] => opTarget0[29].IN1
opcode0[3] => opTarget0[30].IN1
opcode0[4] => opTarget0[31].IN1
rd0[0] => decodeCtrl0[27].IN1
rd0[1] => decodeCtrl0[28].IN1
rd0[2] => decodeCtrl0[29].IN1
rd0[3] => decodeCtrl0[30].IN1
rd0[4] => decodeCtrl0[31].IN1
rs0[0] => decodeCtrl0[22].IN1
rs0[1] => decodeCtrl0[23].IN1
rs0[2] => decodeCtrl0[24].IN1
rs0[3] => decodeCtrl0[25].IN1
rs0[4] => decodeCtrl0[26].IN1
rt0[0] => decodeCtrl0[17].IN1
rt0[1] => decodeCtrl0[18].IN1
rt0[2] => decodeCtrl0[19].IN1
rt0[3] => decodeCtrl0[20].IN1
rt0[4] => decodeCtrl0[21].IN1
shamt0[0] => decodeCtrl0[12].IN1
shamt0[1] => decodeCtrl0[13].IN1
shamt0[2] => decodeCtrl0[14].IN1
shamt0[3] => decodeCtrl0[15].IN1
shamt0[4] => decodeCtrl0[16].IN1
aluOp0[0] => decodeCtrl0[9].IN1
aluOp0[1] => decodeCtrl0[10].IN1
aluOp0[2] => decodeCtrl0[11].IN1
aluOp0[3] => ~NO_FANOUT~
aluOp0[4] => ~NO_FANOUT~
imm0[0] => imm0[0].IN1
imm0[1] => imm0[1].IN1
imm0[2] => imm0[2].IN1
imm0[3] => imm0[3].IN1
imm0[4] => imm0[4].IN1
imm0[5] => imm0[5].IN1
imm0[6] => imm0[6].IN1
imm0[7] => imm0[7].IN1
imm0[8] => imm0[8].IN1
imm0[9] => imm0[9].IN1
imm0[10] => imm0[10].IN1
imm0[11] => imm0[11].IN1
imm0[12] => imm0[12].IN1
imm0[13] => imm0[13].IN1
imm0[14] => imm0[14].IN1
imm0[15] => imm0[15].IN1
imm0[16] => imm0[16].IN1
imm0[17] => imm0[17].IN1
imm0[18] => imm0[18].IN1
imm0[19] => imm0[19].IN1
imm0[20] => imm0[20].IN1
imm0[21] => imm0[21].IN1
imm0[22] => imm0[22].IN1
imm0[23] => imm0[23].IN1
imm0[24] => imm0[24].IN1
imm0[25] => imm0[25].IN1
imm0[26] => imm0[26].IN1
imm0[27] => imm0[27].IN1
imm0[28] => imm0[28].IN1
imm0[29] => imm0[29].IN1
imm0[30] => imm0[30].IN1
imm0[31] => imm0[31].IN1
target0[0] => opTarget0[0].IN1
target0[1] => opTarget0[1].IN1
target0[2] => opTarget0[2].IN1
target0[3] => opTarget0[3].IN1
target0[4] => opTarget0[4].IN1
target0[5] => opTarget0[5].IN1
target0[6] => opTarget0[6].IN1
target0[7] => opTarget0[7].IN1
target0[8] => opTarget0[8].IN1
target0[9] => opTarget0[9].IN1
target0[10] => opTarget0[10].IN1
target0[11] => opTarget0[11].IN1
target0[12] => opTarget0[12].IN1
target0[13] => opTarget0[13].IN1
target0[14] => opTarget0[14].IN1
target0[15] => opTarget0[15].IN1
target0[16] => opTarget0[16].IN1
target0[17] => opTarget0[17].IN1
target0[18] => opTarget0[18].IN1
target0[19] => opTarget0[19].IN1
target0[20] => opTarget0[20].IN1
target0[21] => opTarget0[21].IN1
target0[22] => opTarget0[22].IN1
target0[23] => opTarget0[23].IN1
target0[24] => opTarget0[24].IN1
target0[25] => opTarget0[25].IN1
target0[26] => opTarget0[26].IN1
target0[27] => ~NO_FANOUT~
target0[28] => ~NO_FANOUT~
target0[29] => ~NO_FANOUT~
target0[30] => ~NO_FANOUT~
target0[31] => ~NO_FANOUT~
regWriteEn0 => decodeCtrl0[8].IN1
aluInB0 => decodeCtrl0[7].IN1
jumpCtrl0[0] => decodeCtrl0[5].IN1
jumpCtrl0[1] => decodeCtrl0[6].IN1
branchCtrl0[0] => decodeCtrl0[3].IN1
branchCtrl0[1] => decodeCtrl0[4].IN1
loadData0 => decodeCtrl0[2].IN1
storeData0 => decodeCtrl0[1].IN1
setxCtrl0 => decodeCtrl0[0].IN1
execError0 => execError0.IN1
valA0[0] => valA0[0].IN1
valA0[1] => valA0[1].IN1
valA0[2] => valA0[2].IN1
valA0[3] => valA0[3].IN1
valA0[4] => valA0[4].IN1
valA0[5] => valA0[5].IN1
valA0[6] => valA0[6].IN1
valA0[7] => valA0[7].IN1
valA0[8] => valA0[8].IN1
valA0[9] => valA0[9].IN1
valA0[10] => valA0[10].IN1
valA0[11] => valA0[11].IN1
valA0[12] => valA0[12].IN1
valA0[13] => valA0[13].IN1
valA0[14] => valA0[14].IN1
valA0[15] => valA0[15].IN1
valA0[16] => valA0[16].IN1
valA0[17] => valA0[17].IN1
valA0[18] => valA0[18].IN1
valA0[19] => valA0[19].IN1
valA0[20] => valA0[20].IN1
valA0[21] => valA0[21].IN1
valA0[22] => valA0[22].IN1
valA0[23] => valA0[23].IN1
valA0[24] => valA0[24].IN1
valA0[25] => valA0[25].IN1
valA0[26] => valA0[26].IN1
valA0[27] => valA0[27].IN1
valA0[28] => valA0[28].IN1
valA0[29] => valA0[29].IN1
valA0[30] => valA0[30].IN1
valA0[31] => valA0[31].IN1
valB0[0] => valB0[0].IN1
valB0[1] => valB0[1].IN1
valB0[2] => valB0[2].IN1
valB0[3] => valB0[3].IN1
valB0[4] => valB0[4].IN1
valB0[5] => valB0[5].IN1
valB0[6] => valB0[6].IN1
valB0[7] => valB0[7].IN1
valB0[8] => valB0[8].IN1
valB0[9] => valB0[9].IN1
valB0[10] => valB0[10].IN1
valB0[11] => valB0[11].IN1
valB0[12] => valB0[12].IN1
valB0[13] => valB0[13].IN1
valB0[14] => valB0[14].IN1
valB0[15] => valB0[15].IN1
valB0[16] => valB0[16].IN1
valB0[17] => valB0[17].IN1
valB0[18] => valB0[18].IN1
valB0[19] => valB0[19].IN1
valB0[20] => valB0[20].IN1
valB0[21] => valB0[21].IN1
valB0[22] => valB0[22].IN1
valB0[23] => valB0[23].IN1
valB0[24] => valB0[24].IN1
valB0[25] => valB0[25].IN1
valB0[26] => valB0[26].IN1
valB0[27] => valB0[27].IN1
valB0[28] => valB0[28].IN1
valB0[29] => valB0[29].IN1
valB0[30] => valB0[30].IN1
valB0[31] => valB0[31].IN1
pc1[0] <= register:pcReg.out
pc1[1] <= register:pcReg.out
pc1[2] <= register:pcReg.out
pc1[3] <= register:pcReg.out
pc1[4] <= register:pcReg.out
pc1[5] <= register:pcReg.out
pc1[6] <= register:pcReg.out
pc1[7] <= register:pcReg.out
pc1[8] <= register:pcReg.out
pc1[9] <= register:pcReg.out
pc1[10] <= register:pcReg.out
pc1[11] <= register:pcReg.out
pc1[12] <= register:pcReg.out
pc1[13] <= register:pcReg.out
pc1[14] <= register:pcReg.out
pc1[15] <= register:pcReg.out
pc1[16] <= register:pcReg.out
pc1[17] <= register:pcReg.out
pc1[18] <= register:pcReg.out
pc1[19] <= register:pcReg.out
pc1[20] <= register:pcReg.out
pc1[21] <= register:pcReg.out
pc1[22] <= register:pcReg.out
pc1[23] <= register:pcReg.out
pc1[24] <= register:pcReg.out
pc1[25] <= register:pcReg.out
pc1[26] <= register:pcReg.out
pc1[27] <= register:pcReg.out
pc1[28] <= register:pcReg.out
pc1[29] <= register:pcReg.out
pc1[30] <= register:pcReg.out
pc1[31] <= register:pcReg.out
opcode1[0] <= register:opTargetReg.out
opcode1[1] <= register:opTargetReg.out
opcode1[2] <= register:opTargetReg.out
opcode1[3] <= register:opTargetReg.out
opcode1[4] <= register:opTargetReg.out
rd1[0] <= register:decodeCtrlReg.out
rd1[1] <= register:decodeCtrlReg.out
rd1[2] <= register:decodeCtrlReg.out
rd1[3] <= register:decodeCtrlReg.out
rd1[4] <= register:decodeCtrlReg.out
rs1[0] <= register:decodeCtrlReg.out
rs1[1] <= register:decodeCtrlReg.out
rs1[2] <= register:decodeCtrlReg.out
rs1[3] <= register:decodeCtrlReg.out
rs1[4] <= register:decodeCtrlReg.out
rt1[0] <= register:decodeCtrlReg.out
rt1[1] <= register:decodeCtrlReg.out
rt1[2] <= register:decodeCtrlReg.out
rt1[3] <= register:decodeCtrlReg.out
rt1[4] <= register:decodeCtrlReg.out
shamt1[0] <= register:decodeCtrlReg.out
shamt1[1] <= register:decodeCtrlReg.out
shamt1[2] <= register:decodeCtrlReg.out
shamt1[3] <= register:decodeCtrlReg.out
shamt1[4] <= register:decodeCtrlReg.out
aluOp1[0] <= register:decodeCtrlReg.out
aluOp1[1] <= register:decodeCtrlReg.out
aluOp1[2] <= register:decodeCtrlReg.out
aluOp1[3] <= <GND>
aluOp1[4] <= <GND>
imm1[0] <= register:immReg.out
imm1[1] <= register:immReg.out
imm1[2] <= register:immReg.out
imm1[3] <= register:immReg.out
imm1[4] <= register:immReg.out
imm1[5] <= register:immReg.out
imm1[6] <= register:immReg.out
imm1[7] <= register:immReg.out
imm1[8] <= register:immReg.out
imm1[9] <= register:immReg.out
imm1[10] <= register:immReg.out
imm1[11] <= register:immReg.out
imm1[12] <= register:immReg.out
imm1[13] <= register:immReg.out
imm1[14] <= register:immReg.out
imm1[15] <= register:immReg.out
imm1[16] <= register:immReg.out
imm1[17] <= register:immReg.out
imm1[18] <= register:immReg.out
imm1[19] <= register:immReg.out
imm1[20] <= register:immReg.out
imm1[21] <= register:immReg.out
imm1[22] <= register:immReg.out
imm1[23] <= register:immReg.out
imm1[24] <= register:immReg.out
imm1[25] <= register:immReg.out
imm1[26] <= register:immReg.out
imm1[27] <= register:immReg.out
imm1[28] <= register:immReg.out
imm1[29] <= register:immReg.out
imm1[30] <= register:immReg.out
imm1[31] <= register:immReg.out
target1[0] <= register:opTargetReg.out
target1[1] <= register:opTargetReg.out
target1[2] <= register:opTargetReg.out
target1[3] <= register:opTargetReg.out
target1[4] <= register:opTargetReg.out
target1[5] <= register:opTargetReg.out
target1[6] <= register:opTargetReg.out
target1[7] <= register:opTargetReg.out
target1[8] <= register:opTargetReg.out
target1[9] <= register:opTargetReg.out
target1[10] <= register:opTargetReg.out
target1[11] <= register:opTargetReg.out
target1[12] <= register:opTargetReg.out
target1[13] <= register:opTargetReg.out
target1[14] <= register:opTargetReg.out
target1[15] <= register:opTargetReg.out
target1[16] <= register:opTargetReg.out
target1[17] <= register:opTargetReg.out
target1[18] <= register:opTargetReg.out
target1[19] <= register:opTargetReg.out
target1[20] <= register:opTargetReg.out
target1[21] <= register:opTargetReg.out
target1[22] <= register:opTargetReg.out
target1[23] <= register:opTargetReg.out
target1[24] <= register:opTargetReg.out
target1[25] <= register:opTargetReg.out
target1[26] <= register:opTargetReg.out
target1[27] <= <GND>
target1[28] <= <GND>
target1[29] <= <GND>
target1[30] <= <GND>
target1[31] <= <GND>
regWriteEn1 <= register:decodeCtrlReg.out
aluInB1 <= register:decodeCtrlReg.out
jumpCtrl1[0] <= register:decodeCtrlReg.out
jumpCtrl1[1] <= register:decodeCtrlReg.out
branchCtrl1[0] <= register:decodeCtrlReg.out
branchCtrl1[1] <= register:decodeCtrlReg.out
loadData1 <= register:decodeCtrlReg.out
storeData1 <= register:decodeCtrlReg.out
setxCtrl1 <= register:decodeCtrlReg.out
execError1 <= ecedffe:errorReg.q
valA1[0] <= register:valAReg.out
valA1[1] <= register:valAReg.out
valA1[2] <= register:valAReg.out
valA1[3] <= register:valAReg.out
valA1[4] <= register:valAReg.out
valA1[5] <= register:valAReg.out
valA1[6] <= register:valAReg.out
valA1[7] <= register:valAReg.out
valA1[8] <= register:valAReg.out
valA1[9] <= register:valAReg.out
valA1[10] <= register:valAReg.out
valA1[11] <= register:valAReg.out
valA1[12] <= register:valAReg.out
valA1[13] <= register:valAReg.out
valA1[14] <= register:valAReg.out
valA1[15] <= register:valAReg.out
valA1[16] <= register:valAReg.out
valA1[17] <= register:valAReg.out
valA1[18] <= register:valAReg.out
valA1[19] <= register:valAReg.out
valA1[20] <= register:valAReg.out
valA1[21] <= register:valAReg.out
valA1[22] <= register:valAReg.out
valA1[23] <= register:valAReg.out
valA1[24] <= register:valAReg.out
valA1[25] <= register:valAReg.out
valA1[26] <= register:valAReg.out
valA1[27] <= register:valAReg.out
valA1[28] <= register:valAReg.out
valA1[29] <= register:valAReg.out
valA1[30] <= register:valAReg.out
valA1[31] <= register:valAReg.out
valB1[0] <= register:valBReg.out
valB1[1] <= register:valBReg.out
valB1[2] <= register:valBReg.out
valB1[3] <= register:valBReg.out
valB1[4] <= register:valBReg.out
valB1[5] <= register:valBReg.out
valB1[6] <= register:valBReg.out
valB1[7] <= register:valBReg.out
valB1[8] <= register:valBReg.out
valB1[9] <= register:valBReg.out
valB1[10] <= register:valBReg.out
valB1[11] <= register:valBReg.out
valB1[12] <= register:valBReg.out
valB1[13] <= register:valBReg.out
valB1[14] <= register:valBReg.out
valB1[15] <= register:valBReg.out
valB1[16] <= register:valBReg.out
valB1[17] <= register:valBReg.out
valB1[18] <= register:valBReg.out
valB1[19] <= register:valBReg.out
valB1[20] <= register:valBReg.out
valB1[21] <= register:valBReg.out
valB1[22] <= register:valBReg.out
valB1[23] <= register:valBReg.out
valB1[24] <= register:valBReg.out
valB1[25] <= register:valBReg.out
valB1[26] <= register:valBReg.out
valB1[27] <= register:valBReg.out
valB1[28] <= register:valBReg.out
valB1[29] <= register:valBReg.out
valB1[30] <= register:valBReg.out
valB1[31] <= register:valBReg.out


|processor|pipelineLatch:latchMW|register:decodeCtrlReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:decodeCtrlReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:opTargetReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:pcReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:immReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valAReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
data[24] => data[24].IN1
data[25] => data[25].IN1
data[26] => data[26].IN1
data[27] => data[27].IN1
data[28] => data[28].IN1
data[29] => data[29].IN1
data[30] => data[30].IN1
data[31] => data[31].IN1
clock => clock.IN32
enable => enable.IN32
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
reset => _.IN1
out[0] <= ecedffe:ffLoop[0].my_dff.q
out[1] <= ecedffe:ffLoop[1].my_dff.q
out[2] <= ecedffe:ffLoop[2].my_dff.q
out[3] <= ecedffe:ffLoop[3].my_dff.q
out[4] <= ecedffe:ffLoop[4].my_dff.q
out[5] <= ecedffe:ffLoop[5].my_dff.q
out[6] <= ecedffe:ffLoop[6].my_dff.q
out[7] <= ecedffe:ffLoop[7].my_dff.q
out[8] <= ecedffe:ffLoop[8].my_dff.q
out[9] <= ecedffe:ffLoop[9].my_dff.q
out[10] <= ecedffe:ffLoop[10].my_dff.q
out[11] <= ecedffe:ffLoop[11].my_dff.q
out[12] <= ecedffe:ffLoop[12].my_dff.q
out[13] <= ecedffe:ffLoop[13].my_dff.q
out[14] <= ecedffe:ffLoop[14].my_dff.q
out[15] <= ecedffe:ffLoop[15].my_dff.q
out[16] <= ecedffe:ffLoop[16].my_dff.q
out[17] <= ecedffe:ffLoop[17].my_dff.q
out[18] <= ecedffe:ffLoop[18].my_dff.q
out[19] <= ecedffe:ffLoop[19].my_dff.q
out[20] <= ecedffe:ffLoop[20].my_dff.q
out[21] <= ecedffe:ffLoop[21].my_dff.q
out[22] <= ecedffe:ffLoop[22].my_dff.q
out[23] <= ecedffe:ffLoop[23].my_dff.q
out[24] <= ecedffe:ffLoop[24].my_dff.q
out[25] <= ecedffe:ffLoop[25].my_dff.q
out[26] <= ecedffe:ffLoop[26].my_dff.q
out[27] <= ecedffe:ffLoop[27].my_dff.q
out[28] <= ecedffe:ffLoop[28].my_dff.q
out[29] <= ecedffe:ffLoop[29].my_dff.q
out[30] <= ecedffe:ffLoop[30].my_dff.q
out[31] <= ecedffe:ffLoop[31].my_dff.q


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[0].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[1].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[2].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[3].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[4].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[5].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[6].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[7].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[8].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[9].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[10].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[11].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[12].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[13].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[14].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[15].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[16].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[17].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[18].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[19].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[20].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[21].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[22].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[23].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[24].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[25].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[26].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[27].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[28].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[29].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[30].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|register:valBReg|ecedffe:ffLoop[31].my_dff
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|pipelineLatch:latchMW|ecedffe:errorReg
d => q~reg0.DATAIN
clk => q~reg0.CLK
clrn => q~reg0.ACLR
ena => q~reg0.ENA
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|fiveBitmux4to1:regW
in0[0] => out[0].DATAIN
in0[1] => out[1].DATAIN
in0[2] => out[2].DATAIN
in0[3] => out[3].DATAIN
in0[4] => out[4].DATAIN
in1[0] => out[0].DATAIN
in1[1] => out[1].DATAIN
in1[2] => out[2].DATAIN
in1[3] => out[3].DATAIN
in1[4] => out[4].DATAIN
in2[0] => out[0].DATAIN
in2[1] => out[1].DATAIN
in2[2] => out[2].DATAIN
in2[3] => out[3].DATAIN
in2[4] => out[4].DATAIN
in3[0] => out[0].DATAIN
in3[1] => out[1].DATAIN
in3[2] => out[2].DATAIN
in3[3] => out[3].DATAIN
in3[4] => out[4].DATAIN
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[0] => out.IN0
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
sel[1] => out.IN1
out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE


